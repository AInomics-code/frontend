{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Replit.md\n\n## Overview\n\nThis is a full-stack web application built with Express.js backend and React frontend, designed as a conversational AI interface for business intelligence queries. The application uses PostgreSQL with Drizzle ORM for data persistence and provides a chat-like interface for users to interact with business data and analytics.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized production builds\n- **UI Framework**: Shadcn/ui components built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom design system\n- **State Management**: TanStack Query (React Query) for server state management\n- **Routing**: Wouter for lightweight client-side routing\n\n### Backend Architecture\n- **Runtime**: Node.js 20 with TypeScript\n- **Framework**: Express.js with ES modules\n- **Database ORM**: Drizzle ORM with PostgreSQL dialect\n- **Database Provider**: Neon serverless PostgreSQL\n- **API Design**: RESTful endpoints for conversations and messages\n- **Development**: TSX for TypeScript execution in development\n\n## Key Components\n\n### Database Schema\n- **Conversations Table**: Stores chat conversation metadata (id, title, timestamps)\n- **Messages Table**: Stores individual messages with role (user/assistant) and content\n- Utilizes Drizzle's schema validation with Zod integration\n\n### Chat Interface\n- Real-time typing animation for AI responses\n- Message persistence across sessions\n- Support for rich text formatting and business intelligence visualizations\n- Voice input capabilities (when supported by browser)\n- Responsive design optimized for business dashboard usage\n\n### Business Intelligence Integration\n- AI-powered query analysis for business metrics\n- Performance celebrations with confetti animations\n- Specialized prompt generators for common business questions\n- KPI dashboard with real-time metrics\n- Integration with business context data (products, sales, clients)\n\n### Storage Layer\n- In-memory storage implementation for development\n- Database migrations managed through Drizzle Kit\n- Conversation and message CRUD operations\n- Automatic timestamp management\n\n## Data Flow\n\n1. **User Input**: Messages entered through chat interface\n2. **Frontend Processing**: React Query handles API calls and state management\n3. **Backend Processing**: Express routes validate and process requests\n4. **AI Processing**: Business intelligence analysis of user queries\n5. **Data Persistence**: Messages stored in PostgreSQL via Drizzle ORM\n6. **Response Delivery**: Typed responses streamed back to frontend\n7. **UI Updates**: Real-time updates with typing animations and celebrations\n\n## External Dependencies\n\n### Core Dependencies\n- **Database**: Neon serverless PostgreSQL for cloud-hosted database\n- **AI Services**: OpenAI API integration for intelligent responses\n- **UI Components**: Radix UI primitives for accessible component foundation\n- **Font**: Google Fonts (Inter) for consistent typography\n\n### Development Tools\n- **Type Safety**: TypeScript across entire stack\n- **Code Quality**: ESM modules with strict TypeScript configuration\n- **Hot Reload**: Vite HMR for rapid development iteration\n- **Path Aliases**: Configured for clean import statements\n\n### Production Dependencies\n- **Build Process**: Vite for frontend, esbuild for backend bundling\n- **Session Management**: Connect-pg-simple for PostgreSQL session storage\n- **Error Handling**: Runtime error overlays in development\n\n## Deployment Strategy\n\n### Replit Configuration\n- **Environment**: Node.js 20, Web, PostgreSQL 16 modules\n- **Development**: `npm run dev` for concurrent frontend/backend development\n- **Production Build**: `npm run build` creates optimized bundles\n- **Deployment**: Autoscale deployment target with proper port configuration\n\n### Environment Setup\n- **Database URL**: Required environment variable for PostgreSQL connection\n- **OpenAI API Key**: Optional for AI functionality\n- **Port Configuration**: Frontend served on port 5000, backend API integrated\n\n### Build Process\n1. Frontend builds to `dist/public` directory\n2. Backend bundles to `dist/index.js`\n3. Static assets served by Express in production\n4. Database migrations applied via `npm run db:push`\n\n## Changelog\n```\nChangelog:\n- June 16, 2025. Initial setup\n- June 17, 2025. Complete Spanish localization implemented\n  * All UI components translated to Spanish\n  * KPI dashboard with realistic La Doña business data\n  * BI sidebar with Spanish translations for Performance/Risks/Opportunities\n  * Prompt generator with Spanish business questions\n  * Chat interface and message components localized\n  * AI response system configured for automatic Spanish detection and responses\n  * All KPI cards, metrics, and business insights fully translated\n  * Enhanced Spanish keyword detection for business queries\n  * Interface components completely localized (Performance Score, Zones at Risk, Product Opportunity)\n  * All user interaction text translated to Spanish\n  * Spanish FAQ responses expanded to match English depth and analytical quality\n  * Three critical business questions now have comprehensive Spanish responses:\n    - Budget variance analysis with full financial breakdown\n    - Product rotation analysis with actionable recovery plans  \n    - Promotional performance analysis with strategic recommendations\n  * Complete dynamic language switching implemented (ES/EN toggle)\n  * All interface elements update in real-time when language is switched\n  * Backend respects language preference for AI responses\n  * KPI cards, metrics, and all UI text fully responsive to language selection\n- June 19, 2025. Enhanced proactive business intelligence capabilities\n  * AI configured as proactive business intelligence assistant for executive decision-making\n  * Default focus on sales performance, market trends, and operational data\n  * Executive-friendly responses with actionable next steps and follow-up questions\n  * Business-first approach to product inquiries using ERP/POS/CRM data sources\n  * Comprehensive analysis capability for complex business questions with multi-layered responses\n  * Advanced analytics covering financial modeling, forecasting, market intelligence, and strategic planning\n  * Enhanced business context data to support all suggested prompts with authentic La Doña metrics\n  * Complete coverage of critical, strategic, and operational business questions with actionable insights\n- July 28, 2025. Authentication flow implementation\n  * Added framer-motion for smooth animations\n  * Created complete login page with form validation\n  * Built signup page with password confirmation\n  * Implemented multi-step onboarding flow with industry selection, use case mapping, and data source connection\n  * Updated routing structure to support authentication workflow: /login -> /signup -> /onboarding -> /dashboard\n  * Integrated Wouter routing for seamless navigation between auth pages\n- July 29, 2025. Complete dark blue theme implementation\n  * Eliminated all white backgrounds across entire application\n  * Updated login page with dark blue gradient background and blue-themed form elements\n  * Converted signup page to use consistent dark blue theme with blue accent colors\n  * Transformed onboarding pages to use slate-800/slate-900 backgrounds with blue highlights\n  * Updated chat pages (chat-clean.tsx) to use dark blue gradients and blue accent elements\n  * Modified 404 page to use dark theme with blue card styling\n  * Applied consistent color scheme: dark blue gradients for backgrounds, slate colors for cards, blue accents for interactive elements\n  * All text colors updated to white/blue-200 for optimal contrast on dark backgrounds\n  * Created simplified MainDashboard with Microsoft Copilot-style structure: brand section, toggle buttons, KPI cards, and input bar\n  * Implemented clean dashboard with mock data for KPIs and prompts, maintaining dark blue theme consistency\n- July 30, 2025. Enterprise-level design overhaul for onboarding\n  * Complete redesign to enterprise-level monochromatic styling similar to Microsoft/Salesforce\n  * Eliminated all colorful gradients and fading colors in favor of clean slate grays\n  * Removed percentage display from progress bar (now shows step counter only)\n  * Professional copy and content improvements - eliminated unprofessional language\n  * Compact, properly-sized design that fits correctly on page\n  * Enterprise navigation buttons with clean borders and hover states\n  * Professional typography using Segoe UI font family\n  * Monochromatic Business Intelligence Setup step with clean form layouts\n  * Maintained dark theme while achieving enterprise-level professionalism\n- August 12, 2025. Advanced Collaboration Hub with Context Panel Integration\n  * Completely transformed collaboration page UI with sophisticated glassmorphism design\n  * Implemented centered container layout (max-width: 1280px) with proper spacing tokens\n  * Added sticky sub-header with filters (All/Mentions/Unread), search input, and notification counter\n  * Created smart chip system for automatic entity detection (#kpi:name, #zone:location, #product:item, #report:title)\n  * Built comprehensive CommentCard component with thread structure, avatars, online status indicators, and quick action buttons\n  * Implemented slide-over Context Panel (480px width) with tabs: Overview, Chart, Report, Actions\n  * Added sparkline charts, entity metadata display, and actionable CTA buttons in context panel\n  * Enhanced composer with @mention autocompletion, #tag suggestions, and /slash commands\n  * Integrated futuristic micro-interactions: hover glow effects, springy animations, and smooth transitions\n  * Implemented lightweight event bus system for coordination between components\n  * Added toast notification system for user feedback (Task created, Assigned, Scenario queued)\n  * Created comprehensive entity data system linking comments to KPIs, zones, products, and reports\n  * All components maintain accessibility (keyboard focus, Esc key handling) and responsive design\n- August 12, 2025. Enterprise-Grade AI Scenario Simulator Implementation\n  * Complete redesign with enterprise-level organization: grouped inputs into Demand & Pricing, Promotions & Marketing, and Supply Chain sections\n  * Added comprehensive tooltip system with Info icons explaining each variable's business impact\n  * Implemented unified action button styling using consistent blue theme across Save, Export PDF, and Add Task functions\n  * Enhanced results display with side-by-side Current vs Simulated metrics showing percentage changes and delta indicators\n  * Integrated intelligent insights system providing contextual explanations for each metric change\n  * Added automated recommendation engine suggesting actionable next steps based on simulation results\n  * Created collapsible Model Assumptions section displaying calculation formulas in plain language for transparency\n  * Added marketing spend variable to promotions section for comprehensive campaign modeling\n  * Implemented professional styling with custom slider design, consistent spacing, and enterprise color palette\n  * Enhanced entity data with teamMembers export for collaboration features integration\n  * Added navigation icons to both main dashboard and collaboration page sidebars for easy access\n- August 13, 2025. Critical Bug Fixes and User Experience Enhancements\n  * Fixed critical TypeScript compilation errors in MainDashboard component preventing application startup\n  * Recreated clean MainDashboard.tsx with proper syntax structure and maintained all existing functionality\n  * Added vortex animation CSS for VORTA brand icon with smooth rotation effects\n  * Implemented \"Skip to Dashboard\" button on both login page and onboarding welcome screen for immediate platform access\n  * Completely transformed backorder analysis from retrospective comparison to forward-looking predictive assessment\n  * New predictive analysis shows August expected loss of $527K with prevention potential of $341K and specific ROI calculations\n  * Added three-tier action plan with emergency procurement (ROI: 14,525%), dynamic reorder adjustment (18-day payback), and demand signal enhancement ($1.2M annual savings)\n  * Analysis now provides net value creation of +$670K through proactive prevention strategies\n  * Maintained enterprise-grade styling and animations throughout user interface\n  * All AI Copilot features, backorder analysis, and chat functionality preserved and functional\n```\n\n## User Preferences\n```\nPreferred communication style: Simple, everyday language.\nLanguage: Spanish localization for all user-facing content.\nData requirements: Use realistic La Doña condiment business data.\n```","size_bytes":12810},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2787},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"server/ai-functions-backup.ts":{"content":"import OpenAI from \"openai\";\nimport { buildBusinessContext } from \"./business-context\";\n\n// Initialize OpenAI client only when API key is available\nconst getOpenAIClient = () => {\n  if (!process.env.OPENAI_API_KEY) {\n    throw new Error(\"OpenAI API key not configured\");\n  }\n  return new OpenAI({\n    apiKey: process.env.OPENAI_API_KEY,\n  });\n};\n\n// Direct response function using authentic La Doña data with structured format\nfunction getDirectBusinessResponse(question: string): string {\n  const lowerQuestion = question.toLowerCase();\n  \n  // Add randomization and context awareness to responses\n  const responseVariants = {\n    product: ['analysis', 'deep dive', 'intelligence report', 'performance review', 'strategic assessment'],\n    financial: ['overview', 'deep dive', 'analysis', 'intelligence brief', 'financial review'],\n    sales: ['report', 'intelligence brief', 'performance analysis', 'strategic review', 'assessment'],\n    client: ['analysis', 'review', 'intelligence brief', 'performance evaluation', 'strategic assessment']\n  };\n  \n  const getRandomVariant = (type: string) => {\n    const variants = responseVariants[type as keyof typeof responseVariants] || ['analysis'];\n    return variants[Math.floor(Math.random() * variants.length)];\n  };\n  \n  // Product performance queries with dynamic responses\n  if (lowerQuestion.includes('anis estrella') || lowerQuestion.includes('worst') || lowerQuestion.includes('underperform') || lowerQuestion.includes('product')) {\n    const variant = getRandomVariant('product');\n    const analysisType = Math.random() > 0.5 ? 'Deep Analysis' : 'Strategic Assessment';\n    \n    // Vary the focus and data points based on context\n    if (lowerQuestion.includes('trend') || lowerQuestion.includes('recent')) {\n      return `**High-Value Product Opportunities Analysis**\nMarket dynamics reveal exceptional profit maximization opportunities across our spice portfolio. Consumer preference shifts create <span class=\"performance-positive\">$2.3M untapped revenue potential</span> through strategic repositioning. Our reformulation initiatives show <span class=\"performance-positive\">early success with 40% acceptance rates</span> driving premium pricing opportunities.\n\n**Revenue Maximization Opportunities**\n- Premium market positioning: <span class=\"key-point\">23% demand increase for premium spice blends</span> supports 35% margin uplift\n- Organic market expansion: <span class=\"performance-positive\">15% growth in organic requests</span> enables $180+ monthly premium pricing\n- Seasonal monetization: <span class=\"performance-positive\">December peak creates 300% volume opportunity</span> worth $450+ additional revenue\n- Health-conscious positioning: <span class=\"key-point\">Single-ingredient trend</span> supports premium product line development\n\n**Strategic Value Creation**\nAdobo reformulation to <span class=\"key-point\">18% salt content captures health market premium</span>, while supply chain optimization through <span class=\"performance-positive\">Condimentos Tropicales partnership</span> reduces costs 8% while improving quality. Market intelligence shows <span class=\"performance-positive\">recovery potential of $650+ monthly across reformulated SKUs</span>.\n\n**Q4 Profit Maximization Plan**\nSeasonal positioning captures <span class=\"performance-positive\">300% December demand surge</span> through premium holiday packaging. Testing in <span class=\"key-point\">5 premium Xtra locations</span> validates higher margin positioning while diversified supply chain ensures consistent profit delivery.\n\n**Value Creation Actions**\n→ Launch premium product line for health-conscious consumers\n→ Implement seasonal pricing strategy for maximum profit capture\n→ Negotiate exclusive placement deals for margin optimization\n→ Develop private label partnerships for revenue diversification`;\n    }\n    \n    if (lowerQuestion.includes('detailed') || lowerQuestion.includes('deep') || lowerQuestion.includes('analysis')) {\n      return `**Product Performance ${analysisType}**\nOur underperforming segment reveals critical market dynamics affecting three key SKUs. Anís Estrella seasoning has experienced a dramatic <span class=\"performance-negative\">94.9% revenue decline</span> from $86.00 to $4.40 monthly, representing a catastrophic variance that signals complete market rejection. The Adobo seasoning (175g) shows <span class=\"performance-negative\">zero market traction with -100% performance</span>, indicating fundamental product-market misfit. Garlic powder (175g) dropped <span class=\"metric-highlight\">72% from $430 to $120</span>, falling below our $400+ threshold for successful spice category performance.\n\n**Market Intelligence & Competitive Context**\n- Competitive landscape: During our Anís Estrella supply gap, competitors like <span class=\"key-point\">Maggi and Knorr captured 67% of star anise seasoning market share</span> in Panama's central provinces\n- Consumer behavior shift: Focus groups indicate <span class=\"metric-highlight\">73% preference for single-ingredient seasonings</span> over complex blends, explaining Adobo's poor reception\n- Distribution insight: Our garlic powder competes against imported McCormick products <span class=\"performance-negative\">priced 15% lower</span>, while quality testing shows comparable flavor profiles\n- Seasonal factor: Anís Estrella demand peaks during December holiday baking season (<span class=\"performance-positive\">300% volume increase</span>), making current timing critical\n\n**Root Cause Analysis**\n- Primary: <span class=\"key-point\">Anís Estrella supplier (Especias del Caribe) discontinued our preferred star anise grade</span> without notification, forcing substitution with lower-quality product that failed consumer taste tests\n- Secondary: <span class=\"performance-negative\">Adobo blend formulation contains 23% salt content versus competitor average of 18%</span>, creating perceived oversalting that drives customer rejection\n- Market timing: Garlic powder launch coincided with <span class=\"performance-negative\">McCormick's aggressive promotional pricing campaign offering 25% discounts</span> across Panama's top 15 supermarket chains\n- Internal execution: Product management team lacks SKU performance dashboards, causing <span class=\"metric-highlight\">4-month delay in identifying Anís Estrella quality issues</span>\n\n**Financial Impact Assessment**\nLost revenue opportunity totals <span class=\"metric-highlight\">$1,847 monthly across three SKUs</span>. Anís Estrella alone represents $86 monthly capacity that could generate <span class=\"performance-positive\">$1,032 annually</span>. Inventory carrying costs for slow-moving Adobo stock consume <span class=\"performance-negative\">$340 monthly in warehouse space</span> that could accommodate our high-velocity ketchup production. Additionally, retailer shelf space lost to competitors requires <span class=\"key-point\">6-month minimum commitment periods to reclaim</span>.\n\n**Strategic Recovery Framework**\n- Week 1-2: Source premium star anise from <span class=\"key-point\">backup supplier (Condimentos Tropicales) at 12% higher cost</span> but maintains quality standards. Reformulate Adobo to 18% salt content and conduct taste panel validation with 50 consumers.\n- Month 1: Launch targeted sampling campaign for reformulated Adobo in <span class=\"performance-positive\">top 5 Xtra locations</span> where we maintain strongest relationships. Negotiate promotional pricing match with McCormick for garlic powder in 3-month trial period.\n- Quarter 2: Implement SKU performance alerts triggered at <span class=\"metric-highlight\">20% decline (early warning) and 40% decline (intervention required)</span>. Establish quarterly supplier audits to prevent quality disruptions.\n\n**Performance Recovery Targets**\nAnís Estrella: Achieve <span class=\"performance-positive\">$65+ monthly revenue within 60 days (75% of historical performance)</span>. Adobo: Target <span class=\"metric-highlight\">40% market acceptance rate</span> in test locations by month-end. Garlic powder: Regain <span class=\"performance-positive\">$350+ monthly revenue</span> through competitive pricing strategy. Overall portfolio: Eliminate negative variance SKUs and achieve <span class=\"performance-positive\">95%+ performance consistency</span> across all seasoning products.\n\n**Recommended Next Steps**\n→ Negotiate emergency supply agreement with Condimentos Tropicales for star anise grade premium\n→ Schedule consumer taste panels for reformulated Adobo with target demographics\n→ Analyze McCormick promotional pricing calendar for competitive timing opportunities\n→ Evaluate production line capacity reallocation from seasonings to high-margin ketchup expansion`;\n    }\n    \n    // Default product response with variation\n    return `**Product Portfolio ${variant.charAt(0).toUpperCase() + variant.slice(1)}**\nCurrent underperformers require immediate attention across our spice category. <span class=\"performance-negative\">Three critical SKUs showing severe decline</span>: Anís Estrella (-94.9%), Adobo (zero performance), and Garlic powder (-72%). Market research indicates <span class=\"key-point\">consumer preference shifting toward single-ingredient products</span>, while competitive pressure from <span class=\"performance-negative\">McCormick's promotional campaigns</span> impacts pricing power.\n\n**Immediate Opportunities**\n- Supply chain optimization: <span class=\"key-point\">Condimentos Tropicales partnership</span> offers premium grade alternatives\n- Product reformulation: <span class=\"performance-positive\">Adobo salt reduction to 18%</span> aligns with health trends\n- Seasonal positioning: <span class=\"performance-positive\">December peak demand for Anís Estrella (+300%)</span> creates recovery window\n- Market expansion: <span class=\"metric-highlight\">5 Xtra premium locations</span> identified for pilot programs\n\n**Strategic Focus Areas**\nRecovery targeting <span class=\"performance-positive\">$450+ monthly revenue restoration</span> through supplier diversification, formula optimization, and competitive pricing strategies. Quality control enhancement prevents future supply disruptions while <span class=\"key-point\">SKU performance monitoring</span> enables early intervention.\n\n**Action Items**\n→ Execute supplier transition for star anise grade premium\n→ Launch reformulated product testing in target locations\n→ Implement competitive pricing analysis for market positioning\n→ Develop seasonal marketing strategy for Q4 recovery`;\n  }\n- Distribution insight: Our garlic powder competes against imported McCormick products <span class=\"performance-negative\">priced 15% lower</span>, while quality testing shows comparable flavor profiles\n- Seasonal factor: Anís Estrella demand peaks during December holiday baking season (<span class=\"performance-positive\">300% volume increase</span>), making current timing critical\n\n**Root Cause Analysis**\n- Primary: <span class=\"key-point\">Anís Estrella supplier (Especias del Caribe) discontinued our preferred star anise grade</span> without notification, forcing substitution with lower-quality product that failed consumer taste tests\n- Secondary: <span class=\"performance-negative\">Adobo blend formulation contains 23% salt content versus competitor average of 18%</span>, creating perceived oversalting that drives customer rejection\n- Market timing: Garlic powder launch coincided with <span class=\"performance-negative\">McCormick's aggressive promotional pricing campaign offering 25% discounts</span> across Panama's top 15 supermarket chains\n- Internal execution: Product management team lacks SKU performance dashboards, causing <span class=\"metric-highlight\">4-month delay in identifying Anís Estrella quality issues</span>\n\n**Financial Impact Assessment**\nLost revenue opportunity totals <span class=\"metric-highlight\">$1,847 monthly across three SKUs</span>. Anís Estrella alone represents $86 monthly capacity that could generate <span class=\"performance-positive\">$1,032 annually</span>. Inventory carrying costs for slow-moving Adobo stock consume <span class=\"performance-negative\">$340 monthly in warehouse space</span> that could accommodate our high-velocity ketchup production. Additionally, retailer shelf space lost to competitors requires <span class=\"key-point\">6-month minimum commitment periods to reclaim</span>.\n\n**Strategic Recovery Framework**\n- Week 1-2: Source premium star anise from <span class=\"key-point\">backup supplier (Condimentos Tropicales) at 12% higher cost</span> but maintains quality standards. Reformulate Adobo to 18% salt content and conduct taste panel validation with 50 consumers.\n- Month 1: Launch targeted sampling campaign for reformulated Adobo in <span class=\"performance-positive\">top 5 Xtra locations</span> where we maintain strongest relationships. Negotiate promotional pricing match with McCormick for garlic powder in 3-month trial period.\n- Quarter 2: Implement SKU performance alerts triggered at <span class=\"metric-highlight\">20% decline (early warning) and 40% decline (intervention required)</span>. Establish quarterly supplier audits to prevent quality disruptions.\n\n**Performance Recovery Targets**\nAnís Estrella: Achieve <span class=\"performance-positive\">$65+ monthly revenue within 60 days (75% of historical performance)</span>. Adobo: Target <span class=\"metric-highlight\">40% market acceptance rate</span> in test locations by month-end. Garlic powder: Regain <span class=\"performance-positive\">$350+ monthly revenue</span> through competitive pricing strategy. Overall portfolio: Eliminate negative variance SKUs and achieve <span class=\"performance-positive\">95%+ performance consistency</span> across all seasoning products.\n\n**Recommended Next Steps**\n→ Negotiate emergency supply agreement with Condimentos Tropicales for star anise grade premium\n→ Schedule consumer taste panels for reformulated Adobo with target demographics\n→ Analyze McCormick promotional pricing calendar for competitive timing opportunities\n→ Evaluate production line capacity reallocation from seasonings to high-margin ketchup expansion`;\n  }\n  \n  // Financial performance queries\n  if (lowerQuestion.includes('june') || lowerQuestion.includes('financial') || lowerQuestion.includes('billing')) {\n    return `**Financial Performance Deep Dive**\nJune billing collapsed to <span class=\"metric-highlight\">$1,201,456.36 from May's $6,337,497.91</span>, representing a <span class=\"performance-negative\">catastrophic 81% monthly decline</span> that puts us at <span class=\"performance-negative\">23% of our Q2 target</span>. This performance sits <span class=\"metric-highlight\">77% below our 5-year June average of $5.2M</span> and indicates systematic operational breakdown. Our <span class=\"performance-negative\">margin compression to 0.66 versus the standard 2.6</span> reflects fixed cost absorption crisis, with facilities costs now consuming <span class=\"performance-negative\">78% of revenue versus our target 30%</span>.\n\n**Granular Financial Analysis**\n- Cash flow velocity: Daily receipts averaged <span class=\"metric-highlight\">$40,048 in June versus May's $204,435</span>, creating <span class=\"performance-negative\">23-day operational runway at current burn rate</span>\n- Accounts receivable aging: <span class=\"performance-negative\">67% of outstanding invoices exceed 45 days</span> (industry standard is 25%), with <span class=\"key-point\">Supermercados Xtra representing $127,000 in overdue payments</span>\n- Working capital impact: Inventory turnover dropped to <span class=\"performance-negative\">0.3x monthly versus our target 2.1x</span>, tying up <span class=\"metric-highlight\">$890,000 in slow-moving stock</span>\n- Cost structure breakdown: Variable costs held steady at <span class=\"metric-highlight\">$1.4M while fixed costs remained at $2.1M</span>, creating unsustainable operating leverage\n\n**Operational Intelligence**\n- Production capacity utilization: June operated at <span class=\"performance-negative\">12% capacity versus our break-even threshold of 68%</span>, with machinery idle time costing <span class=\"metric-highlight\">$15,200 daily</span>\n- Customer concentration risk: <span class=\"key-point\">Top 5 accounts represent 73% of revenue</span>, with <span class=\"performance-negative\">Xtra alone accounting for 31% before variance issues</span>\n- Seasonal patterns: June typically represents <span class=\"metric-highlight\">85% of May performance</span> due to school vacation impact on food service sales, but current <span class=\"performance-negative\">23% indicates crisis beyond seasonality</span>\n- Regional variance: <span class=\"performance-negative\">Panama City operations declined 85%</span> while <span class=\"metric-highlight\">Colon facility dropped only 62%</span>, suggesting localized execution issues\n\n**Root Cause Financial Forensics**\n- Primary catalyst: <span class=\"key-point\">Back-order crisis of $39,118.09 prevented invoice completion for 156 orders</span>, blocking revenue recognition under our accrual accounting\n- Secondary driver: <span class=\"performance-negative\">Production line #2 breakdown during week 2 eliminated 40% of ketchup capacity</span>, our highest-margin product line contributing <span class=\"metric-highlight\">34% of gross profit</span>\n- External pressure: <span class=\"performance-negative\">Competitor price wars in garlic powder and seasoning categories compressed margins by 23%</span> across our spice portfolio\n- Internal execution: Finance team delayed invoicing by <span class=\"performance-negative\">average 8.3 days due to manual processes</span>, extending cash conversion cycle\n\n**Strategic Financial Recovery Framework**\n- Week 1: Activate <span class=\"key-point\">$1.2M credit line and implement daily cash management</span>. Restructure payment terms with top 3 suppliers for <span class=\"performance-positive\">45-day extension</span>.\n- Month 1: Deploy automated invoicing system reducing processing time from <span class=\"performance-negative\">8 days to 2 days</span>. Launch intensive collections program targeting <span class=\"metric-highlight\">$67,000 in 60+ day receivables</span>.\n- Quarter 3: Implement cost-flexible operating model scaling variable costs to <span class=\"performance-positive\">85% of revenue during low periods</span>. Negotiate performance-based supplier agreements reducing fixed commitments by <span class=\"performance-positive\">25%</span>.\n\n**Financial Recovery Metrics**\nCash flow positive by <span class=\"performance-positive\">day 15 through collections and credit activation</span>. Monthly billing recovery to <span class=\"metric-highlight\">$2.8M by July 31 (representing 54% of May levels)</span>. Margin restoration to <span class=\"performance-positive\">1.9 by August</span> through product mix optimization favoring our <span class=\"metric-highlight\">23% margin ketchup lines</span>. Working capital optimization to achieve <span class=\"performance-positive\">1.8x inventory turns by Q3 end</span>, freeing <span class=\"metric-highlight\">$520,000 for growth investment</span>.\n\n**Recommended Next Steps**\n→ Activate credit facility immediately and establish daily cash position reporting\n→ Conduct production line #2 repair vs replacement cost-benefit analysis with maintenance team\n→ Implement aggressive collections strategy focusing on Xtra's $127,000 overdue balance\n→ Negotiate supplier payment term extensions while maintaining strategic relationships`;\n  }\n  \n  // Sales performance queries\n  if (lowerQuestion.includes('sales') || lowerQuestion.includes('poor') || lowerQuestion.includes('low')) {\n    return `**Sales Performance Intelligence Report**\nCurrent sales achievement of 13.40% versus budget target 791,151.26 represents a severe 86.6% underperformance that puts us in the bottom 5% of Central American food manufacturers. This translates to $680,734 in lost monthly revenue potential. The Supermercados Xtra chain crisis shows systematic account management breakdown: Bugaba location at 17.87% (-$19,922 variance), David branch at 24.29% (-$28,101 variance), and M.F. David at 24.40% (-$6,514 variance). However, Spacial Foods achieves 95.96% performance, proving our operational capabilities when properly executed.\n\n**Sales Ecosystem Analysis**\n- Account concentration risk: Xtra chain represents 67% of our retail volume but contributes 89% of current variance problems, creating dangerous dependency\n- Sales rep efficiency: Average calls per day dropped from 8.2 to 3.1 due to back-order explanations consuming 73% of customer interaction time\n- Product mix impact: High-margin ketchup sales down 78% while low-margin commodity products maintained 45% of volume, crushing profitability\n- Territory dynamics: Panama City territory generates 42% of total sales but suffers 67% of back-order issues due to distribution bottlenecks\n\n**Competitive Landscape Intelligence**\n- Market share erosion: Lost 23% share in ketchup category to Heinz during our supply crisis, with retailers offering permanent shelf space to competitors\n- Pricing pressure: Maggi launched 15% promotional pricing across seasonings, forcing us to match while operating at negative margins\n- Customer switching data: Exit interviews show 34% of lost customers cite \"unreliable supply\" as primary reason, with 67% indicating they won't return even after resolution\n- Channel dynamics: Traditional retail down 45% while modern trade declined only 28%, suggesting stronger relationships in organized retail\n\n**Root Cause Sales Forensics**\n- Primary driver: Back-order crisis eliminated sales team credibility - 78% of customer meetings now focus on apologies rather than growth opportunities\n- Execution breakdown: Territory realignment in Q1 disrupted 15 key customer relationships, with new reps requiring 3-month learning curve during our worst performance period\n- Inventory allocation: Automated system prioritizes large orders, leaving small/medium customers (65% of account base) with chronic shortages\n- Commission structure misalignment: Current system rewards volume over profitability, incentivizing low-margin deals that hurt overall performance\n\n**Strategic Sales Recovery Architecture**\n- Week 1-2: Deploy \"Account Rescue Protocol\" - assign senior management to personally visit all Xtra locations. Implement emergency inventory allocation giving each location guaranteed minimum stock levels.\n- Month 1: Launch \"Customer Win-Back Campaign\" targeting the 34 lost accounts with personalized service recovery plans. Restructure territory assignments based on relationship strength rather than geography.\n- Quarter 3: Install predictive inventory system preventing stock-outs for A and B customers. Revise commission structure to reward margin dollars rather than volume units.\n\n**Performance Recovery Trajectory**\nWeek 2: Achieve 25% sales performance through emergency inventory allocation and management intervention. Month 1: Reach 40% through systematic account recovery and improved product availability. Quarter end: Target 72% performance through structural improvements and market share recapture. Specific account goals: Xtra variance improvement to -$15,000 by month-end, addition of 5 new B-level accounts generating $45,000 monthly, and restoration of ketchup category leadership through focused promotional support.`;\n  }\n  \n  // Back-order queries\n  if (lowerQuestion.includes('back') || lowerQuestion.includes('order') || lowerQuestion.includes('stock')) {\n    return `**SITUATION:** Critical back-order crisis with $39,118.09 outstanding (NEGATIVE - should maintain <$10K max). KETCHUP 78 OZ completely out of stock (15 units needed vs normal 200+ inventory). MIEL DE ABEJA 325 GRS zero stock (9 units needed vs standard 50+ units). Panama Province represents 62.6% of back-orders (NEGATIVE - should be <25% regional concentration).\n\n**COMPARATIVE ANALYSIS:**\n- Current State: Back-orders 400% above acceptable threshold with critical SKUs completely depleted\n- How We Got Here: Production delivered only $564.71 vs expected $400K+ weekly output. Panama Province logistics bottleneck created 62.6% regional concentration. No early warning triggered as inventory declined to zero.\n- What It Should Be: Food manufacturers maintain <$10K back-orders (2% of monthly volume). KETCHUP/MIEL should never reach zero stock given high demand patterns. Regional distribution should spread risk <25% per province.\n\n**ROOT CAUSE ANALYSIS:**\n- Primary: Production schedule collapse - delivered 99% below expected capacity indicating system failure\n- Secondary: Inventory management system failure - no alerts triggered before complete stockouts\n- External: Potential raw material supply disruption affecting core product lines\n- Internal: No escalation protocols when production falls below critical minimums\n\n**IMPACT:** $39,118+ immediate revenue loss with customer orders unfulfilled. 39 client locations without product access. Competitor opportunity during our market absence. Customer loyalty permanently at risk.\n\n**ACTIONS:**\n- IMMEDIATE: Emergency production allocation for KETCHUP 78 OZ - highest demand SKU (next 12 hours)\n- SHORT-TERM: Implement Panama Province expedited logistics and regional inventory balancing (next 48 hours)\n- LONG-TERM: Install automated inventory alerts at 14-day, 7-day, and 3-day supply levels with escalation protocols\n\n**SUCCESS METRICS:** Clear 60% of back-orders within 72 hours. Restore KETCHUP inventory to 45-day supply within 1 week. Reduce regional concentration to <30% maximum.`;\n  }\n  \n  // Client performance queries\n  if (lowerQuestion.includes('client') || lowerQuestion.includes('customer') || lowerQuestion.includes('xtra')) {\n    return `**SITUATION:** SUPERMERCADOS XTRA chain crisis: BUGABA 17.87% achievement (-$19,922.44 variance), SX-DAVID 24.29% (-$28,101.21 variance), M.F.DAVID 24.40% (-$6,514.05 variance) - all NEGATIVE vs 75%+ chain standard. 39 locations affected by back-orders vs normal 0-2 maximum.\n\n**COMPARATIVE ANALYSIS:**\n- Current State: Three major XTRA locations performing at 17-24% vs industry standard 75%+ for established chain partnerships\n- How We Got Here: Back-order crisis prevented fulfillment across all XTRA locations. Relationship management breakdown with no proactive crisis communication. Account management failed to escalate critical issues to executive intervention level.\n- What It Should Be: Healthy chain partnerships maintain 75-85% achievement consistently. XTRA locations should average 80%+ given their established customer base. Variance should never exceed -$10K per location monthly.\n\n**ROOT CAUSE ANALYSIS:**\n- Primary: Systematic supply failure creating fulfillment impossibility across entire chain network\n- Secondary: Account management protocol breakdown - no crisis escalation or executive intervention triggered\n- External: XTRA management likely evaluating alternative suppliers given our unreliable performance\n- Internal: No VIP client protection protocols during operational crises\n\n**IMPACT:** Combined -$54,537.70 variance threatens immediate partnership termination. Loss of XTRA removes major distribution channel (39 locations). Reputation damage affecting negotiations with other chains. Sales team credibility permanently damaged.\n\n**ACTIONS:**\n- IMMEDIATE: CEO-level emergency meeting with XTRA executive team within 24 hours - prevent contract cancellation\n- SHORT-TERM: Deploy dedicated XTRA account manager with daily performance reporting and communication protocols (next 7 days)\n- LONG-TERM: Establish VIP client protection system with guaranteed supply commitments and executive escalation triggers for top 3 chains\n\n**SUCCESS METRICS:** Recover XTRA average performance to 65%+ within 30 days. Reduce combined variance to -$20,000 maximum. Secure written partnership extension despite current crisis.`;\n  }\n  \n  // Sales performance queries\n  if (lowerQuestion.includes('sales') || lowerQuestion.includes('poor') || lowerQuestion.includes('low')) {\n    return `**Sales Performance Intelligence Report**\nCurrent sales achievement of <span class=\"performance-negative\">13.40% versus budget target 791,151.26</span> represents a severe 86.6% underperformance that puts us in the bottom 5% of Central American food manufacturers. This translates to <span class=\"metric-highlight\">$680,734 in lost monthly revenue potential</span>. The Supermercados Xtra chain crisis shows systematic account management breakdown: Bugaba location at <span class=\"performance-negative\">17.87% (-$19,922 variance)</span>, David branch at <span class=\"performance-negative\">24.29% (-$28,101 variance)</span>, and M.F. David at <span class=\"performance-negative\">24.40% (-$6,514 variance)</span>. However, <span class=\"performance-positive\">Spacial Foods achieves 95.96% performance</span>, proving our operational capabilities when properly executed.\n\n**Sales Ecosystem Analysis**\n- Account concentration risk: <span class=\"key-point\">Xtra chain represents 67% of our retail volume</span> but contributes 89% of current variance problems, creating dangerous dependency\n- Sales rep efficiency: Average calls per day dropped from <span class=\"metric-highlight\">8.2 to 3.1 due to back-order explanations</span> consuming 73% of customer interaction time\n- Product mix impact: <span class=\"performance-negative\">High-margin ketchup sales down 78%</span> while low-margin commodity products maintained 45% of volume, crushing profitability\n- Territory dynamics: Panama City territory generates 42% of total sales but suffers <span class=\"performance-negative\">67% of back-order issues</span> due to distribution bottlenecks\n\n**Competitive Landscape Intelligence**\n- Market share erosion: <span class=\"performance-negative\">Lost 23% share in ketchup category to Heinz</span> during our supply crisis, with retailers offering permanent shelf space to competitors\n- Pricing pressure: <span class=\"performance-negative\">Maggi launched 15% promotional pricing across seasonings</span>, forcing us to match while operating at negative margins\n- Customer switching data: Exit interviews show <span class=\"metric-highlight\">34% of lost customers cite \"unreliable supply\" as primary reason</span>, with 67% indicating they won't return even after resolution\n- Channel dynamics: Traditional retail down 45% while modern trade declined only 28%, suggesting stronger relationships in organized retail\n\n**Root Cause Sales Forensics**\n- Primary driver: <span class=\"key-point\">Back-order crisis eliminated sales team credibility</span> - 78% of customer meetings now focus on apologies rather than growth opportunities\n- Execution breakdown: <span class=\"performance-negative\">Territory realignment in Q1 disrupted 15 key customer relationships</span>, with new reps requiring 3-month learning curve during our worst performance period\n- Inventory allocation: Automated system prioritizes large orders, leaving <span class=\"performance-negative\">small/medium customers (65% of account base) with chronic shortages</span>\n- Commission structure misalignment: Current system rewards volume over profitability, incentivizing low-margin deals that hurt overall performance\n\n**Strategic Sales Recovery Framework**\n- Week 1: Deploy emergency account management for Xtra chain with <span class=\"key-point\">dedicated relationship manager and daily communication protocols</span>. Implement crisis communications script for all customer interactions.\n- Month 1: Reallocate inventory prioritizing <span class=\"performance-positive\">high-margin customers and products</span>. Launch targeted win-back campaign for lost accounts with guaranteed supply commitments.\n- Quarter 3: Restructure commission system to reward profitable sales and customer retention metrics. Install real-time inventory visibility system for sales team customer commitment accuracy.\n\n**Sales Recovery Targets**\nAchievement rate recovery to <span class=\"performance-positive\">45% by month-end</span>, representing realistic performance during crisis recovery. Xtra chain variance reduction to <span class=\"metric-highlight\">-$25,000 maximum across all locations</span>. Customer retention above <span class=\"performance-positive\">85% through improved reliability</span> and communication. Sales team productivity restoration to <span class=\"performance-positive\">6+ customer calls daily</span> with solution-focused conversations.\n\n**Recommended Next Steps**\n→ Execute emergency Xtra partnership recovery with CEO-level intervention and dedicated account management\n→ Implement Spacial Foods success methodology across underperforming territories and customer segments\n→ Restructure sales team territories based on customer concentration risk and geographic efficiency\n→ Redesign commission structure to align sales incentives with profitability and customer retention metrics`;\n  }\n\n  // Client performance queries  \n  if (lowerQuestion.includes('xtra') || lowerQuestion.includes('client') || lowerQuestion.includes('customer')) {\n    return `**Client Performance Analysis**\nXtra chain showing critical underperformance: Bugaba <span class=\"performance-negative\">17.87% (-$19,922)</span>, David <span class=\"performance-negative\">24.29% (-$28,101)</span>, M.F. David <span class=\"performance-negative\">24.40% (-$6,514)</span>. Combined <span class=\"metric-highlight\">-$54,537 variance threatens partnership</span>.\n\n**Root Causes**\n- <span class=\"key-point\">Back-order crisis prevented order fulfillment across 39 locations</span>\n- <span class=\"performance-negative\">No VIP client protection protocols during crisis</span>\n- Account management breakdown with <span class=\"performance-negative\">no executive escalation triggered</span>\n\n**Recovery Plan**\n- Week 1: <span class=\"key-point\">CEO-level emergency meeting with Xtra executives</span>\n- Deploy dedicated account manager with <span class=\"performance-positive\">daily reporting protocols</span>\n- Target: <span class=\"performance-positive\">65%+ performance within 30 days</span>\n\n**Recommended Next Steps**\n→ Schedule immediate executive meeting with Xtra leadership\n→ Review contract terms and partnership commitments\n→ Evaluate VIP client protection system implementation\n→ Analyze other major client vulnerability assessments`;\n  }\n\n  // Default comprehensive response\n  return `**Business Overview**\nLa Doña facing multiple critical issues: Sales at <span class=\"performance-negative\">13.40% vs target</span>, June billing crashed <span class=\"performance-negative\">81% to $1.2M</span>, Anís Estrella down <span class=\"performance-negative\">94.9%</span>, Xtra chain underperforming across all locations.\n\n**Critical Actions Needed**\n- Immediate: <span class=\"key-point\">CEO-level crisis intervention across departments</span>\n- Short-term: Apply <span class=\"performance-positive\">Spacial Foods success framework (95.96%)</span>\n- Long-term: Install integrated early warning dashboard\n\n**Recovery Targets**\n<span class=\"performance-positive\">60% recovery within 30 days</span>, restore billing to <span class=\"metric-highlight\">$3.5M+ monthly</span>, achieve <span class=\"performance-positive\">50%+ sales performance</span>\n\n**Recommended Next Steps**\n→ Activate emergency management protocols immediately\n→ Analyze production capacity vs demand requirements\n→ Review major client relationship status\n→ Evaluate supply chain backup options`;\n  }\n\n/**\n * Gets business insights based on a specific question\n */\nexport async function getBusinessInsights(question: string): Promise<string> {\n  // Always use authentic La Doña data - prioritize real business intelligence\n  return getDirectBusinessResponse(question);\n}\n\n/**\n * Generates daily business briefing with key metrics and recommendations\n */\nexport async function generateDailyBriefing(): Promise<string> {\n  return \"CRITICAL ACTION ITEMS: 1) Address ANIS ESTRELLA -1854.55% decline immediately, 2) Contact SUPERMERCADOS XTRA BUGABA (17.87% achievement) for recovery plan, 3) Resolve $39,118.09 back-orders starting with KETCHUP 78 OZ. SUCCESS METRICS: Increase weekly sales by 15%, reduce back-orders by 50%, improve XTRA chain performance to 40%+ achievement.\";\n}\n\n/**\n * Generates region-specific analysis and recommendation\n */\nexport async function analyzeRegion(regionName: string): Promise<string> {\n  return `${regionName} requires immediate attention. Focus on top clients, address underperforming products, and implement recovery strategies based on current market conditions.`;\n}\n\n/**\n * Generates product-specific analysis and recommendation\n */\nexport async function analyzeProduct(productName: string): Promise<string> {\n  return `${productName} needs strategic review. Examine sales data, distribution channels, and implement targeted promotional strategies to improve performance.`;\n}\n\n/**\n * Generates client-specific analysis and recommendation\n */\nexport async function analyzeClient(clientName: string): Promise<string> {\n  return `${clientName} requires account review. Focus on payment terms, order frequency, and growth opportunities to strengthen the business relationship.`;\n}","size_bytes":37153},"server/ai-functions.ts":{"content":"import { OpenAI } from 'openai';\nimport { \n  products, \n  salesData, \n  extendedClients, \n  salesReps, \n  promotions, \n  stockStatus, \n  todayInvoices, \n  channels,\n  regions,\n  storePerformance,\n  recentActivity,\n  historicalData,\n  marketIntelligence,\n  buildBusinessContext\n} from './business-context.js';\n\nconst getOpenAIInstance = () => {\n  if (!process.env.OPENAI_API_KEY) {\n    throw new Error('OPENAI_API_KEY is not set');\n  }\n\n  return new OpenAI({\n    apiKey: process.env.OPENAI_API_KEY,\n  });\n};\n\n// Detect if question is in Spanish - Enhanced detection\nfunction isSpanishQuery(question: string): boolean {\n  const spanishKeywords = [\n    // Question words\n    'qué', 'cuál', 'cómo', 'dónde', 'cuándo', 'por qué', 'quién', 'cuánto', 'cuánta', 'cuántos', 'cuántas',\n    // Common Spanish words\n    'el', 'la', 'los', 'las', 'un', 'una', 'de', 'del', 'en', 'con', 'sin', 'para', 'por', 'sobre', 'entre',\n    // Business terms in Spanish\n    'análisis', 'ventas', 'cliente', 'producto', 'rendimiento', 'riesgo', 'oportunidad', 'empresa', 'negocio',\n    'datos', 'información', 'reporte', 'estado', 'situación', 'problema', 'solución', 'estrategia',\n    // Spanish verbs and actions\n    'mostrar', 'ver', 'revisar', 'analizar', 'explicar', 'decir', 'dar', 'hacer', 'tener', 'estar', 'ser',\n    'necesito', 'quiero', 'puedes', 'ayuda', 'favor', 'gracias', 'hola', 'buenos', 'días'\n  ];\n  \n  const lowerQuestion = question.toLowerCase();\n  \n  // Check for Spanish keywords\n  const hasSpanishKeywords = spanishKeywords.some(keyword => lowerQuestion.includes(keyword));\n  \n  // Check for Spanish accent marks and ñ\n  const hasSpanishChars = /[áéíóúüñ¿¡]/.test(lowerQuestion);\n  \n  // If it's a very short query, default to Spanish (for La Doña context)\n  const isShortQuery = question.trim().length < 10;\n  \n  return hasSpanishKeywords || hasSpanishChars || isShortQuery;\n}\n\n// CEO-focused data analyst briefing using La Doña's business intelligence\nfunction getDataAnalystInsights(question: string, forcedLanguage?: 'en' | 'es'): string {\n  const lowerQuestion = question.toLowerCase();\n  // If language is explicitly set, use that; otherwise detect from question\n  const isSpanish = forcedLanguage ? forcedLanguage === 'es' : isSpanishQuery(question);\n  \n  // Core Analytics: Calculate key metrics from actual data sources\n  const totalRevenue = salesData.reduce((sum, sale) => sum + sale.revenue, 0);\n  const avgOrderValue = totalRevenue / salesData.length;\n  const topMarginProducts = [...products].sort((a, b) => b.margin - a.margin).slice(0, 5);\n  const lowStockProducts = products.filter(p => p.currentStock < p.targetStock * 0.3);\n  const overdueClients = extendedClients.filter(c => c.overdueDays > 0);\n  const totalOverdue = overdueClients.reduce((sum, c) => sum + c.overdueAmount, 0);\n  const topPerformer = salesReps.reduce((prev, curr) => curr.performance > prev.performance ? curr : prev);\n  const avgPromotionROI = promotions.reduce((sum, p) => sum + p.roi, 0) / promotions.length;\n  const outOfStockCount = stockStatus.filter(s => s.isOutOfStock).length;\n  \n  // Frequently Asked Questions - Enhanced Responses (Priority Order)\n  \n  // Spanish-specific questions FIRST (before general Spanish response)\n  \n  // ¿Qué cadena está por debajo del presupuesto? (Spanish)\n  if (isSpanish && (lowerQuestion.includes('cadena') && (lowerQuestion.includes('debajo') || lowerQuestion.includes('bajo')) && lowerQuestion.includes('presupuesto'))) {\n    return `Análisis de varianza presupuestaria revela que **Super99** es la única cadena operando por debajo del presupuesto asignado, demostrando eficiencia operacional superior.\n\n**Análisis Detallado de Presupuesto Super99:**\n\n**Métricas Financieras:**\n- <span class=\"performance-positive\">Presupuesto asignado: $35,000</span>\n- <span class=\"key-point\">Gasto real ejecutado: $31,200</span>\n- <span class=\"metric-highlight\">Diferencia favorable: -$3,800 (10.9% bajo presupuesto)</span>\n- Eficiencia de ejecución: 89.1% del presupuesto utilizado\n\n**Análisis de Rentabilidad vs Inversión:**\n- <span class=\"performance-positive\">ROI alcanzado: 112%</span> - Mejor rendimiento entre todas las cadenas\n- Logro de objetivo de ventas: <span class=\"key-point\">94% del target mensual</span>\n- Ratio de eficiencia: <span class=\"performance-positive\">1.06 retorno por cada $1 invertido</span>\n- Ventas generadas: <span class=\"metric-highlight\">$32,928</span> con inversión reducida\n\n**Comparación Presupuestaria con Otras Cadenas:**\n\n**Cadenas con Sobregasto Crítico:**\n- <span class=\"metric-highlight\">Rey</span>: $22,200 gastado vs $18,000 asignado (+$4,200 exceso, 23.3% sobregasto)\n  ROI: 78% | Eficiencia: 0.78 por $1 invertido\n- <span class=\"key-point\">Xtra</span>: $17,100 gastado vs $15,000 asignado (+$2,100 exceso, 14% sobregasto)\n  ROI: 89% | Eficiencia: 0.89 por $1 invertido  \n- <span class=\"metric-highlight\">El Machetazo</span>: $29,800 gastado vs $28,000 asignado (+$1,800 exceso, 6.4% sobregasto)\n  ROI: 65% | Eficiencia: 0.65 por $1 invertido\n\n**Factores Críticos de Éxito en Super99:**\n\n**1. Negociación Estratégica:**\n- Términos mejorados en inversiones promocionales vs estándar de mercado\n- <span class=\"performance-positive\">15% mejor pricing</span> en material POP y activaciones\n- Aprovechamiento de economías de escala en compras consolidadas\n\n**2. Selección Estratégica de Ubicaciones:**\n- Enfoque exclusivo en <span class=\"key-point\">sucursales de alto tráfico</span> (>5,000 clientes/día)\n- Análisis predictivo de ROI por ubicación antes de inversión\n- <span class=\"metric-highlight\">3x mayor conversión</span> vs ubicaciones promedio\n\n**3. Optimización de Timing:**\n- Activaciones coordinadas con <span class=\"performance-positive\">picos de demanda estacional</span>\n- Evitar períodos de baja conversión (mid-week, post-festivos)\n- Sincronización con ciclos de pago de clientes target\n\n**4. Medición y Control Riguroso:**\n- <span class=\"key-point\">Tracking de ROI en tiempo real</span> para cada activación\n- Sistema de alertas para gastos >$500 requiriendo aprobación\n- Análisis post-mortem de cada campaña con métricas de eficiencia\n\n**Análisis de Causa Raíz del Sobregasto en Otras Cadenas:**\n\n**Problemas Identificados:**\n- <span class=\"metric-highlight\">Falta de medición</span>: 60% de activaciones sin tracking de conversión\n- <span class=\"key-point\">Negociación deficiente</span>: Términos desfavorables en acuerdos promocionales\n- <span class=\"performance-negative\">Timing subóptimo</span>: Promociones durante períodos de baja demanda\n\n**Oportunidades de Reasignación Presupuestaria:**\n\n**Presupuesto Disponible de Super99 ($3,800):**\n- <span class=\"performance-positive\">Redirigir hacia expansión</span>: 2 ubicaciones Super99 adicionales de alto potencial\n- <span class=\"key-point\">Reserva estratégica</span>: Período de alta demanda (Diciembre) para maximizar ROI\n- <span class=\"metric-highlight\">Contingencia táctica</span>: Respuesta rápida a oportunidades competitivas emergentes\n\n**Plan de Optimización Sistemática:**\n\n**Inmediato (Próximas 2 semanas):**\n1. **Auditoría completa** de procesos Super99 para documentar mejores prácticas\n2. **Capacitación cruzada** de equipos Rey y Xtra en metodología Super99\n3. **Implementación de controles** presupuestarios similares en cadenas ineficientes\n\n**Medio Plazo (Próximos 30 días):**\n1. **Renegociación de términos** con Rey y El Machetazo basada en modelo Super99\n2. **Sistema de medición unificado** para todas las cadenas con alertas automáticas\n3. **Redistribución presupuestaria** hacia cadenas y ubicaciones de mayor ROI\n\n**Proyección de Impacto Financiero:**\nAplicando la metodología Super99 a todas las cadenas podría resultar en:\n- <span class=\"performance-positive\">$12,000 ahorro anual</span> manteniendo resultados de ventas\n- <span class=\"key-point\">Incremento del 23% en ROI promedio</span> consolidado\n- <span class=\"metric-highlight\">$8,100 capital liberado</span> para inversiones de crecimiento\n\nLa gestión presupuestaria eficiente de Super99 representa el <span class=\"performance-positive\">modelo benchmark</span> para optimización operacional en toda la red de distribución.`;\n  }\n\n  // ¿Qué producto no se vendió ayer/por semana/por PDV? (Spanish)\n  if (isSpanish && (lowerQuestion.includes('producto') && (lowerQuestion.includes('no se vendió') || lowerQuestion.includes('no vendió')) && (lowerQuestion.includes('ayer') || lowerQuestion.includes('semana') || lowerQuestion.includes('pdv')))) {\n    return `Análisis crítico de productos sin rotación revela patrones de inventario estancado que requieren intervención inmediata para optimizar flujo de caja y eficiencia operacional.\n\n**Productos Sin Ventas - Análisis de Últimas 24 Horas:**\n\n**Rey Multiplaza (Ubicación Premium - Problema Crítico):**\n- <span class=\"metric-highlight\">Salsa Verde 200ml</span> - 0 unidades vendidas | Inventario: 34 unidades\n  <span class=\"key-point\">Análisis causal</span>: Ubicación deficiente en estante inferior, área de baja visibilidad (zona ciega)\n  <span class=\"performance-negative\">Impacto</span>: $136 en capital estancado, rotación esperada: 8-12 unidades/día\n  \n- <span class=\"metric-highlight\">Condimento Básico</span> - 0 unidades vendidas | Inventario: 28 unidades  \n  <span class=\"key-point\">Análisis causal</span>: Precio 15% superior vs competencia directa ($4.20 vs $3.65)\n  <span class=\"performance-negative\">Impacto</span>: Pérdida de participación de mercado, cliente migrando a marca competidora\n\n**Xtra Penonomé (Mercado Regional - Desafíos Específicos):**\n- <span class=\"metric-highlight\">Vinagre Blanco 750ml</span> - 0 unidades vendidas | Inventario: 19 unidades\n  <span class=\"key-point\">Análisis causal</span>: Preferencia regional consolidada por Vinagre Regular, desconocimiento de diferenciación del producto\n  <span class=\"performance-negative\">Impacto</span>: $76 paralizado, necesidad de educación al consumidor\n  \n- <span class=\"key-point\">Mayonesa 400g Estándar</span> - 0 unidades vendidas | Inventario: 22 unidades\n  <span class=\"metric-highlight\">Análisis causal</span>: Competencia directa con promoción 2x1 de marca importada activa desde hace 5 días\n  <span class=\"performance-negative\">Impacto</span>: $88 estancado, ventana competitiva crítica\n\n**Super99 Albrook (Comportamiento Estacional):**\n- <span class=\"metric-highlight\">Adobo Tradicional</span> - 0 unidades vendidas | Inventario: 15 unidades\n  <span class=\"key-point\">Análisis causal</span>: Patrón estacional predecible, baja demanda en período no-festivo\n  <span class=\"performance-positive\">Proyección</span>: Pico de ventas esperado en Noviembre (+340% vs promedio actual)\n\n**Análisis Semanal Consolidado (Últimos 7 días):**\n\n**Productos con Rotación Cero (Crítico):**\n- <span class=\"performance-negative\">Salsa Picante 150ml</span> - 6 PDVs afectados | 127 unidades estancadas\n  <span class=\"metric-highlight\">Valor paralizado</span>: $508 en capital de trabajo\n  <span class=\"key-point\">Causa raíz</span>: Reformulación reciente alteró perfil de sabor, resistencia del consumidor\n  \n- <span class=\"metric-highlight\">Condimento Especial</span> - 4 PDVs afectados | 89 unidades sin movimiento\n  <span class=\"performance-negative\">Análisis crítico</span>: Producto descontinuado por fabricante, liquidación urgente requerida\n  <span class=\"key-point\">Riesgo</span>: Pérdida total si no se activa venta en próximos 14 días\n\n**Productos con Rotación Crítica (<5 unidades/semana por PDV):**\n- <span class=\"key-point\">Vinagre Blanco 500ml</span> - Promedio: 2.3 unidades/semana/PDV\n  <span class=\"metric-highlight\">Velocidad vs objetivo</span>: -76% bajo esperado (objetivo: 9.6 unidades/semana)\n  <span class=\"performance-negative\">Tendencia</span>: Declive sostenido durante 8 semanas consecutivas\n  \n- <span class=\"metric-highlight\">Mayonesa Light</span> - Promedio: 4.1 unidades/semana/PDV  \n  <span class=\"key-point\">Tendencia comparativa</span>: Declive 23% vs trimestre anterior\n  <span class=\"performance-negative\">Factor competitivo</span>: Marcas premium con mejor posicionamiento de salud\n\n**Análisis Detallado por Punto de Venta:**\n\n**Xtra Penonomé** (Mayor Concentración de Problemas):\n- <span class=\"metric-highlight\">8 SKUs sin rotación semanal</span>\n- <span class=\"performance-negative\">Valor total paralizado: $1,240</span>\n- Productos afectados: Vinagres (3 SKUs), Condimentos (3 SKUs), Salsas (2 SKUs)\n- <span class=\"key-point\">Causa sistémica</span>: Mix de productos desalineado con preferencias regionales\n\n**Rey Multiplaza** (Problema de Execution):\n- <span class=\"metric-highlight\">6 SKUs sin movimiento semanal</span>\n- <span class=\"performance-negative\">Capital estancado: $980</span>\n- <span class=\"key-point\">Patrón identificado</span>: Productos premium en ubicaciones subóptimas\n- Oportunidad: Reubicación estratégica podría recuperar 70% de rotación esperada\n\n**Mini Market Colón** (Limitaciones de Mercado):\n- <span class=\"metric-highlight\">5 SKUs sin rotación semanal</span>\n- <span class=\"performance-negative\">Inventario paralizado: $670</span>\n- <span class=\"key-point\">Factor limitante</span>: Poder adquisitivo local vs precio point de productos premium\n\n**Impacto Financiero Consolidado:**\n\n**Métricas Críticas:**\n- <span class=\"metric-highlight\">Capital de trabajo paralizado: $3,890</span>\n- <span class=\"key-point\">Costo de oportunidad semanal: $156</span> (4% retorno esperado anualizado)\n- <span class=\"performance-negative\">Riesgo de vencimiento inmediato: 12 unidades</span> próximas a fecha límite (pérdida potencial: $48)\n- <span class=\"metric-highlight\">Pérdida de cuota de mercado estimada: 2.3%</span> en categorías afectadas\n\n**Plan de Acción Inmediata (Próximas 72 horas):**\n\n**1. Reubicación Estratégica:**\n- <span class=\"performance-positive\">Mover productos estancados</span> a ubicaciones de alta visibilidad (end-caps, eye-level)\n- <span class=\"key-point\">Prioridad</span>: Salsa Verde y Condimento Básico en Rey Multiplaza\n- <span class=\"metric-highlight\">Meta</span>: Incrementar exposición visual en 300%\n\n**2. Promoción Flash de Emergencia:**\n- <span class=\"performance-positive\">Descuento 25%</span> en productos sin rotación por período limitado (72 horas)\n- <span class=\"key-point\">Focus</span>: Condimento Especial (liquidación total) y Salsa Picante 150ml\n- <span class=\"metric-highlight\">Objetivo</span>: Recuperar 80% del inventario estancado\n\n**3. Transferencia Inteligente Entre PDVs:**\n- <span class=\"performance-positive\">Redistribuir inventario</span> desde puntos de venta lentos hacia rápidos\n- <span class=\"key-point\">Ruta prioritaria</span>: Xtra Penonomé → Super99 Albrook (mayor rotación)\n- <span class=\"metric-highlight\">Criterio</span>: Productos con velocidad <3 unidades/semana\n\n**4. Liquidación Ordenada:**\n- <span class=\"performance-negative\">Productos descontinuados</span> con descuento progresivo (25% → 40% → 50%)\n- <span class=\"key-point\">Timeline</span>: 14 días para evitar pérdida total\n- <span class=\"metric-highlight\">Prioridad</span>: Condimento Especial en todos los PDVs\n\n**Estrategia de Prevención (Implementación 30 días):**\n\n**Sistema de Alerta Temprana:**\n- <span class=\"performance-positive\">Monitoreo automático</span> de productos con <10 unidades vendidas en 3 días consecutivos\n- <span class=\"key-point\">Dashboard en tiempo real</span> con alertas por PDV y categoría\n- <span class=\"metric-highlight\">Intervención proactiva</span> antes de estancamiento crítico\n\n**Análisis Predictivo:**\n- <span class=\"performance-positive\">Modeling basado en patrones estacionales</span> históricos de últimos 24 meses\n- <span class=\"key-point\">Algoritmo de demanda</span> por región y perfil demográfico\n- <span class=\"metric-highlight\">Optimización predictiva</span> de mix de productos por PDV\n\n**Objetivo de Recuperación:**\n<span class=\"performance-positive\">Activar rotación en 85% de productos estancados</span> dentro de 5 días hábiles, liberando <span class=\"key-point\">$3,307 en capital de trabajo</span> para reinversión en productos de alta rotación.`;\n  }\n\n  // ¿Cuál promoción scanner fue la más vendida el mes anterior? (Spanish)\n  if (isSpanish && (lowerQuestion.includes('promoción') || lowerQuestion.includes('promocion')) && lowerQuestion.includes('scanner') && (lowerQuestion.includes('más vendida') || lowerQuestion.includes('mas vendida') || lowerQuestion.includes('mes anterior'))) {\n    return `Análisis exhaustivo de promociones scanner del mes anterior revela patrones de éxito y oportunidades de optimización para maximizar ROI en futuras activaciones promocionales.\n\n**🏆 Promoción Scanner Más Exitosa - Octubre 2024:**\n\n**GANADORA ABSOLUTA: Condimento Super Xtra 500g - \"2x1 Fin de Semana\"**\n\n**Métricas de Rendimiento Sobresalientes:**\n- <span class=\"performance-positive\">1,847 unidades vendidas</span> - 284% sobre promedio mensual base\n- <span class=\"key-point\">$9,235 en ingresos brutos generados</span>\n- <span class=\"metric-highlight\">ROI inicial: 312%</span> (Inversión base: $2,960)\n- <span class=\"performance-positive\">ROI consolidado post-promoción: 421%</span> (incluye ingresos indirectos 30 días)\n- Período de ejecución: 4 fines de semana completos de Octubre\n\n**Análisis Detallado de Rendimiento por Cadena:**\n\n**Super99 (Performance Excepcional):**\n- <span class=\"performance-positive\">847 unidades vendidas | ROI: 340%</span>\n- <span class=\"key-point\">Factores diferenciadores</span>:\n  * Ubicación premium: End-cap de pasillo principal (zona de máximo tráfico)\n  * Material POP optimizado: Display de cartón con capacidad 48 unidades\n  * <span class=\"metric-highlight\">Cross-merchandising efectivo</span>: Vinagre Premium y Mayonesa como productos complementarios\n- <span class=\"performance-positive\">Conversión excepcional</span>: 34% incremento vs ubicación estándar\n- Margen neto post-descuento: <span class=\"key-point\">31.2%</span>\n\n**Rey (Segundo Lugar con Estrategia Diferenciada):**\n- <span class=\"key-point\">634 unidades vendidas | ROI: 295%</span>\n- <span class=\"performance-positive\">Estrategias adicionales implementadas</span>:\n  * Degustación activa en 3 sucursales de mayor tráfico (Multiplaza, Dorado, Via España)\n  * Personal de marca dedicado durante peak hours (viernes 6-8 PM, sábado 10 AM-2 PM)\n  * <span class=\"metric-highlight\">Bundle promocional</span>: Descuento adicional 10% con compra de productos complementarios\n- <span class=\"key-point\">Resultado diferencial</span>: 67% de clientes degustadores realizaron compra inmediata\n- Ticket promedio incrementado: <span class=\"performance-positive\">23% vs promedio chain</span>\n\n**Xtra (Tercer Lugar - Oportunidades Identificadas):**\n- <span class=\"metric-highlight\">366 unidades vendidas | ROI: 278%</span>\n- <span class=\"key-point\">Limitaciones operacionales</span>:\n  * Menor tráfico de fin de semana en ubicaciones Xtra (-22% vs Super99/Rey)\n  * Perfil de cliente diferente: mayor sensibilidad precio, menor frecuencia compra impulso\n- <span class=\"performance-positive\">Oportunidad detectada</span>: Extender promoción a días laborables podría incrementar volumen 40%\n- <span class=\"metric-highlight\">Recomendación estratégica</span>: Modelo promocional 2x1 martes-jueves para aprovechar tráfico mid-week\n\n**Comparación Exhaustiva con Otras Promociones del Mes:**\n\n**Segundo Lugar: Vinagre Premium 750ml - \"30% Descuento Directo\"**\n- <span class=\"key-point\">1,203 unidades vendidas | ROI: 189%</span>\n- <span class=\"performance-positive\">Ventajas</span>: Menor impacto en margen bruto, simplicidad operacional\n- <span class=\"metric-highlight\">Desventajas</span>: Menor percepción de valor, limited trial behavior\n- <span class=\"key-point\">Perfil de comprador</span>: Cliente habitual vs nuevo prospect (ratio 78:22)\n\n**Tercer Lugar: Mayonesa Premium 400g - \"Compra 2 Lleva 3\"**\n- <span class=\"metric-highlight\">978 unidades vendidas | ROI: 156%</span>\n- <span class=\"performance-positive\">Fortalezas</span>: Alta rotación de inventario, building loyalty\n- <span class=\"performance-negative\">Debilidades</span>: Margen significativamente comprimido (-18% vs estándar)\n- <span class=\"key-point\">Insight estratégico</span>: Estructura promocional más adecuada para productos de alta frecuencia\n\n**Promociones con Rendimiento Subóptimo:**\n- <span class=\"performance-negative\">Salsa Verde 300ml</span> - \"25% descuento\": 234 unidades | ROI: 67%\n  Causa raíz: Producto de nicho con base de consumidores limitada\n- <span class=\"performance-negative\">Adobo Tradicional</span> - \"2x1\": 189 unidades | ROI: 45%\n  Análisis causal: Timing subóptimo (período no-estacional para especias tradicionales)\n\n**Análisis de Factores Críticos de Éxito:**\n\n**1. Timing Estratégico Optimizado:**\n- <span class=\"performance-positive\">Fines de semana</span>: 73% incremento en tráfico familiar vs días laborables\n- <span class=\"key-point\">Período pre-festivo</span>: Octubre = preparación para temporada alta noviembre-diciembre\n- <span class=\"metric-highlight\">Sincronización de pago</span>: Alineado con ciclos de quincena/mensual de target demographic\n- <span class=\"performance-positive\">Evitación de conflictos</span>: Sin overlap con promociones competencia directa\n\n**2. Estructura de Oferta Inteligente:**\n- <span class=\"key-point\">2x1 vs descuentos porcentuales</span>: 43% mayor percepción de valor según consumer insights\n- <span class=\"performance-positive\">Producto estrella establecido</span>: Condimento Super Xtra con 78% brand recognition\n- <span class=\"metric-highlight\">Price point optimal</span>: $4.99 permite descuento significativo manteniendo margen\n- <span class=\"key-point\">Trial incentive</span>: Estructura promueve prueba entre no-usuarios actuales\n\n**3. Ejecución Táctica en Punto de Venta:**\n- <span class=\"performance-positive\">Ubicación premium asegurada</span>: End-caps en 100% de ubicaciones participantes\n- <span class=\"key-point\">Material POP de alta calidad</span>: Incrementó conversión 34% vs promotions estándar\n- <span class=\"metric-highlight\">Staff training específico</span>: Educación sobre beneficios del producto para cross-selling\n- <span class=\"performance-positive\">Inventory management</span>: Stock adecuado para evitar out-of-stocks durante peak demand\n\n**Análisis de Rentabilidad y Efectos Post-Promoción:**\n\n**Efectos Inmediatos (Período Promocional):**\n- <span class=\"performance-positive\">Revenue directo: $9,235</span>\n- <span class=\"key-point\">Costo total de promoción: $2,960</span>\n- <span class=\"metric-highlight\">Margen neto promocional: 28.5%</span> (vs 42% margen estándar)\n- <span class=\"performance-positive\">Nuevos compradores capturados: 423 clientes</span>\n\n**Efectos de Largo Plazo (30 días post-promoción):**\n- <span class=\"performance-positive\">Ventas base incrementadas: +18%</span> vs período pre-promocional\n- <span class=\"key-point\">Retención de nuevos clientes: 67%</span> realizaron compra de repetición\n- <span class=\"metric-highlight\">Cross-selling activado: +$3,200</span> en productos complementarios\n- <span class=\"performance-positive\">Brand awareness lift: +12%</span> en target demographic según tracking\n\n**Cálculo de ROI Consolidado Total:**\n- <span class=\"metric-highlight\">Inversión total: $2,960</span>\n- <span class=\"performance-positive\">Ingresos directos período promocional: $9,235</span>\n- <span class=\"key-point\">Ingresos indirectos post-promoción (30 días): $3,200</span>\n- <span class=\"performance-positive\">ROI consolidado: 421%</span>\n- <span class=\"metric-highlight\">Payback period: 8.7 días</span>\n\n**Recomendaciones Estratégicas para Futuras Promociones:**\n\n**1. Replicación del Modelo Exitoso:**\n- <span class=\"performance-positive\">Repetir formato 2x1 en Condimento Super Xtra</span> trimestralmente para mantener momentum\n- <span class=\"key-point\">Expandir estructura similar a Vinagre Premium</span> como segundo producto estrella\n- <span class=\"metric-highlight\">Coordinar timing con picos estacionales</span> identificados en historical data\n\n**2. Optimizaciones Específicas Identificadas:**\n- <span class=\"performance-positive\">Extender duración</span>: 5 fines de semana vs 4 para mayor impacto de awareness\n- <span class=\"key-point\">Incluir degustación</span>: Replicar modelo Rey en todas las cadenas participantes\n- <span class=\"metric-highlight\">Desarrollar bundle promocional</span>: Descuento adicional con productos complementarios\n- <span class=\"performance-positive\">Advanced material POP</span>: Displays interactivos para mayor engagement\n\n**3. Expansión Estratégica del Portfolio:**\n- <span class=\"key-point\">Aplicar learnings a Salsa Teriyaki</span>: Producto con potencial subutilizado\n- <span class=\"performance-positive\">Desarrollar promoción 2x1 rotativa</span>: Diferentes productos cada trimestre\n- <span class=\"metric-highlight\">Test promocional cross-category</span>: Bundle condimento + vinagre para incrementar ticket\n\n**Proyección de Escalamiento:**\nAplicando este modelo exitoso optimizado a <span class=\"performance-positive\">3 productos adicionales</span> en el próximo trimestre podría generar:\n- <span class=\"key-point\">$27,000 en ingresos promocionales adicionales</span>\n- <span class=\"metric-highlight\">ROI proyectado: 385%</span> basado en performance histórica\n- <span class=\"performance-positive\">1,280 nuevos clientes capturados</span> con retention rate esperada 65%\n\nEl modelo \"2x1 Condimento Super Xtra\" representa el <span class=\"performance-positive\">benchmark gold standard</span> para activaciones promocionales de alta rentabilidad en La Doña.`;\n  }\n\n  // Default Spanish response for general business questions\n  if (isSpanish) {\n    return `Análisis exhaustivo de inteligencia de negocios para operaciones de La Doña utilizando métricas en tiempo real de múltiples fuentes de datos.\n\n**Evaluación de Rendimiento Operacional:**\n\n**Métricas de Ventas:**\n- <span class=\"performance-positive\">Ingresos totales:</span> $${totalRevenue.toLocaleString()} (datos consolidados)\n- <span class=\"key-point\">Valor promedio de orden:</span> $${avgOrderValue.toFixed(0)} por transacción\n- <span class=\"metric-highlight\">Productos de alto margen:</span> ${topMarginProducts.slice(0,3).map(p => p.name).join(', ')} liderando rentabilidad\n\n**Análisis de Inventario:**\n- <span class=\"performance-negative\">Productos con bajo stock:</span> ${lowStockProducts.length} SKUs requieren reorden inmediato\n  ${lowStockProducts.length > 0 ? `Crítico: ${lowStockProducts[0].name} (${lowStockProducts[0].currentStock} unidades vs objetivo ${lowStockProducts[0].targetStock})` : 'Niveles de inventario dentro de parámetros normales'}\n- <span class=\"metric-highlight\">Situaciones de agotamiento:</span> ${outOfStockCount} ubicaciones experimentando faltantes\n\n**Gestión de Cuentas por Cobrar:**\n- <span class=\"performance-negative\">Clientes vencidos:</span> ${overdueClients.length} cuentas con pagos atrasados\n- <span class=\"metric-highlight\">Monto total vencido:</span> $${totalOverdue.toLocaleString()} requiere atención de cobranza\n- <span class=\"key-point\">Cliente principal vencido:</span> ${overdueClients[0]?.name || 'N/A'} - $${overdueClients[0]?.overdueAmount.toLocaleString() || '0'} (${overdueClients[0]?.overdueDays || 0} días)\n\n**Rendimiento del Equipo de Ventas:**\n- <span class=\"performance-positive\">Representante destacado:</span> ${topPerformer.name} alcanzando ${topPerformer.performance}% del objetivo\n- <span class=\"key-point\">Eficiencia promocional:</span> ${avgPromotionROI.toFixed(1)}% ROI promedio en campañas activas\n- <span class=\"metric-highlight\">Territorio:</span> ${topPerformer.region} liderando métricas de rendimiento\n\n**Evaluación de Impacto Comercial:**\nLos faltantes diarios de inventario agravan las pérdidas de ingresos a través de la adquisición de clientes por parte de competidores. Los retrasos en cuentas por cobrar impiden el despliegue de capital para iniciativas de crecimiento. La empresa mantiene ${extendedClients.filter(c => !c.isActive).length} cuentas inactivas que representan oportunidades de reactivación.\n\n**Marco de Acción Estratégica:**\n1. **Inmediato:** ${lowStockProducts[0]?.name ? `Reabastecer ${lowStockProducts[0].name} (actual: ${lowStockProducts[0].currentStock} unidades vs objetivo: ${lowStockProducts[0].targetStock})` : 'Abordar faltantes críticos de inventario mediante adquisición expedita'}\n2. **Semana 1:** Iniciar procedimientos de cobranza para ${overdueClients[0]?.name || 'deudores principales'} respecto a saldo pendiente de $${overdueClients[0]?.overdueAmount.toLocaleString() || '24,300'}\n3. **Mes 1:** Implementar metodología de capacitación de ${topPerformer.name} en todo el equipo de ventas para potencial <span class=\"performance-positive\">aumento de ingresos mensuales de $${((topPerformer.performance - 45) * salesReps.length * 1000).toFixed(0)}</span>\n\n**Potencial de Recuperación Financiera:**\nLa optimización de la mezcla de productos podría generar <span class=\"performance-positive\">$${(topMarginProducts.slice(0,3).reduce((sum, p) => sum + (p.sellingPrice * p.targetStock * 0.3), 0)).toFixed(0)} en ingresos adicionales mensuales</span>. La cobranza acelerada tiene como objetivo <span class=\"key-point\">recuperación de $${(totalOverdue * 0.7).toFixed(0)}</span>. La reactivación de cuentas inactivas proporciona oportunidades de crecimiento suplementario a través del aprovechamiento de relaciones existentes.`;\n  }\n\n  // Productos con bajo rendimiento por categoría esta semana (Spanish version)\n  if (isSpanish && (lowerQuestion.includes('bajo') || lowerQuestion.includes('débil') || lowerQuestion.includes('mal') || lowerQuestion.includes('categoría') || lowerQuestion.includes('categoria') || lowerQuestion.includes('productos') || lowerQuestion.includes('underperforming'))) {\n    return `Análisis de rendimiento semanal por categoría de productos identifica segmentos con bajo rendimiento que requieren atención inmediata.\n\n**Categorías con Bajo Rendimiento Esta Semana:**\n\n**Categoría Condimentos (−23% vs objetivo):**\n- <span class=\"metric-highlight\">Condimento Básico</span>: 45 unidades vendidas vs 85 objetivo (−47%)\n  Sucursales afectadas: Rey Multiplaza, Xtra Penonomé\n- <span class=\"key-point\">Adobo Tradicional</span>: 62 unidades vendidas vs 95 objetivo (−35%)\n  Problema: Resistencia del cliente al cambio de empaque\n\n**Categoría Vinagres (−18% vs objetivo):**\n- <span class=\"metric-highlight\">Vinagre Regular 500ml</span>: 78 unidades vendidas vs 120 objetivo (−35%)\n  Problema: Impacto del aumento de precios en ventas por volumen\n- <span class=\"key-point\">Vinagre Blanco</span>: 34 unidades vendidas vs 55 objetivo (−38%)\n  Desalineación de preferencias regionales\n\n**Categoría Mayonesa (−12% vs objetivo):**\n- <span class=\"key-point\">Mayonesa 400g Estándar</span>: 156 unidades vendidas vs 190 objetivo (−18%)\n  Presión competitiva de marcas importadas\n\n**Análisis de Causa Raíz:**\n- <span class=\"metric-highlight\">Sensibilidad al precio</span>: Aumentos recientes del 8% afectando volumen\n- <span class=\"key-point\">Brecha promocional</span>: Promociones scanner de competidores capturando participación de mercado\n- <span class=\"key-point\">Cambio estacional</span>: Productos tradicionales disminuyendo durante período de verano\n\n**Comparación de Rendimiento:**\n**Productos de Alto Rendimiento (Sobre objetivo):**\n- <span class=\"performance-positive\">Condimento Super Xtra</span>: +15% vs objetivo\n- <span class=\"performance-positive\">Vinagre Premium</span>: +22% vs objetivo\n- <span class=\"performance-positive\">Mayonesa Premium</span>: +8% vs objetivo\n\n**Respuesta Estratégica:**\n1. **Inmediato:** Lanzar promoción 2x1 en Condimento Básico con bajo rendimiento\n2. **Ajuste de precios:** Revisar estrategia de precios de Vinagre Regular en 72 horas\n3. **Enfoque de capacitación:** Educación de representantes de ventas sobre beneficios de productos premium\n4. **Rebalanceo de inventario:** Reducir órdenes de SKUs de movimiento lento en 30% la próxima semana\n\nObjetivo de recuperación: <span class=\"performance-positive\">Retornar a +5% crecimiento de categoría en 14 días</span> a través de intervención enfocada.`;\n  }\n\n  // Productos agotados por sucursal (Spanish version)  \n  if (isSpanish && (lowerQuestion.includes('agotado') || lowerQuestion.includes('sin stock') || lowerQuestion.includes('faltante') || lowerQuestion.includes('stockout') || lowerQuestion.includes('sucursal') || lowerQuestion.includes('tienda') || lowerQuestion.includes('out of stock'))) {\n    return `Análisis crítico de escasez de inventario revela situaciones de agotamiento que afectan el rendimiento de ventas en múltiples ubicaciones.\n\n**Agotamientos Actuales por Sucursal:**\n\n**Super99 Costa Verde:**\n- <span class=\"metric-highlight\">Condimento Super Xtra 500g</span> - Agotado desde: 3 días, Ventas perdidas: $420\n- <span class=\"key-point\">Vinagre Premium 750ml</span> - Agotado desde: 1 día, Producto de alta demanda\n- <span class=\"key-point\">Adobo Tradicional</span> - Agotado desde: 5 días, Período pico estacional\n\n**Xtra Albrook:**\n- <span class=\"metric-highlight\">Mayonesa Premium 400g</span> - Agotado desde: 2 días, Ventas perdidas: $280\n- <span class=\"key-point\">Salsa Verde 300ml</span> - Agotado desde: 4 días, Quejas de clientes recibidas\n\n**Rey Multiplaza:**\n- <span class=\"metric-highlight\">Condimento Básico</span> - Agotado desde: 6 días, Reorden retrasado\n- <span class=\"key-point\">Vinagre Regular 500ml</span> - Agotado desde: 2 días, Problema de cadena de suministro\n\n**Análisis de Impacto Crítico:**\n- Total estimado de ventas perdidas: <span class=\"metric-highlight\">$1,240 esta semana</span>\n- Riesgo de satisfacción del cliente en <span class=\"key-point\">3 ubicaciones principales</span>\n- Ventana de oportunidad competidora: 48-72 horas antes de pérdida permanente de cliente\n\n**Estado de Cadena de Suministro:**\n- <span class=\"performance-positive\">Condimento Super Xtra</span>: Reabastecimiento llegando mañana\n- <span class=\"key-point\">Vinagre Premium</span>: Lote de producción listo para despacho\n- <span class=\"metric-highlight\">Mayonesa Premium</span>: Retraso en control de calidad, quedan 2 días\n\n**Plan de Acción Inmediata:**\n1. **Transferencia de emergencia** desde excedente de Xtra Penonomé a Albrook (Mayonesa Premium)\n2. **Entrega express** para Condimento Super Xtra a Costa Verde antes de las 6 AM\n3. **Comunicación al cliente** vía gerentes de tienda sobre cronograma de reabastecimiento\n4. **Monitoreo de inventario** diario durante los próximos 10 días para prevenir recurrencia\n\nObjetivo de prioridad de reabastecimiento: todos los SKUs críticos dentro de <span class=\"performance-positive\">24-48 horas</span> para minimizar impacto en ingresos.`;\n  }\n\n  // Recomendaciones de productos para descontinuar (Spanish version)\n  if (isSpanish && (lowerQuestion.includes('descontinuar') || lowerQuestion.includes('delist') || lowerQuestion.includes('eliminar') || lowerQuestion.includes('productos') || lowerQuestion.includes('bajo rendimiento') || lowerQuestion.includes('sugerir') || lowerQuestion.includes('recommend'))) {\n    return `Análisis de optimización de cartera de productos revela varios candidatos para descontinuación basados en métricas de rendimiento de ventas y rentabilidad.\n\n**Recomendaciones de Descontinuación:**\n\n**Productos con Bajo Rendimiento Crítico (Descontinuación Inmediata):**\n- <span class=\"metric-highlight\">Mayonesa 400g</span> - Tendencia de ventas: -25%, Inventario actual: 25 unidades, ROI: 2.1%\n- <span class=\"key-point\">Condimento Básico</span> - Tendencia de ventas: -18%, Margen: 8%, Patrón de movimiento lento\n- <span class=\"metric-highlight\">Vinagre Regular 500ml</span> - Tendencia de ventas: -22%, Inventario excesivo: 180 unidades vs objetivo 120\n\n**Candidatos Secundarios (Revisión Requerida):**\n- <span class=\"key-point\">Adobo Tradicional</span> - Disminuyendo 15% pero existe potencial de reformulación\n- <span class=\"metric-highlight\">Salsa Verde 200ml</span> - Margen bajo (12%) con dependencia estacional\n\n**Análisis de Impacto Financiero:**\nDescontinuar estos 3 productos principales resultaría en:\n- Liberar <span class=\"performance-positive\">$8,400 en capital de trabajo</span> del inventario excesivo\n- Reducir costos de almacenamiento en <span class=\"key-point\">15% mensual</span>\n- Permitir enfoque en productos de alto margen como Condimento Super Xtra (margen 35%)\n\n**Estrategia de Reemplazo:**\nRedirigir espacio en estantes e inversión de marketing hacia:\n- <span class=\"performance-positive\">Vinagre Premium</span> (margen 32.5%, demanda creciente)\n- <span class=\"performance-positive\">Condimento Super Xtra</span> (margen 35%, éxito comprobado)\n- Desarrollo de nuevos productos en segmentos premium de especias\n\n**Cronograma de Implementación:**\nEliminar gradualmente productos con bajo rendimiento durante 60 días mientras se construye inventario para productos de reemplazo para mantener continuidad de ingresos.`;\n  }\n\n  // Análisis de presupuesto de inversión por cadena (Spanish version)\n  if (isSpanish && (lowerQuestion.includes('presupuesto') || lowerQuestion.includes('inversión') || lowerQuestion.includes('inversion') || lowerQuestion.includes('cadena') || lowerQuestion.includes('gasto') || lowerQuestion.includes('sobregasto'))) {\n    return `Análisis de presupuesto de inversión revela sobregasto significativo en cadenas de retail clave con rendimiento deficiente de ROI.\n\n**Análisis de Sobregasto por Cadena:**\n\n**Rey (Sobregasto crítico: +$4,200):**\n- Presupuesto asignado: $18,000 | Gasto real: $22,200 | ROI: 1.8%\n- <span class=\"metric-highlight\">Scanner bonificado excesivo</span>: $2,800 sin conversión adecuada\n- <span class=\"key-point\">Material POP desperdiciado</span>: $1,400 en ubicaciones de bajo tráfico\n- Problema: Negociación deficiente de términos de inversión\n\n**Super99 (Sobregasto moderado: +$2,100):**\n- Presupuesto asignado: $15,000 | Gasto real: $17,100 | ROI: 2.4%\n- <span class=\"key-point\">Promociones 2x1 extendidas</span>: $1,300 más allá del período planificado\n- <span class=\"metric-highlight\">Activaciones de fin de semana</span>: $800 sin aprovechamiento total\n\n**Xtra (Dentro de presupuesto: -$800):**\n- Presupuesto asignado: $12,000 | Gasto real: $11,200 | ROI: 3.1%\n- <span class=\"performance-positive\">Gestión eficiente de recursos</span>\n- Modelo de referencia para otras cadenas\n\n**Análisis de Rendimiento vs Inversión:**\n- <span class=\"metric-highlight\">Rey</span>: $1.80 retorno por cada $1 invertido (bajo objetivo de 2.5x)\n- <span class=\"key-point\">Super99</span>: $2.40 retorno por cada $1 invertido (cerca del objetivo)\n- <span class=\"performance-positive\">Xtra</span>: $3.10 retorno por cada $1 invertido (supera objetivo)\n\n**Factores de Ineficiencia Identificados:**\n1. **Falta de medición**: 60% de activaciones sin tracking de conversión\n2. **Timing deficiente**: Promociones durante períodos de baja demanda estacional\n3. **Negociación débil**: Términos desfavorables en acuerdos de inversión de marketing\n\n**Plan de Optimización Inmediata:**\n- Reducir inversión en Rey en 25% hasta demostrar mejora de ROI\n- Implementar sistema de medición obligatorio para todas las activaciones\n- Renegociar términos con Rey para mejorar eficiencia de gasto\n\n**Proyección de Ahorro:**\nOptimización esperada: <span class=\"performance-positive\">$3,600 ahorro mensual</span> manteniendo o mejorando resultados de ventas.`;\n  }\n\n  // Rendimiento de ventas por región (Spanish version)\n  if (isSpanish && (lowerQuestion.includes('región') || lowerQuestion.includes('region') || lowerQuestion.includes('zona') || lowerQuestion.includes('rendimiento') || lowerQuestion.includes('ventas') || lowerQuestion.includes('territorio'))) {\n    return `Análisis de rendimiento regional revela disparidades significativas en el desempeño de ventas entre territorios con oportunidades de optimización identificadas.\n\n**Rendimiento por Región - Análisis Comparativo:**\n\n**Panamá Metro (Líder de rendimiento):**\n- <span class=\"performance-positive\">Objetivo: $85,000 | Logrado: $89,250 (+5%)</span>\n- Representante: María González | Rendimiento: 105%\n- <span class=\"key-point\">Clientes estrella</span>: Super99 Albrook, Rey Multiplaza, Xtra Costa Verde\n- Fortalezas: Penetración premium, gestión de inventario excelente\n\n**Chiriquí (Potencial subutilizado):**\n- <span class=\"metric-highlight\">Objetivo: $45,000 | Logrado: $37,800 (-16%)</span>\n- Representante: Carlos Mendoza | Rendimiento: 84%\n- <span class=\"key-point\">Desafíos</span>: Competencia regional intensa, preferencias locales\n- Oportunidad: El Machetazo sin penetrar ($15,000 potencial mensual)\n\n**Colón (Rendimiento estable):**\n- <span class=\"key-point\">Objetivo: $32,000 | Logrado: $33,600 (+5%)</span>\n- Representante: Ana Rivera | Rendimiento: 105%\n- <span class=\"performance-positive\">Consistencia destacada</span> en últimos 6 meses\n- Foco: Productos tradicionales, alta lealtad de marca\n\n**Veraguas (Territorio en desarrollo):**\n- <span class=\"metric-highlight\">Objetivo: $18,000 | Logrado: $14,400 (-20%)</span>\n- Representante: Luis Herrera | Rendimiento: 80%\n- <span class=\"key-point\">Factores limitantes</span>: Infraestructura de distribución, poder adquisitivo\n- Estrategia: Productos de precio accesible, mayor frecuencia de visitas\n\n**Análisis de Causas de Variación:**\n**Factores de éxito (Panamá Metro/Colón):**\n- Relaciones sólidas con gerentes de categoría\n- Ejecución consistente de promociones\n- Inventario optimizado por ubicación\n\n**Factores limitantes (Chiriquí/Veraguas):**\n- Competencia con marcas locales establecidas\n- Precios menos competitivos en mercados sensibles\n- Frecuencia de visitas insuficiente\n\n**Plan de Nivelación Regional:**\n1. **Chiriquí**: Desarrollar estrategia de precios específica para mercado regional\n2. **Veraguas**: Incrementar frecuencia de visitas de 2 a 3 semanales\n3. **Capacitación cruzada**: Mejores prácticas de Panamá Metro/Colón\n\n**Proyección de Mejora:**\nImplementación del plan podría resultar en <span class=\"performance-positive\">+$8,200 mensuales adicionales</span> alcanzando 95% del objetivo consolidado en regiones subutilizadas.`;\n  }\n\n  // Análisis de clientes (Spanish version)\n  if (isSpanish && (lowerQuestion.includes('clientes') || lowerQuestion.includes('cliente') || lowerQuestion.includes('cuentas') || lowerQuestion.includes('customer') || lowerQuestion.includes('análisis') || lowerQuestion.includes('analisis'))) {\n    return `Análisis integral de cartera de clientes revela oportunidades significativas de crecimiento y optimización de cuentas por cobrar.\n\n**Segmentación de Clientes por Valor:**\n\n**Clientes Nacionales de Alto Valor:**\n- <span class=\"performance-positive\">Super99 Nacional</span>: $28,500 mensual, 15 sucursales activas\n  Pago: 30 días | Riesgo: Bajo | Crecimiento: +12% vs año anterior\n- <span class=\"key-point\">Rey Cadena</span>: $22,800 mensual, 12 sucursales activas  \n  Pago: 45 días | Riesgo: Medio | Oportunidad: +$8,000 expansión\n\n**Clientes de Exportación:**\n- <span class=\"metric-highlight\">Distribuidora Costa Rica</span>: $15,600 mensual\n  Pago: 60 días | Riesgo: Bajo | Productos: Condimentos premium\n- <span class=\"key-point\">Cadena Guatemala</span>: $12,300 mensual\n  Pago: 30 días | Riesgo: Bajo | Potencial: +40% crecimiento\n\n**Análisis de Cuentas por Cobrar:**\n**Clientes con Mora Crítica:**\n- <span class=\"metric-highlight\">Minisuper La Esquina</span>: $2,840 vencido (45 días)\n  Acción: Suspensión temporal hasta pago\n- <span class=\"key-point\">Distribuidora Regional</span>: $1,920 vencido (30 días)\n  Negociación: Plan de pagos estructurado\n\n**Cartera Inactiva con Potencial:**\n- <span class=\"performance-positive\">Supermercados Metro Plus</span>: Sin pedidos 3 meses\n  Potencial estimado: $31,000 mensual | Razón: Cambio de gerencia\n- <span class=\"key-point\">Farmacias Arrocha</span>: Sin pedidos 2 meses  \n  Potencial estimado: $28,000 mensual | Razón: Problemas de distribución\n\n**Métricas de Rendimiento de Cuentas:**\n- Tiempo promedio de pago: 38 días (objetivo: 30 días)\n- Tasa de crecimiento de clientes existentes: +8.5% anual\n- Retención de clientes: 94% (excelente)\n- Valor promedio de orden: $2,340 (creciendo +5% mensual)\n\n**Oportunidades de Crecimiento Identificadas:**\n1. **Reactivación de cuentas inactivas**: $59,000 potencial mensual\n2. **Expansión en clientes existentes**: $12,000 adicional estimado\n3. **Aceleración de cobranza**: Mejora de flujo de caja $15,000\n\n**Plan de Acción Priorizado:**\n- Visita inmediata a Metro Plus y Arrocha para reactivación\n- Programa de incentivos para clientes puntuales (2% descuento)\n- Seguimiento semanal de cuentas con mora mayor a 15 días\n\n**Proyección de Recuperación Financiera:**\nLa optimización de la mezcla de clientes podría generar <span class=\"performance-positive\">$45,000 en ingresos adicionales mensuales</span>. La cobranza acelerada tiene como objetivo <span class=\"key-point\">recuperación de $12,600</span>. La reactivación de cuentas inactivas proporciona oportunidades de crecimiento suplementario significativo.`;\n  }\n\n  // Análisis de censo de clientes nacionales (Spanish version)\n  if (isSpanish && (lowerQuestion.includes('dichter') || lowerQuestion.includes('censo') || lowerQuestion.includes('clientes') || lowerQuestion.includes('nacionales') || lowerQuestion.includes('no vendemos') || lowerQuestion.includes('geolocalización') || lowerQuestion.includes('geolocalizacion'))) {\n    return `Basado en el censo nacional de clientes de Dichter & Neira, aquí están las oportunidades no aprovechadas que requieren atención inmediata.\n\n**Análisis de Cartera de Clientes Inactivos:**\nTenemos <span class=\"metric-highlight\">6 clientes principales</span> del censo nacional a los que actualmente no les vendemos, representando <span class=\"performance-positive\">$179,000 de ingresos potenciales mensuales</span>.\n\n**Distribución Geográfica y Oportunidades:**\n**Área Metropolitana de Panamá:**\n- <span class=\"key-point\">Supermercados Rey Metro</span> (8.9824°N, 79.5199°O) - <span class=\"performance-positive\">$45,000 potencial mensual</span>\n- <span class=\"key-point\">Farmacias Arrocha</span> (8.9537°N, 79.5026°O) - <span class=\"performance-positive\">$28,000 potencial mensual</span>\n- <span class=\"key-point\">Supermercados Metro Plus</span> (8.9482°N, 79.6635°O) - <span class=\"performance-positive\">$31,000 potencial mensual</span>\n\n**Oportunidades Regionales:**\n- <span class=\"metric-highlight\">Super Centro Colón</span> (9.3547°N, 79.9003°O) - Región Colón, $22,000 potencial\n- <span class=\"metric-highlight\">Supermercados El Machetazo</span> (8.4177°N, 82.4392°O) - Región Chiriquí, $38,000 potencial  \n- <span class=\"metric-highlight\">Mini Market La Familia</span> (8.1228°N, 80.8147°O) - Región Veraguas, $15,000 potencial\n\n**Ranking de Prioridad Estratégica:**\n1. **Supermercados Rey Metro** - Objetivo de mayor valor con ubicación prime en Panamá Centro\n2. **Supermercados El Machetazo** - Fuerte presencia regional en mercado creciente de Chiriquí\n3. **Supermercados Metro Plus** - Oportunidad estratégica de expansión en Panamá Oeste\n\n**Estrategia de Implementación:**\nEstas cuentas requieren desarrollo de negocios dedicado con carteras de productos personalizadas que coincidan con preferencias regionales y estructuras de precios competitivos alineadas con condiciones de mercado local.\n\n**Plan de Acción Inmediata:**\n1. **Contacto directo** con Rey Metro dentro de 48 horas para reunión de presentación\n2. **Análisis de precios competitivos** para cada ubicación regional\n3. **Desarrollo de propuestas** personalizadas por cadena dentro de 1 semana\n4. **Asignación de representantes** especializados para cada cuenta objetivo\n\nPotencial de ingresos de activación: <span class=\"performance-positive\">$179,000 mensuales</span> a través de desarrollo sistemático de cuentas.`;\n  }\n\n\n  \n  // 12. Underperforming products by category this week\n  if ((lowerQuestion.includes('underperforming') || lowerQuestion.includes('poor') || lowerQuestion.includes('weak')) && lowerQuestion.includes('category') && (lowerQuestion.includes('week') || lowerQuestion.includes('this week'))) {\n    return `Weekly product category performance analysis identifies underperforming segments requiring immediate attention.\n\n**Underperforming Categories This Week:**\n\n**Condiments Category (−23% vs target):**\n- <span class=\"metric-highlight\">Condimento Básico</span>: 45 units sold vs 85 target (−47%)\n  Branches affected: Rey Multiplaza, Xtra Penonome\n- <span class=\"key-point\">Adobo Tradicional</span>: 62 units sold vs 95 target (−35%)\n  Issue: Packaging change customer resistance\n\n**Vinegar Category (−18% vs target):**\n- <span class=\"metric-highlight\">Vinagre Regular 500ml</span>: 78 units sold vs 120 target (−35%)\n  Problem: Price increase impact on volume sales\n- <span class=\"key-point\">Vinagre Blanco</span>: 34 units sold vs 55 target (−38%)\n  Regional preference misalignment\n\n**Mayonnaise Category (−12% vs target):**\n- <span class=\"key-point\">Mayonesa 400g Standard</span>: 156 units sold vs 190 target (−18%)\n  Competitive pressure from imported brands\n\n**Root Cause Analysis:**\n- <span class=\"metric-highlight\">Price sensitivity</span>: Recent 8% price increases affecting volume\n- <span class=\"key-point\">Promotional gap</span>: Competitor scanner promotions capturing market share\n- <span class=\"key-point\">Seasonal shift</span>: Traditional products declining during summer period\n\n**Performance Comparison:**\n**Strong Performers (Above target):**\n- <span class=\"performance-positive\">Condimento Super Xtra</span>: +15% vs target\n- <span class=\"performance-positive\">Vinagre Premium</span>: +22% vs target\n- <span class=\"performance-positive\">Mayonesa Premium</span>: +8% vs target\n\n**Strategic Response:**\n1. **Immediate:** Launch 2x1 promotion on underperforming Condimento Básico\n2. **Price adjustment:** Review Vinagre Regular pricing strategy within 72 hours\n3. **Training focus:** Sales rep education on premium product benefits\n4. **Inventory rebalancing:** Reduce slow-moving SKU orders by 30% next week\n\nTarget recovery: <span class=\"performance-positive\">Return to +5% category growth within 14 days</span> through focused intervention.`;\n  }\n  \n  // 11. Out of stock products by branch\n  if ((lowerQuestion.includes('out of stock') || lowerQuestion.includes('stockout')) && !lowerQuestion.includes('underperforming') && !lowerQuestion.includes('category')) {\n    return `Critical inventory shortage analysis reveals stockout situations affecting sales performance across multiple locations.\n\n**Current Stockouts by Branch:**\n\n**Super99 Costa Verde:**\n- <span class=\"metric-highlight\">Condimento Super Xtra 500g</span> - Out since: 3 days, Lost sales: $420\n- <span class=\"key-point\">Vinagre Premium 750ml</span> - Out since: 1 day, High demand product\n- <span class=\"key-point\">Adobo Tradicional</span> - Out since: 5 days, Seasonal peak period\n\n**Xtra Albrook:**\n- <span class=\"metric-highlight\">Mayonesa Premium 400g</span> - Out since: 2 days, Lost sales: $280\n- <span class=\"key-point\">Salsa Verde 300ml</span> - Out since: 4 days, Customer complaints received\n\n**Rey Multiplaza:**\n- <span class=\"metric-highlight\">Condimento Básico</span> - Out since: 6 days, Reorder delayed\n- <span class=\"key-point\">Vinagre Regular 500ml</span> - Out since: 2 days, Supply chain issue\n\n**Critical Impact Analysis:**\n- Total estimated lost sales: <span class=\"metric-highlight\">$1,240 this week</span>\n- Customer satisfaction risk in <span class=\"key-point\">3 major locations</span>\n- Competitor opportunity window: 48-72 hours before permanent customer loss\n\n**Supply Chain Status:**\n- <span class=\"performance-positive\">Condimento Super Xtra</span>: Restock arriving tomorrow\n- <span class=\"key-point\">Vinagre Premium</span>: Production batch ready for dispatch\n- <span class=\"metric-highlight\">Mayonesa Premium</span>: Quality control delay, 2 days remaining\n\n**Immediate Action Plan:**\n1. **Emergency transfer** from Xtra Penonome surplus to Albrook (Mayonesa Premium)\n2. **Express delivery** for Condimento Super Xtra to Costa Verde by 6 AM\n3. **Customer communication** via store managers about restocking timeline\n4. **Inventory monitoring** daily for next 10 days to prevent recurrence\n\nRestocking priority targets all critical SKUs within <span class=\"performance-positive\">24-48 hours</span> to minimize revenue impact.`;\n  }\n  \n  // 6. National client census analysis\n  if (lowerQuestion.includes('dichter') || lowerQuestion.includes('census') || lowerQuestion.includes('not selling') || lowerQuestion.includes('geolocation')) {\n    const nationalClients = [\n      { name: 'Supermercados Rey Metro', region: 'Panama Centro', lat: 8.9824, lng: -79.5199, potential: '$45,000', status: 'Not Active' },\n      { name: 'Farmacias Arrocha', region: 'Panama Este', lat: 8.9537, lng: -79.5026, potential: '$28,000', status: 'Not Active' },\n      { name: 'Super Centro Colón', region: 'Colón', lat: 9.3547, lng: -79.9003, potential: '$22,000', status: 'Not Active' },\n      { name: 'Supermercados El Machetazo', region: 'Chiriquí', lat: 8.4177, lng: -82.4392, potential: '$38,000', status: 'Not Active' },\n      { name: 'Mini Market La Familia', region: 'Veraguas', lat: 8.1228, lng: -80.8147, potential: '$15,000', status: 'Not Active' },\n      { name: 'Supermercados Metro Plus', region: 'Panama Oeste', lat: 8.9482, lng: -79.6635, potential: '$31,000', status: 'Not Active' }\n    ];\n    \n    return `Based on the Dichter & Neira national client census, here are the untapped opportunities requiring immediate attention.\n\n**Inactive Client Portfolio Analysis:**\nWe have <span class=\"metric-highlight\">${nationalClients.length} major clients</span> from the national census that we're currently not selling to, representing <span class=\"performance-positive\">$179,000 monthly potential revenue</span>.\n\n**Geographic Distribution & Opportunities:**\n**Panama Metro Area:**\n- <span class=\"key-point\">Supermercados Rey Metro</span> (8.9824°N, 79.5199°W) - <span class=\"performance-positive\">$45,000 monthly potential</span>\n- <span class=\"key-point\">Farmacias Arrocha</span> (8.9537°N, 79.5026°W) - <span class=\"performance-positive\">$28,000 monthly potential</span>\n- <span class=\"key-point\">Supermercados Metro Plus</span> (8.9482°N, 79.6635°W) - <span class=\"performance-positive\">$31,000 monthly potential</span>\n\n**Regional Opportunities:**\n- <span class=\"metric-highlight\">Super Centro Colón</span> (9.3547°N, 79.9003°W) - Colón region, $22,000 potential\n- <span class=\"metric-highlight\">Supermercados El Machetazo</span> (8.4177°N, 82.4392°W) - Chiriquí region, $38,000 potential  \n- <span class=\"metric-highlight\">Mini Market La Familia</span> (8.1228°N, 80.8147°W) - Veraguas region, $15,000 potential\n\n**Strategic Priority Ranking:**\n1. **Supermercados Rey Metro** - Highest value target with prime Panama Centro location\n2. **Supermercados El Machetazo** - Strong regional presence in growing Chiriquí market\n3. **Supermercados Metro Plus** - Strategic Panama Oeste expansion opportunity\n\n**Implementation Strategy:**\nThese accounts require dedicated business development with customized product portfolios matching regional preferences and competitive pricing structures aligned with local market conditions.`;\n  }\n  \n  // 7. Product delisting recommendations\n  if (lowerQuestion.includes('delist') || lowerQuestion.includes('discontinue') || lowerQuestion.includes('low sales') || lowerQuestion.includes('suggest') && lowerQuestion.includes('product')) {\n    const poorPerformers = products.filter(p => p.salesTrend < -20 || p.profitability < 5).sort((a, b) => a.salesTrend - b.salesTrend);\n    const slowMovers = products.filter(p => p.currentStock > p.targetStock * 1.5 && p.salesTrend < 0);\n    \n    return `Product portfolio optimization analysis reveals several candidates for delisting based on sales performance and profitability metrics.\n\n**Delisting Recommendations:**\n\n**Critical Underperformers (Immediate Delisting):**\n- <span class=\"metric-highlight\">Mayonesa 400g</span> - Sales trend: -25%, Current inventory: 25 units, ROI: 2.1%\n- <span class=\"key-point\">Condimento Básico</span> - Sales trend: -18%, Margin: 8%, Slow movement pattern\n- <span class=\"metric-highlight\">Vinagre Regular 500ml</span> - Sales trend: -22%, Excess inventory: 180 units vs 120 target\n\n**Secondary Candidates (Review Required):**\n- <span class=\"key-point\">Adobo Tradicional</span> - Declining 15% but reformulation potential exists\n- <span class=\"metric-highlight\">Salsa Verde 200ml</span> - Low margin (12%) with seasonal dependency\n\n**Financial Impact Analysis:**\nDelisting these 3 primary products would:\n- Free up <span class=\"performance-positive\">$8,400 in working capital</span> from excess inventory\n- Reduce storage costs by <span class=\"key-point\">15% monthly</span>\n- Allow focus on high-margin performers like Condimento Super Xtra (35% margin)\n\n**Replacement Strategy:**\nRedirect shelf space and marketing investment toward:\n- <span class=\"performance-positive\">Vinagre Premium</span> (32.5% margin, growing demand)\n- <span class=\"performance-positive\">Condimento Super Xtra</span> (35% margin, proven success)\n- New product development in premium spice segments\n\n**Implementation Timeline:**\nPhase out underperformers over 60 days while building inventory for replacement products to maintain revenue continuity.`;\n  }\n  \n  // 8. Chain investment budget analysis  \n  if (lowerQuestion.includes('budget') || lowerQuestion.includes('overspend') || lowerQuestion.includes('investment') && lowerQuestion.includes('chain')) {\n    const chainBudgets = [\n      { name: 'Xtra', allocated: 45000, spent: 52000, performance: 67, efficiency: 0.78 },\n      { name: 'Super99', allocated: 35000, spent: 31000, performance: 89, efficiency: 1.12 },\n      { name: 'El Machetazo', allocated: 28000, spent: 34000, performance: 45, efficiency: 0.65 },\n      { name: 'Rey', allocated: 40000, spent: 41500, performance: 72, efficiency: 0.86 }\n    ];\n    \n    const overspending = chainBudgets.filter(chain => chain.spent > chain.allocated);\n    \n    return `Investment budget analysis reveals significant overspending in key retail chains with poor ROI performance.\n\n**Budget Variance Analysis:**\n\n**Critical Overspending:**\n- <span class=\"metric-highlight\">Xtra Chain</span>: $52,000 spent vs $45,000 allocated (+$7,000 overage, 15.6% over budget)\n  Performance: 67% target achievement = <span class=\"key-point\">0.78 efficiency ratio</span>\n  \n- <span class=\"metric-highlight\">El Machetazo</span>: $34,000 spent vs $28,000 allocated (+$6,000 overage, 21.4% over budget)\n  Performance: 45% target achievement = <span class=\"key-point\">0.65 efficiency ratio</span>\n\n**Efficient Investment:**\n- <span class=\"performance-positive\">Super99</span>: $31,000 spent vs $35,000 allocated (Under budget by $4,000)\n  Performance: 89% target achievement = <span class=\"performance-positive\">1.12 efficiency ratio</span>\n\n**Minor Overage:**\n- <span class=\"key-point\">Rey</span>: $41,500 spent vs $40,000 allocated (+$1,500 overage, 3.8% over budget)\n  Performance: 72% target achievement = 0.86 efficiency ratio\n\n**Root Cause Analysis:**\nXtra and El Machetazo overspending stems from excessive promotional investments without corresponding sales results. Poor execution and market positioning drive low efficiency ratios.\n\n**Corrective Actions:**\n1. **Immediate:** Freeze additional Xtra and El Machetazo spending until performance improves\n2. **Reallocate:** Transfer $5,000 from underperforming chains to Super99 for expansion\n3. **Performance Gates:** Implement monthly efficiency reviews before budget releases\n4. **ROI Targets:** Minimum 0.90 efficiency ratio required for continued investment\n\nTotal overspending: <span class=\"metric-highlight\">$14,500</span> with opportunity to reallocate toward higher-performing channels.`;\n  }\n  \n  // 9. Overdue clients analysis\n  if (lowerQuestion.includes('overdue') || lowerQuestion.includes('120 days') || lowerQuestion.includes('chain') && lowerQuestion.includes('overdue')) {\n    const severelyOverdue = extendedClients.filter(c => c.overdueDays > 120).sort((a, b) => b.overdueDays - a.overdueDays);\n    \n    return `Critical accounts receivable analysis shows several chains with severe collection issues exceeding 120 days.\n\n**Clients Overdue >120 Days:**\n\n${severelyOverdue.length > 0 ? severelyOverdue.map((client, index) => `\n**${index + 1}. ${client.name}**\n- Outstanding: <span class=\"metric-highlight\">$${client.overdueAmount.toLocaleString()}</span>\n- Days overdue: <span class=\"key-point\">${client.overdueDays} days</span>\n- Risk level: <span class=\"metric-highlight\">${client.riskLevel.toUpperCase()}</span>\n- Monthly volume: $${client.monthlyVolume.toLocaleString()}\n- Location: ${client.region}\n`).join('') : 'Currently no clients are overdue beyond 120 days.'}\n\n**Collection Priority Analysis:**\n${severelyOverdue.length > 0 ? `\nTotal exposure: <span class=\"metric-highlight\">$${severelyOverdue.reduce((sum, c) => sum + c.overdueAmount, 0).toLocaleString()}</span> across ${severelyOverdue.length} accounts\n\n**Immediate Actions Required:**\n1. **${severelyOverdue[0]?.name}** - Highest priority with $${severelyOverdue[0]?.overdueAmount.toLocaleString()} at ${severelyOverdue[0]?.overdueDays} days\n2. Legal collection procedures recommended for accounts >150 days\n3. Credit hold implementation until payment received\n4. Executive-level intervention for relationships >$20,000\n\n**Risk Mitigation:**\n- Implement weekly collection calls for all 120+ day accounts\n- Require cash-on-delivery for new orders\n- Consider factoring services for immediate cash flow\n- Review credit terms and approval processes\n` : `\n**Positive Collection Performance:**\nNo chains currently exceed 120-day overdue threshold, indicating effective collection management. Continue monitoring accounts approaching 90+ days for preventive action.\n`}\n\n**Policy Recommendations:**\nImplement stricter credit controls with 90-day maximum terms and mandatory credit insurance for large chain accounts.`;\n  }\n  \n  // 10. Sales rep punctuality analysis\n  if ((lowerQuestion.includes('late') || lowerQuestion.includes('arrive') || lowerQuestion.includes('punctual')) && (lowerQuestion.includes('fortnight') || lowerQuestion.includes('month') || lowerQuestion.includes('quarter')) && !lowerQuestion.includes('scanner') && !lowerQuestion.includes('promotion')) {\n    const period = lowerQuestion.includes('fortnight') ? 'last 14 days' : \n                   lowerQuestion.includes('quarter') ? 'last 3 months' : 'last month';\n    \n    return `Sales team punctuality analysis for ${period} reveals attendance patterns affecting client relationship quality.\n\n**Punctuality Performance Report:**\n\n**Representatives with Late Arrivals:**\n- <span class=\"metric-highlight\">Carlos Mendoza</span> (Chiriquí region)\n  Late arrivals: <span class=\"key-point\">8 instances</span> in ${period}\n  Average delay: 45 minutes, Impact: 3 missed client appointments\n  \n- <span class=\"metric-highlight\">María González</span> (Coclé region)  \n  Late arrivals: <span class=\"key-point\">5 instances</span> in ${period}\n  Average delay: 30 minutes, Impact: Reduced daily call volume\n  \n- <span class=\"key-point\">Roberto Silva</span> (Panamá Oeste)\n  Late arrivals: <span class=\"key-point\">3 instances</span> in ${period}\n  Average delay: 25 minutes, Pattern: Monday mornings\n\n**Excellent Punctuality:**\n- <span class=\"performance-positive\">José Luis Vargas</span> (Santiago) - Perfect attendance record\n- <span class=\"performance-positive\">Ana Morales</span> (Panamá Centro) - 1 late arrival due to emergency\n\n**Business Impact Analysis:**\nLate arrivals resulted in:\n- <span class=\"metric-highlight\">12 missed client appointments</span> total\n- Estimated revenue impact: <span class=\"key-point\">$3,200 in delayed orders</span>\n- Client satisfaction concerns in Chiriquí territory\n\n**Root Cause Factors:**\n- Transportation challenges in rural Chiriquí region\n- Monday morning pattern suggests personal scheduling issues\n- Some reps underestimating travel time between accounts\n\n**Corrective Action Plan:**\n1. **Immediate:** Implement GPS tracking for real-time location monitoring\n2. **Week 1:** Provide transportation allowance for problematic regions\n3. **Month 1:** Mandatory time management training for repeat offenders\n4. **Ongoing:** Weekly punctuality reports tied to performance reviews\n\nPerformance improvement target: <span class=\"performance-positive\">95% on-time arrival rate</span> within 60 days.`;\n  }\n  \n  // 11. Out of stock analysis by branch\n  if (lowerQuestion.includes('out of stock') || lowerQuestion.includes('stockout') || lowerQuestion.includes('branches') || lowerQuestion.includes('stock') && lowerQuestion.includes('branch')) {\n    const outOfStockItems = stockStatus.filter(s => s.isOutOfStock);\n    const branchStockouts = [\n      { store: 'Xtra Albrook', products: ['Mayonesa 400g', 'Vinagre Premium'], impact: '$450 daily' },\n      { store: 'Super99 Via España', products: ['Condimento Super Xtra'], impact: '$280 daily' },\n      { store: 'Rey Multiplaza', products: ['Adobo Tradicional', 'Salsa Verde'], impact: '$320 daily' },\n      { store: 'Xtra Penonome', products: ['Vinagre Premium'], impact: '$180 daily' },\n      { store: 'Super99 Costa Verde', products: ['Condimento Super Xtra', 'Mayonesa 400g'], impact: '$380 daily' }\n    ];\n    \n    return `Current stockout analysis across retail branches shows critical inventory gaps affecting daily revenue and customer satisfaction.\n\n**Branch-Level Stockout Report:**\n\n**High-Impact Locations:**\n- <span class=\"metric-highlight\">Super99 Costa Verde</span>\n  Out of stock: <span class=\"key-point\">Condimento Super Xtra, Mayonesa 400g</span>\n  Revenue impact: <span class=\"performance-positive\">$380 daily loss</span>\n  \n- <span class=\"metric-highlight\">Xtra Albrook</span>\n  Out of stock: <span class=\"key-point\">Mayonesa 400g, Vinagre Premium</span>\n  Revenue impact: <span class=\"performance-positive\">$450 daily loss</span>\n\n**Medium-Impact Locations:**\n- <span class=\"key-point\">Rey Multiplaza</span>\n  Out of stock: Adobo Tradicional, Salsa Verde\n  Revenue impact: $320 daily loss\n  \n- <span class=\"key-point\">Super99 Via España</span>\n  Out of stock: Condimento Super Xtra\n  Revenue impact: $280 daily loss\n\n**Regional Concerns:**\n- <span class=\"metric-highlight\">Xtra Penonome</span>\n  Out of stock: Vinagre Premium\n  Revenue impact: $180 daily loss\n\n**Critical Product Analysis:**\nMost frequently out of stock:\n1. <span class=\"metric-highlight\">Condimento Super Xtra</span> - 2 branches (high-margin product loss)\n2. <span class=\"key-point\">Mayonesa 400g</span> - 2 branches (volume product impact)\n3. <span class=\"performance-positive\">Vinagre Premium</span> - 2 branches (premium segment loss)\n\n**Total Business Impact:**\n- Combined daily revenue loss: <span class=\"metric-highlight\">$1,610 per day</span>\n- Monthly impact: <span class=\"key-point\">$48,300 potential revenue</span>\n- Customer satisfaction risk across 5 major retail locations\n\n**Immediate Action Plan:**\n1. **Today:** Emergency shipment to Xtra Albrook and Super99 Costa Verde (highest impact)\n2. **48 Hours:** Restock all locations with priority products\n3. **Week 1:** Implement automated reorder points for critical SKUs\n4. **Ongoing:** Daily inventory monitoring system for early warning\n\n**Prevention Strategy:**\nDeploy regional warehouse buffer stocks and implement weekly branch visit schedule for inventory verification and demand forecasting.`;\n  }\n  \n  // 1. Product sales performance by period and store\n  if (lowerQuestion.includes('didn\\'t sell') || lowerQuestion.includes('not sell') || (lowerQuestion.includes('product') && (lowerQuestion.includes('yesterday') || lowerQuestion.includes('week') || lowerQuestion.includes('store') || lowerQuestion.includes('pdv')))) {\n    const period = lowerQuestion.includes('yesterday') ? 'yesterday' : \n                   lowerQuestion.includes('week') ? 'this week' : 'recent period';\n    \n    const nonSellingProducts = [\n      { product: 'Salsa Verde 200ml', store: 'Xtra Albrook', days: 3, lastSale: '$12', impact: 'Low margin product' },\n      { product: 'Condimento Básico', store: 'Super99 Via España', days: 5, lastSale: '$8', impact: 'Declining trend' },\n      { product: 'Mayonesa 400g', store: 'Rey Multiplaza', days: 2, lastSale: '$15', impact: 'Volume concern' },\n      { product: 'Adobo Tradicional', store: 'Xtra Penonome', days: 4, lastSale: '$18', impact: 'Regional preference' },\n      { product: 'Vinagre Regular', store: 'El Machetazo David', days: 6, lastSale: '$10', impact: 'Premium preference' }\n    ];\n    \n    const chainBudgetPerformance = [\n      { chain: 'El Machetazo', budget: 28000, actual: 21000, variance: -25, status: 'Below Budget' },\n      { chain: 'Xtra', budget: 45000, actual: 38000, variance: -15.6, status: 'Below Budget' },\n      { chain: 'Super99', budget: 35000, actual: 36500, variance: +4.3, status: 'Above Budget' },\n      { chain: 'Rey', budget: 40000, actual: 39200, variance: -2, status: 'On Target' }\n    ];\n    \n    const belowBudgetChains = chainBudgetPerformance.filter(chain => chain.variance < 0);\n    \n    return `Product sales performance analysis for ${period} reveals specific SKUs with zero movement across key retail locations.\n\n**Non-Selling Products by Store (${period.charAt(0).toUpperCase() + period.slice(1)}):**\n\n**Critical Concerns:**\n- <span class=\"metric-highlight\">Vinagre Regular</span> at El Machetazo David - <span class=\"key-point\">6 days no sales</span>, last transaction: $10\n- <span class=\"metric-highlight\">Condimento Básico</span> at Super99 Via España - <span class=\"key-point\">5 days no sales</span>, declining trend evident\n- <span class=\"key-point\">Adobo Tradicional</span> at Xtra Penonome - 4 days no sales, regional preference issue\n\n**Medium Priority:**\n- <span class=\"key-point\">Salsa Verde 200ml</span> at Xtra Albrook - 3 days no movement, low margin impact\n- <span class=\"metric-highlight\">Mayonesa 400g</span> at Rey Multiplaza - 2 days no sales, volume product concern\n\n**Chain Budget Performance Analysis:**\n\n**Chains Below Budget:**\n${belowBudgetChains.map(chain => `\n- <span class=\"metric-highlight\">${chain.chain}</span>: $${chain.actual.toLocaleString()} vs $${chain.budget.toLocaleString()} target\n  Variance: <span class=\"key-point\">${chain.variance}% below budget</span>\n  Gap: $${(chain.budget - chain.actual).toLocaleString()} shortfall`).join('')}\n\n**Root Cause Analysis:**\nNon-selling patterns indicate inventory positioning issues, regional preference mismatches, and product lifecycle concerns. El Machetazo's -25% budget variance correlates with premium product preference shift away from regular lines.\n\n**Immediate Actions:**\n1. **Today:** Relocate slow-moving products to high-traffic store sections\n2. **Week 1:** Implement promotional pricing for 6+ day non-sellers\n3. **Month 1:** Review product mix alignment with regional preferences\n4. **Budget Recovery:** Focus El Machetazo and Xtra on high-velocity SKUs to close budget gaps\n\n**Impact Assessment:**\nCombined non-selling inventory represents <span class=\"performance-positive\">$63 daily opportunity cost</span> with <span class=\"metric-highlight\">$13,000 total budget shortfall</span> requiring immediate intervention.`;\n  }\n  \n  // 11. Out of stock products by branch\n  if ((lowerQuestion.includes('out of stock') || lowerQuestion.includes('stockout') || (lowerQuestion.includes('stock') && lowerQuestion.includes('branch'))) && !lowerQuestion.includes('underperforming') && !lowerQuestion.includes('category')) {\n    return `Critical inventory shortage analysis reveals stockout situations affecting sales performance across multiple locations.\n\n**Current Stockouts by Branch:**\n\n**Super99 Costa Verde:**\n- <span class=\"metric-highlight\">Condimento Super Xtra 500g</span> - Out since: 3 days, Lost sales: $420\n- <span class=\"key-point\">Vinagre Premium 750ml</span> - Out since: 1 day, High demand product\n- <span class=\"key-point\">Adobo Tradicional</span> - Out since: 5 days, Seasonal peak period\n\n**Xtra Albrook:**\n- <span class=\"metric-highlight\">Mayonesa Premium 400g</span> - Out since: 2 days, Lost sales: $280\n- <span class=\"key-point\">Salsa Verde 300ml</span> - Out since: 4 days, Customer complaints received\n\n**Rey Multiplaza:**\n- <span class=\"metric-highlight\">Condimento Básico</span> - Out since: 6 days, Reorder delayed\n- <span class=\"key-point\">Vinagre Regular 500ml</span> - Out since: 2 days, Supply chain issue\n\n**Critical Impact Analysis:**\n- Total estimated lost sales: <span class=\"metric-highlight\">$1,240 this week</span>\n- Customer satisfaction risk in <span class=\"key-point\">3 major locations</span>\n- Competitor opportunity window: 48-72 hours before permanent customer loss\n\n**Supply Chain Status:**\n- <span class=\"performance-positive\">Condimento Super Xtra</span>: Restock arriving tomorrow\n- <span class=\"key-point\">Vinagre Premium</span>: Production batch ready for dispatch\n- <span class=\"metric-highlight\">Mayonesa Premium</span>: Quality control delay, 2 days remaining\n\n**Immediate Action Plan:**\n1. **Emergency transfer** from Xtra Penonome surplus to Albrook (Mayonesa Premium)\n2. **Express delivery** for Condimento Super Xtra to Costa Verde by 6 AM\n3. **Customer communication** via store managers about restocking timeline\n4. **Inventory monitoring** daily for next 10 days to prevent recurrence\n\nRestocking priority targets all critical SKUs within <span class=\"performance-positive\">24-48 hours</span> to minimize revenue impact.`;\n  }\n  \n  // 12. Underperforming products by category this week\n  if ((lowerQuestion.includes('underperforming') || lowerQuestion.includes('poor') || lowerQuestion.includes('weak')) && lowerQuestion.includes('category') && (lowerQuestion.includes('week') || lowerQuestion.includes('this week'))) {\n    return `Weekly product category performance analysis identifies underperforming segments requiring immediate attention.\n\n**Underperforming Categories This Week:**\n\n**Condiments Category (−23% vs target):**\n- <span class=\"metric-highlight\">Condimento Básico</span>: 45 units sold vs 85 target (−47%)\n  Branches affected: Rey Multiplaza, Xtra Penonome\n- <span class=\"key-point\">Adobo Tradicional</span>: 62 units sold vs 95 target (−35%)\n  Issue: Packaging change customer resistance\n\n**Vinegar Category (−18% vs target):**\n- <span class=\"metric-highlight\">Vinagre Regular 500ml</span>: 78 units sold vs 120 target (−35%)\n  Problem: Price increase impact on volume sales\n- <span class=\"key-point\">Vinagre Blanco</span>: 34 units sold vs 55 target (−38%)\n  Regional preference misalignment\n\n**Mayonnaise Category (−12% vs target):**\n- <span class=\"key-point\">Mayonesa 400g Standard</span>: 156 units sold vs 190 target (−18%)\n  Competitive pressure from imported brands\n\n**Root Cause Analysis:**\n- <span class=\"metric-highlight\">Price sensitivity</span>: Recent 8% price increases affecting volume\n- <span class=\"key-point\">Promotional gap</span>: Competitor scanner promotions capturing market share\n- <span class=\"key-point\">Seasonal shift</span>: Traditional products declining during summer period\n\n**Performance Comparison:**\n**Strong Performers (Above target):**\n- <span class=\"performance-positive\">Condimento Super Xtra</span>: +15% vs target\n- <span class=\"performance-positive\">Vinagre Premium</span>: +22% vs target\n- <span class=\"performance-positive\">Mayonesa Premium</span>: +8% vs target\n\n**Strategic Response:**\n1. **Immediate:** Launch 2x1 promotion on underperforming Condimento Básico\n2. **Price adjustment:** Review Vinagre Regular pricing strategy within 72 hours\n3. **Training focus:** Sales rep education on premium product benefits\n4. **Inventory rebalancing:** Reduce slow-moving SKU orders by 30% next week\n\nTarget recovery: <span class=\"performance-positive\">Return to +5% category growth within 14 days</span> through focused intervention.`;\n  }\n  \n  // 13. Sales growth vs last year per chain\n  if ((lowerQuestion.includes('growth') || lowerQuestion.includes('vs') || lowerQuestion.includes('last year')) && lowerQuestion.includes('chain')) {\n    return `Annual sales growth analysis reveals mixed performance across retail chains with clear winners and strategic challenges.\n\n**Sales Growth vs Last Year by Chain:**\n\n**High Growth Performers:**\n- <span class=\"performance-positive\">Super99 Chain</span>\n  YTD Growth: <span class=\"performance-positive\">+18.5%</span> ($245,000 vs $207,000)\n  Driver: Premium product focus and excellent execution\n  \n- <span class=\"performance-positive\">Rey Chain</span>\n  YTD Growth: <span class=\"performance-positive\">+12.3%</span> ($198,000 vs $176,000)\n  Driver: Strong promotional calendar and strategic locations\n\n**Moderate Growth:**\n- <span class=\"key-point\">Xtra Chain</span>\n  YTD Growth: <span class=\"key-point\">+6.8%</span> ($167,000 vs $156,000)\n  Mixed performance across locations, opportunity for improvement\n\n**Declining Performance:**\n- <span class=\"metric-highlight\">El Machetazo</span>\n  YTD Growth: <span class=\"metric-highlight\">−8.2%</span> ($89,000 vs $97,000)\n  Issue: Market positioning and competitive pressure\n  \n- <span class=\"metric-highlight\">Novey</span>\n  YTD Growth: <span class=\"metric-highlight\">−15.4%</span> ($34,000 vs $40,000)\n  Issue: Category space reduction and focus shift\n\n**Growth Analysis by Performance Drivers:**\n\n**Premium Strategy Success:**\nSuper99's focus on <span class=\"performance-positive\">high-margin premium products</span> drives both volume and value growth.\n\n**Traditional Market Challenges:**\nEl Machetazo and Novey reflect broader <span class=\"metric-highlight\">traditional retail channel pressures</span> from modern trade expansion.\n\n**Market Share Evolution:**\n- <span class=\"performance-positive\">Super99</span>: 34.5% share (+2.8% vs last year)\n- <span class=\"key-point\">Rey</span>: 27.8% share (+1.2% vs last year)\n- <span class=\"key-point\">Xtra</span>: 23.5% share (−0.5% vs last year)\n- <span class=\"metric-highlight\">El Machetazo</span>: 12.5% share (−2.1% vs last year)\n- <span class=\"metric-highlight\">Novey</span>: 4.8% share (−1.4% vs last year)\n\n**Strategic Recommendations:**\n1. **Double down** on Super99 and Rey partnerships with expanded premium SKUs\n2. **Restructure** El Machetazo relationship: focus on value positioning\n3. **Evaluate** Novey channel viability for continued investment\n4. **Xtra optimization:** Implement best practices from top-performing locations\n\nOverall portfolio growth: <span class=\"performance-positive\">+8.7%</span> with opportunity to reach <span class=\"performance-positive\">+12% through strategic focus</span>.`;\n  }\n  \n  // 14. Export and EPA client growth vs last year\n  if ((lowerQuestion.includes('export') || lowerQuestion.includes('epa')) && (lowerQuestion.includes('growth') || lowerQuestion.includes('last year'))) {\n    return `International business segment analysis shows strong export performance with EPA presenting strategic opportunities.\n\n**Export Clients Performance vs Last Year:**\n\n**Outstanding Export Growth:**\n- <span class=\"performance-positive\">Total Export Revenue</span>: <span class=\"performance-positive\">+24.8%</span> ($186,000 vs $149,000)\n- <span class=\"performance-positive\">Container shipments</span>: 14 vs 11 last year (+27.3%)\n- <span class=\"key-point\">Average order value</span>: +18.5% improvement per shipment\n\n**Top Export Clients:**\n- <span class=\"performance-positive\">Distribuidora Guatemala</span>: $45,000 (+31% vs last year)\n  Growth driver: Condimento Super Xtra market expansion\n- <span class=\"performance-positive\">Costa Rica Premium Foods</span>: $38,000 (+28% vs last year)\n  Success: Vinagre Premium regional acceptance\n- <span class=\"key-point\">El Salvador Trading Co.</span>: $29,000 (+15% vs last year)\n  Steady growth in traditional products\n\n**EPA (Economic Partnership Agreement) Clients:**\n\n**EPA Performance Analysis:**\n- <span class=\"key-point\">Total EPA Revenue</span>: <span class=\"key-point\">+8.2%</span> ($94,000 vs $87,000)\n- <span class=\"metric-highlight\">Client base</span>: 8 active vs 6 last year (+33% growth)\n- <span class=\"key-point\">Average client value</span>: $11,750 (slight decline due to new client onboarding)\n\n**EPA Market Breakdown:**\n- <span class=\"performance-positive\">European Union buyers</span>: $52,000 (+12.5% vs last year)\n  Premium positioning success in Germany and Netherlands\n- <span class=\"key-point\">Caribbean markets</span>: $28,000 (+6.8% vs last year)\n  Traditional product demand remains steady\n- <span class=\"key-point\">Pacific Alliance</span>: $14,000 (new market entry)\n  Colombia and Chile showing initial traction\n\n**Competitive Analysis:**\n**Export Advantages:**\n- <span class=\"performance-positive\">Quality certifications</span> opening premium market segments\n- <span class=\"performance-positive\">Product authenticity</span> valued in international markets\n- <span class=\"key-point\">Competitive pricing</span> vs regional competitors\n\n**EPA Strategic Opportunities:**\n- <span class=\"metric-highlight\">Organic certification</span> could unlock 40% price premium in EU\n- <span class=\"key-point\">Private label partnerships</span> with European retailers\n- <span class=\"performance-positive\">Product innovation</span> for health-conscious international consumers\n\n**Growth Projections:**\n- Export target 2024: <span class=\"performance-positive\">$230,000 (+23.7%)</span>\n- EPA target 2024: <span class=\"key-point\">$115,000 (+22.3%)</span>\n- Combined international: <span class=\"performance-positive\">23% of total company revenue</span>\n\nInternational expansion represents our <span class=\"performance-positive\">fastest-growing and highest-margin business segment</span> with significant scaling potential.`;\n  }\n  \n  // 15. SKUs per channel and total company\n  if (lowerQuestion.includes('sku') && (lowerQuestion.includes('channel') || lowerQuestion.includes('total'))) {\n    return `Product portfolio distribution analysis across sales channels reveals strategic SKU allocation and optimization opportunities.\n\n**SKUs per Sales Channel:**\n\n**Modern Trade Channels:**\n- <span class=\"performance-positive\">Super99</span>: <span class=\"performance-positive\">28 SKUs</span>\n  Full premium and traditional range, highest variety\n- <span class=\"key-point\">Rey</span>: <span class=\"key-point\">24 SKUs</span>\n  Focus on fast-moving consumer goods\n- <span class=\"key-point\">Xtra</span>: <span class=\"key-point\">22 SKUs</span>\n  Value-oriented product mix\n\n**Traditional Trade:**\n- <span class=\"key-point\">El Machetazo</span>: <span class=\"key-point\">18 SKUs</span>\n  Traditional products and bulk sizes\n- <span class=\"metric-highlight\">Novey</span>: <span class=\"metric-highlight\">12 SKUs</span>\n  Limited space, core products only\n\n**Specialized Channels:**\n- <span class=\"performance-positive\">Export</span>: <span class=\"performance-positive\">16 SKUs</span>\n  Premium products adapted for international markets\n- <span class=\"key-point\">EPA</span>: <span class=\"key-point\">14 SKUs</span>\n  Certified products meeting international standards\n- <span class=\"key-point\">Food Service</span>: <span class=\"key-point\">8 SKUs</span>\n  Bulk packaging for restaurants and hotels\n\n**Company-Wide SKU Analysis:**\n\n**Total Active SKUs:** <span class=\"performance-positive\">32 unique products</span>\n- <span class=\"key-point\">Condiments</span>: 12 SKUs (37.5% of portfolio)\n- <span class=\"key-point\">Vinegars</span>: 8 SKUs (25% of portfolio)\n- <span class=\"key-point\">Mayonnaise</span>: 6 SKUs (18.8% of portfolio)\n- <span class=\"key-point\">Sauces</span>: 4 SKUs (12.5% of portfolio)\n- <span class=\"key-point\">Specialty</span>: 2 SKUs (6.2% of portfolio)\n\n**SKU Performance Categories:**\n- <span class=\"performance-positive\">Premium SKUs</span>: 8 products (25% of portfolio, 45% of revenue)\n- <span class=\"key-point\">Standard SKUs</span>: 18 products (56% of portfolio, 42% of revenue)\n- <span class=\"metric-highlight\">Value SKUs</span>: 6 products (19% of portfolio, 13% of revenue)\n\n**Channel-Specific Insights:**\n**High SKU Density Channels:**\nSuper99 and Rey carry <span class=\"performance-positive\">75% of total SKU range</span>, indicating strong partnership and shelf space optimization.\n\n**Limited Assortment Channels:**\nNovey's 12 SKUs represent <span class=\"metric-highlight\">37.5% of portfolio</span>, suggesting either space constraints or strategic focus opportunity.\n\n**International Diversification:**\nExport and EPA channels carry <span class=\"key-point\">50% of SKU range</span> with premium product bias, indicating successful international positioning.\n\n**Portfolio Optimization Opportunities:**\n1. **Expand** high-performing SKUs to underrepresented channels\n2. **Rationalize** slow-moving SKUs in traditional trade\n3. **Develop** channel-specific SKUs for foodservice growth\n4. **Create** private label versions for international expansion\n\nOptimal SKU distribution supports <span class=\"performance-positive\">revenue maximization while maintaining operational efficiency</span> across all channels.`;\n  }\n  \n  // 16. Active clients total and per branch\n  if (lowerQuestion.includes('active client') || (lowerQuestion.includes('client') && (lowerQuestion.includes('total') || lowerQuestion.includes('branch')))) {\n    return `Client portfolio analysis reveals comprehensive coverage with strategic opportunities for expansion and optimization.\n\n**Total Active Clients: <span class=\"performance-positive\">247 clients</span>**\n\n**Clients by Channel Distribution:**\n\n**National Chains (Large Format):**\n- <span class=\"performance-positive\">Super99</span>: <span class=\"performance-positive\">18 branches</span>\n  Geographic coverage: Panama City, Colon, David, Santiago\n- <span class=\"key-point\">Rey</span>: <span class=\"key-point\">15 branches</span>\n  Focus: Urban centers and shopping centers\n- <span class=\"key-point\">Xtra</span>: <span class=\"key-point\">12 branches</span>\n  Regional distribution across interior provinces\n\n**Traditional Trade:**\n- <span class=\"key-point\">El Machetazo</span>: <span class=\"key-point\">28 branches</span>\n  Rural and suburban penetration\n- <span class=\"metric-highlight\">Independent retailers</span>: <span class=\"metric-highlight\">124 clients</span>\n  Small format stores and corner shops\n\n**Specialized Segments:**\n- <span class=\"performance-positive\">Export clients</span>: <span class=\"performance-positive\">12 active importers</span>\n  6 countries: Guatemala, Costa Rica, Colombia, El Salvador, Honduras, Nicaragua\n- <span class=\"key-point\">EPA clients</span>: <span class=\"key-point\">8 certified buyers</span>\n  European Union (4), Caribbean (3), Pacific Alliance (1)\n- <span class=\"key-point\">Food Service</span>: <span class=\"key-point\">38 establishments</span>\n  Hotels, restaurants, institutional buyers\n\n**Regional Client Distribution:**\n\n**Panama City Metropolitan:**\n- Total clients: <span class=\"performance-positive\">89 clients</span> (36% of portfolio)\n- Modern trade: 28 locations\n- Traditional/Independent: 45 clients\n- Food service: 16 establishments\n\n**Interior Provinces:**\n- <span class=\"key-point\">Chiriqui</span>: 42 clients (David region concentration)\n- <span class=\"key-point\">Cocle</span>: 28 clients (Santiago and Penonome)\n- <span class=\"key-point\">Colon</span>: 31 clients (Atlantic corridor)\n- <span class=\"key-point\">Los Santos</span>: 24 clients (Interior market)\n- <span class=\"key-point\">Veraguas</span>: 21 clients (Central provinces)\n- <span class=\"key-point\">Other provinces</span>: 12 clients\n\n**Client Performance Segmentation:**\n\n**High-Value Clients (>$5,000 monthly):**\n- <span class=\"performance-positive\">23 clients</span> generating <span class=\"performance-positive\">68% of total revenue</span>\n- Average monthly volume: $8,400 per client\n- Payment terms: 45-60 days average\n\n**Medium-Value Clients ($1,000-$5,000 monthly):**\n- <span class=\"key-point\">87 clients</span> generating <span class=\"key-point\">26% of total revenue</span>\n- Growth potential through SKU expansion\n- Payment terms: 30-45 days average\n\n**Small-Value Clients (<$1,000 monthly):**\n- <span class=\"metric-highlight\">137 clients</span> generating <span class=\"metric-highlight\">6% of total revenue</span>\n- High service cost, optimization needed\n- Payment terms: 15-30 days average\n\n**Client Acquisition & Retention:**\n- <span class=\"performance-positive\">New clients this year</span>: 31 additions (+14.3% growth)\n- <span class=\"key-point\">Client retention rate</span>: 94.2% (industry leading)\n- <span class=\"metric-highlight\">Inactive/lost clients</span>: 14 accounts (payment issues or closure)\n\n**Strategic Optimization:**\n1. **Focus expansion** on medium-value clients with SKU diversification\n2. **Consolidate service** for small-value clients through distributor model\n3. **Deepen penetration** in high-value accounts with premium products\n4. **Geographic expansion** in underserved rural markets with traditional trade\n\nClient portfolio represents <span class=\"performance-positive\">strong market coverage with balanced risk distribution</span> across segments and regions.`;\n  }\n  \n  // 17. Points of sale visits per rep per day\n  if ((lowerQuestion.includes('point') || lowerQuestion.includes('visit')) && lowerQuestion.includes('rep') && lowerQuestion.includes('day')) {\n    return `Sales representative productivity analysis reveals optimal visit patterns and route efficiency opportunities.\n\n**Daily Visit Requirements by Territory:**\n\n**Urban Routes (Panama City, David, Santiago):**\n- **Optimal visits per day:** <span class=\"performance-positive\">8-10 clients</span>\n- **Travel time factor:** 15-20 minutes between locations\n- **Visit duration:** 45-60 minutes per client\n- **Coverage cycle:** 5-day rotation for territory completion\n\n**Regional Routes (Interior Provinces):**\n- **Optimal visits per day:** <span class=\"key-point\">6-8 clients</span>\n- **Travel time factor:** 25-35 minutes between locations\n- **Visit duration:** 60-75 minutes per client (relationship focus)\n- **Coverage cycle:** 7-day rotation for territory completion\n\n**Current Representative Performance:**\n\n**High Performers:**\n- <span class=\"performance-positive\">Ana Morales</span> (Panama Centro): <span class=\"performance-positive\">9.2 visits/day average</span>\n  Efficiency rating: 95%, Client satisfaction: Excellent\n- <span class=\"performance-positive\">José Luis Vargas</span> (Santiago): <span class=\"performance-positive\">8.8 visits/day average</span>\n  Rural route optimization expert, strong relationship builder\n\n**Standard Performers:**\n- <span class=\"key-point\">María González</span> (Coclé): <span class=\"key-point\">7.4 visits/day average</span>\n  Consistent performance, opportunity for efficiency improvement\n- <span class=\"key-point\">Roberto Silva</span> (Panamá Oeste): <span class=\"key-point\">7.1 visits/day average</span>\n  Morning punctuality affecting daily capacity\n\n**Improvement Opportunities:**\n- <span class=\"metric-highlight\">Carlos Mendoza</span> (Chiriquí): <span class=\"metric-highlight\">5.8 visits/day average</span>\n  Rural territory challenges, route optimization needed\n\n**Visit Quality vs Quantity Analysis:**\n\n**High-Impact Visit Components:**\n- <span class=\"performance-positive\">Order generation</span>: 75% of visits should result in orders\n- <span class=\"key-point\">Inventory assessment</span>: Stock level verification and rotation\n- <span class=\"key-point\">Promotional execution</span>: Display setup and pricing verification\n- <span class=\"key-point\">Relationship building</span>: Manager engagement and issue resolution\n\n**Revenue per Visit Benchmarks:**\n- **Urban clients:** <span class=\"performance-positive\">$485 average order value</span>\n- **Regional clients:** <span class=\"key-point\">$320 average order value</span>\n- **Traditional trade:** <span class=\"key-point\">$180 average order value</span>\n\n**Route Optimization Recommendations:**\n\n**Technology Integration:**\n1. **GPS route planning** to reduce travel time by 15-20%\n2. **Mobile ordering system** to increase visit efficiency\n3. **Client priority scoring** based on revenue potential and payment history\n\n**Territory Adjustments:**\n- **Rebalance** Carlos Mendoza's Chiriquí territory (reduce by 12 clients)\n- **Expand** Ana Morales territory with high-potential Panama Este clients\n- **Create specialist route** for large format chains requiring deeper engagement\n\n**Performance Targets:**\n- Urban territories: <span class=\"performance-positive\">8+ visits per day minimum</span>\n- Regional territories: <span class=\"key-point\">6+ visits per day minimum</span>\n- Order success rate: <span class=\"performance-positive\">70%+ per territory</span>\n- Monthly territory coverage: <span class=\"performance-positive\">100% client contact</span>\n\nOptimal visit frequency balances <span class=\"performance-positive\">relationship quality with territorial coverage efficiency</span> to maximize revenue generation.`;\n  }\n  \n  // 18. Profitability per SKU\n  if (lowerQuestion.includes('profitability') && lowerQuestion.includes('sku')) {\n    return `SKU-level profitability analysis reveals significant variance in margin contribution and strategic product positioning opportunities.\n\n**High-Profitability SKUs (>30% margin):**\n\n**Premium Tier Champions:**\n- <span class=\"performance-positive\">Condimento Super Xtra 500g</span>\n  Gross margin: <span class=\"performance-positive\">35.2%</span> | Monthly volume: 2,400 units\n  Profit contribution: $4,230/month | Market position: Premium leader\n  \n- <span class=\"performance-positive\">Vinagre Premium 750ml</span>\n  Gross margin: <span class=\"performance-positive\">32.8%</span> | Monthly volume: 1,800 units\n  Profit contribution: $3,150/month | International success driver\n\n- <span class=\"performance-positive\">Mayonesa Premium 400g</span>\n  Gross margin: <span class=\"performance-positive\">31.5%</span> | Monthly volume: 1,200 units\n  Profit contribution: $2,520/month | Quality differentiation\n\n**Medium-Profitability SKUs (20-30% margin):**\n\n**Standard Performance Products:**\n- <span class=\"key-point\">Adobo Tradicional 250g</span>\n  Gross margin: <span class=\"key-point\">24.8%</span> | Monthly volume: 3,200 units\n  Profit contribution: $3,180/month | High volume compensates margin\n  \n- <span class=\"key-point\">Salsa Verde 300ml</span>\n  Gross margin: <span class=\"key-point\">22.5%</span> | Monthly volume: 1,600 units\n  Profit contribution: $1,800/month | Seasonal demand pattern\n\n- <span class=\"key-point\">Vinagre Blanco 500ml</span>\n  Gross margin: <span class=\"key-point\">21.2%</span> | Monthly volume: 2,800 units\n  Profit contribution: $2,950/month | Bulk volume driver\n\n**Low-Profitability SKUs (<20% margin):**\n\n**Challenge Products:**\n- <span class=\"metric-highlight\">Condimento Básico 300g</span>\n  Gross margin: <span class=\"metric-highlight\">18.4%</span> | Monthly volume: 4,800 units\n  Profit contribution: $2,650/month | Volume vs margin trade-off\n  \n- <span class=\"metric-highlight\">Mayonesa Standard 400g</span>\n  Gross margin: <span class=\"metric-highlight\">15.8%</span> | Monthly volume: 3,600 units\n  Profit contribution: $2,280/month | Competitive pricing pressure\n\n**Profitability Matrix Analysis:**\n\n**Star Performers (High Margin + High Volume):**\n- <span class=\"performance-positive\">Condimento Super Xtra</span>: Premium pricing with strong demand\n- <span class=\"performance-positive\">Adobo Tradicional</span>: Volume leadership with acceptable margins\n\n**Cash Cows (High Volume + Medium Margin):**\n- <span class=\"key-point\">Vinagre Blanco</span>: Steady demand with consistent profitability\n- <span class=\"key-point\">Condimento Básico</span>: Market share defender with volume focus\n\n**Question Marks (Low Volume + High Margin):**\n- <span class=\"key-point\">Mayonesa Premium</span>: Growth potential through market education\n- <span class=\"key-point\">Specialty sauces</span>: Niche positioning opportunity\n\n**Dogs (Low Volume + Low Margin):**\n- <span class=\"metric-highlight\">Budget-tier products</span>: Rationalization candidates\n- <span class=\"metric-highlight\">Seasonal items</span>: Limited contribution periods\n\n**Strategic Profitability Optimization:**\n\n**Revenue Enhancement:**\n1. **Price optimization** on medium-margin SKUs with inelastic demand\n2. **Premium product expansion** leveraging successful Condimento Super Xtra model\n3. **Bundle strategies** combining high and low margin products\n\n**Cost Reduction:**\n1. **Ingredient sourcing** optimization for top-volume SKUs\n2. **Packaging efficiency** improvements on standard products\n3. **Production scale** benefits for high-volume low-margin items\n\n**Portfolio Decisions:**\n- **Invest heavily** in premium SKUs driving 45% of profit from 25% of volume\n- **Maintain efficiently** standard SKUs providing volume stability\n- **Evaluate discontinuation** of sub-15% margin products unless strategic\n\n**Profitability Targets:**\n- Portfolio average margin: <span class=\"performance-positive\">26.5%</span> (current: 24.8%)\n- Premium SKU contribution: <span class=\"performance-positive\">50%</span> of total profit\n- Minimum viable margin: <span class=\"key-point\">18%</span> for continued investment\n\nStrategic focus on <span class=\"performance-positive\">premium product development and value-based pricing</span> will optimize overall portfolio profitability.`;\n  }\n  \n  // 19. Maquila products growth in specific chain vs last year\n  if (lowerQuestion.includes('maquila') && (lowerQuestion.includes('growth') || lowerQuestion.includes('growing') || lowerQuestion.includes('vs') || lowerQuestion.includes('last year'))) {\n    return `Maquila product performance analysis reveals strong growth trajectory in modern retail chains with significant expansion opportunities.\n\n**Maquila Products Growth Analysis:**\n\n**Super99 Chain Performance:**\n- <span class=\"performance-positive\">YTD Growth: +34.8%</span> ($78,000 vs $58,000 last year)\n- Volume increase: <span class=\"performance-positive\">+41% units sold</span>\n- Key drivers: Premium positioning and exclusive product launches\n\n**Maquila SKUs in Super99:**\n- <span class=\"performance-positive\">Condimento Super Xtra Premium</span>: +45% growth ($28,000 revenue)\n- <span class=\"key-point\">Vinagre Gourmet Selection</span>: +38% growth ($22,000 revenue)\n- <span class=\"key-point\">Mayonesa Artesanal</span>: +29% growth ($18,000 revenue)\n- <span class=\"performance-positive\">Salsa Especial Blend</span>: +52% growth ($10,000 revenue)\n\n**Rey Chain Performance:**\n- <span class=\"key-point\">YTD Growth: +28.5%</span> ($45,000 vs $35,000 last year)\n- Strategic focus on premium maquila line expansion\n\n**Xtra Chain Performance:**\n- <span class=\"key-point\">YTD Growth: +22.1%</span> ($32,000 vs $26,000 last year)\n- Value-oriented maquila products performing well\n\n**Growth Driver Analysis:**\n**Premium Market Positioning:**\nMaquila products command <span class=\"performance-positive\">42% higher margins</span> than standard products, driving both revenue and profitability growth.\n\n**Customer Preference Shift:**\n<span class=\"metric-highlight\">68% of customers</span> prefer artisanal/maquila products when available, indicating strong market demand for authentic positioning.\n\n**Chain-Specific Performance:**\n- **Super99**: Premium maquila strategy delivering highest growth\n- **Rey**: Balanced portfolio with maquila as differentiation\n- **Xtra**: Value maquila variants gaining traction\n\n**Market Opportunity:**\nTotal maquila segment represents <span class=\"performance-positive\">$155,000 current revenue</span> with potential to reach <span class=\"performance-positive\">$220,000 (+42% growth)</span> through expanded chain distribution.\n\n**Strategic Recommendations:**\n1. **Accelerate** maquila SKU rollout across all Super99 locations\n2. **Develop** exclusive maquila variants for Rey partnership\n3. **Create** value-tier maquila options for Xtra expansion\n4. **Invest** in artisanal production capacity to meet growing demand\n\nMaquila product growth represents <span class=\"performance-positive\">fastest-growing segment with premium pricing power</span> across all retail channels.`;\n  }\n  \n  // 20. Employee contact information\n  if (lowerQuestion.includes('extension') || lowerQuestion.includes('cell') || lowerQuestion.includes('email') || lowerQuestion.includes('employee') || lowerQuestion.includes('contact')) {\n    return `Employee contact directory for La Doña sales and operations team members.\n\n**Sales Representatives:**\n\n**Carlos Mendoza** (Chiriquí Region)\n- <span class=\"key-point\">Extension:</span> 2101\n- <span class=\"key-point\">Cell:</span> +507 6234-5678\n- <span class=\"key-point\">Email:</span> carlos.mendoza@ladona.com\n- <span class=\"metric-highlight\">Territory:</span> David, Boquete, Volcán\n\n**María González** (Coclé Region)\n- <span class=\"key-point\">Extension:</span> 2102\n- <span class=\"key-point\">Cell:</span> +507 6345-7890\n- <span class=\"key-point\">Email:</span> maria.gonzalez@ladona.com\n- <span class=\"metric-highlight\">Territory:</span> Penonomé, Santiago, Aguadulce\n\n**José Luis Vargas** (Santiago Region)\n- <span class=\"key-point\">Extension:</span> 2103\n- <span class=\"key-point\">Cell:</span> +507 6456-8901\n- <span class=\"key-point\">Email:</span> jose.vargas@ladona.com\n- <span class=\"metric-highlight\">Territory:</span> Santiago, Chitré, Las Tablas\n\n**Ana Morales** (Panama Centro)\n- <span class=\"key-point\">Extension:</span> 2104\n- <span class=\"key-point\">Cell:</span> +507 6567-9012\n- <span class=\"key-point\">Email:</span> ana.morales@ladona.com\n- <span class=\"metric-highlight\">Territory:</span> Via España, El Cangrejo, Costa Verde\n\n**Roberto Silva** (Panama Oeste)\n- <span class=\"key-point\">Extension:</span> 2105\n- <span class=\"key-point\">Cell:</span> +507 6678-0123\n- <span class=\"key-point\">Email:</span> roberto.silva@ladona.com\n- <span class=\"metric-highlight\">Territory:</span> Chorrera, Arraiján, Capira\n\n**Management Team:**\n\n**Luis Fernando Martínez** (Commercial Director)\n- <span class=\"performance-positive\">Extension:</span> 2001\n- <span class=\"performance-positive\">Cell:</span> +507 6789-1234\n- <span class=\"performance-positive\">Email:</span> lf.martinez@ladona.com\n\n**Carmen Patricia Vega** (Sales Manager)\n- <span class=\"key-point\">Extension:</span> 2002\n- <span class=\"key-point\">Cell:</span> +507 6890-2345\n- <span class=\"key-point\">Email:</span> cp.vega@ladona.com\n\n**Operations Team:**\n\n**Miguel Angel Torres** (Logistics Coordinator)\n- <span class=\"key-point\">Extension:</span> 2201\n- <span class=\"key-point\">Cell:</span> +507 6901-3456\n- <span class=\"key-point\">Email:</span> ma.torres@ladona.com\n\n**Sandra Milena Cruz** (Customer Service)\n- <span class=\"key-point\">Extension:</span> 2301\n- <span class=\"key-point\">Cell:</span> +507 6012-4567\n- <span class=\"key-point\">Email:</span> sm.cruz@ladona.com\n\n**Emergency Contacts:**\n- <span class=\"metric-highlight\">After Hours Sales Support:</span> +507 6123-5678\n- <span class=\"metric-highlight\">Logistics Emergency:</span> +507 6234-6789\n- <span class=\"metric-highlight\">Customer Service 24/7:</span> +507 6345-7890\n\nAll employees are available during business hours <span class=\"performance-positive\">Monday-Friday 7:30 AM - 5:30 PM</span> with emergency support available for critical client issues.`;\n  }\n  \n  // 21. Product visual art\n  if (lowerQuestion.includes('art') || lowerQuestion.includes('visual') || lowerQuestion.includes('image') || lowerQuestion.includes('design')) {\n    return `Product visual assets and packaging design specifications for La Doña product portfolio.\n\n**Premium Product Line Visuals:**\n\n**Condimento Super Xtra 500g:**\n- <span class=\"performance-positive\">Visual Art Code:</span> CSXT-500-2024-V3\n- <span class=\"key-point\">Design Elements:</span> Gold foil premium finish, traditional Panamanian patterns\n- <span class=\"key-point\">Color Scheme:</span> Deep red (#C41E3A), gold accents (#FFD700)\n- <span class=\"metric-highlight\">Logo Placement:</span> Center top with heritage seal\n\n**Vinagre Premium 750ml:**\n- <span class=\"performance-positive\">Visual Art Code:</span> VP-750-2024-V2\n- <span class=\"key-point\">Design Elements:</span> Elegant glass bottle mockup, premium cork imagery\n- <span class=\"key-point\">Color Scheme:</span> Forest green (#228B22), silver trim (#C0C0C0)\n- <span class=\"metric-highlight\">Logo Placement:</span> Vertical center with quality guarantee\n\n**Mayonesa Premium 400g:**\n- <span class=\"key-point\">Visual Art Code:</span> MP-400-2024-V1\n- <span class=\"key-point\">Design Elements:</span> Fresh ingredient imagery, artisanal styling\n- <span class=\"key-point\">Color Scheme:</span> Cream white (#FFFDD0), blue accents (#4169E1)\n\n**Traditional Product Line:**\n\n**Adobo Tradicional 250g:**\n- <span class=\"key-point\">Visual Art Code:</span> AT-250-2023-V4\n- <span class=\"key-point\">Design Elements:</span> Heritage family recipe seal, traditional spice imagery\n- <span class=\"key-point\">Color Scheme:</span> Warm brown (#8B4513), orange highlights (#FF8C00)\n\n**Salsa Verde 300ml:**\n- <span class=\"key-point\">Visual Art Code:</span> SV-300-2023-V2\n- <span class=\"key-point\">Design Elements:</span> Fresh herb visuals, authentic recipe badge\n- <span class=\"key-point\">Color Scheme:</span> Vibrant green (#32CD32), white background\n\n**Display Marketing Materials:**\n\n**Scanner Promotion Graphics:**\n- <span class=\"performance-positive\">Promotion Banner:</span> PROMO-SCAN-2024-V5\n- <span class=\"key-point\">2x1 Offer Design:</span> Bold red callouts with savings emphasis\n- <span class=\"key-point\">Bundle Pack Visual:</span> Product grouping with value messaging\n\n**Point of Sale Materials:**\n- <span class=\"metric-highlight\">Shelf Talkers:</span> Premium product differentiators\n- <span class=\"key-point\">Recipe Cards:</span> Traditional Panamanian cooking applications\n- <span class=\"key-point\">Brand Story Placards:</span> Family heritage and quality messaging\n\n**Digital Assets:**\nAll product visuals available in <span class=\"performance-positive\">high-resolution PNG/JPG formats</span> optimized for print and digital applications, with specific versions for export markets including bilingual packaging designs.\n\nVisual consistency maintains <span class=\"performance-positive\">La Doña brand heritage while emphasizing premium quality positioning</span> across all retail channels.`;\n  }\n  \n  // 22. Product barcode information\n  if (lowerQuestion.includes('barcode') || lowerQuestion.includes('sku') || lowerQuestion.includes('code')) {\n    return `Product barcode directory and SKU specifications for La Doña complete product portfolio.\n\n**Premium Product Line Barcodes:**\n\n**Condimento Super Xtra 500g:**\n- <span class=\"performance-positive\">Barcode:</span> 7 506194 823471\n- <span class=\"key-point\">Internal SKU:</span> CSXT-500-2024\n- <span class=\"key-point\">Case Code:</span> 7 506194 823488 (12 units)\n\n**Vinagre Premium 750ml:**\n- <span class=\"performance-positive\">Barcode:</span> 7 506194 845672\n- <span class=\"key-point\">Internal SKU:</span> VP-750-2024\n- <span class=\"key-point\">Case Code:</span> 7 506194 845689 (6 units)\n\n**Mayonesa Premium 400g:**\n- <span class=\"key-point\">Barcode:</span> 7 506194 867123\n- <span class=\"key-point\">Internal SKU:</span> MP-400-2024\n- <span class=\"key-point\">Case Code:</span> 7 506194 867130 (24 units)\n\n**Standard Product Line:**\n\n**Adobo Tradicional 250g:**\n- <span class=\"key-point\">Barcode:</span> 7 506194 734562\n- <span class=\"key-point\">Internal SKU:</span> AT-250-2023\n- <span class=\"key-point\">Case Code:</span> 7 506194 734579 (36 units)\n\n**Condimento Básico 300g:**\n- <span class=\"key-point\">Barcode:</span> 7 506194 756834\n- <span class=\"key-point\">Internal SKU:</span> CB-300-2023\n- <span class=\"key-point\">Case Code:</span> 7 506194 756841 (30 units)\n\n**Vinagre Regular 500ml:**\n- <span class=\"key-point\">Barcode:</span> 7 506194 778945\n- <span class=\"key-point\">Internal SKU:</span> VR-500-2023\n- <span class=\"key-point\">Case Code:</span> 7 506194 778952 (12 units)\n\n**Mayonesa Standard 400g:**\n- <span class=\"key-point\">Barcode:</span> 7 506194 790156\n- <span class=\"key-point\">Internal SKU:</span> MS-400-2023\n- <span class=\"key-point\">Case Code:</span> 7 506194 790163 (24 units)\n\n**Sauce Line:**\n\n**Salsa Verde 300ml:**\n- <span class=\"key-point\">Barcode:</span> 7 506194 812367\n- <span class=\"key-point\">Internal SKU:</span> SV-300-2023\n- <span class=\"key-point\">Case Code:</span> 7 506194 812374 (12 units)\n\n**Salsa Picante 250ml:**\n- <span class=\"key-point\">Barcode:</span> 7 506194 834578\n- <span class=\"key-point\">Internal SKU:</span> SP-250-2023\n- <span class=\"key-point\">Case Code:</span> 7 506194 834585 (18 units)\n\n**Export Versions:**\n\n**Condimento Super Xtra Export 500g:**\n- <span class=\"performance-positive\">Barcode:</span> 7 506194 856789\n- <span class=\"key-point\">Internal SKU:</span> CSXT-EX-500-2024\n- <span class=\"metric-highlight\">Certification:</span> EPA compliant for European markets\n\n**Vinagre Premium Export 750ml:**\n- <span class=\"performance-positive\">Barcode:</span> 7 506194 878901\n- <span class=\"key-point\">Internal SKU:</span> VP-EX-750-2024\n- <span class=\"metric-highlight\">Certification:</span> Organic certified for premium export\n\n**Barcode Management:**\nAll barcodes registered with <span class=\"performance-positive\">GS1 Panama</span> and compatible with international retail scanning systems. Case codes enable efficient inventory management and distributor ordering processes.\n\nBarcode verification system ensures <span class=\"performance-positive\">99.9% scan accuracy</span> across all retail partner point-of-sale systems.`;\n  }\n  \n  // 23. Product pricing by chain/client\n  if (lowerQuestion.includes('price') && (lowerQuestion.includes('chain') || lowerQuestion.includes('client'))) {\n    return `Product pricing matrix across retail chains and key client segments reveals strategic pricing differentiation.\n\n**Super99 Chain Pricing:**\n\n**Premium Products:**\n- <span class=\"performance-positive\">Condimento Super Xtra 500g:</span> $4.95 retail / $3.20 wholesale\n- <span class=\"performance-positive\">Vinagre Premium 750ml:</span> $3.85 retail / $2.50 wholesale\n- <span class=\"key-point\">Mayonesa Premium 400g:</span> $3.25 retail / $2.10 wholesale\n\n**Standard Products:**\n- <span class=\"key-point\">Adobo Tradicional 250g:</span> $2.45 retail / $1.60 wholesale\n- <span class=\"key-point\">Condimento Básico 300g:</span> $1.95 retail / $1.25 wholesale\n\n**Rey Chain Pricing:**\n\n**Premium Products:**\n- <span class=\"performance-positive\">Condimento Super Xtra 500g:</span> $4.85 retail / $3.15 wholesale\n- <span class=\"performance-positive\">Vinagre Premium 750ml:</span> $3.75 retail / $2.45 wholesale\n- <span class=\"key-point\">Mayonesa Premium 400g:</span> $3.15 retail / $2.05 wholesale\n\n**Xtra Chain Pricing:**\n\n**Value Focus Products:**\n- <span class=\"key-point\">Condimento Básico 300g:</span> $1.89 retail / $1.22 wholesale\n- <span class=\"key-point\">Vinagre Regular 500ml:</span> $2.25 retail / $1.45 wholesale\n- <span class=\"key-point\">Mayonesa Standard 400g:</span> $2.45 retail / $1.58 wholesale\n\n**Export Client Pricing (FOB Panama):**\n\n**Distribuidora Guatemala:**\n- <span class=\"performance-positive\">Condimento Super Xtra 500g:</span> $2.85 per unit (premium positioning)\n- <span class=\"key-point\">Volume discount:</span> 5% on orders >500 units\n\n**Costa Rica Premium Foods:**\n- <span class=\"performance-positive\">Vinagre Premium 750ml:</span> $2.25 per unit\n- <span class=\"key-point\">Exclusive SKU pricing:</span> 8% premium for market exclusivity\n\n**EPA Client Pricing (EUR):**\n\n**European Union Buyers:**\n- <span class=\"performance-positive\">Organic Condimento Export:</span> €3.20 per unit\n- <span class=\"key-point\">Certification premium:</span> 25% above standard export pricing\n\n**Pricing Strategy Analysis:**\n\n**Chain Differentiation:**\n- <span class=\"performance-positive\">Super99:</span> Premium pricing reflecting upmarket positioning\n- <span class=\"key-point\">Rey:</span> Competitive pricing with moderate premiums\n- <span class=\"key-point\">Xtra:</span> Value pricing strategy for price-sensitive segments\n\n**Volume Incentives:**\n- <span class=\"metric-highlight\">Orders >$5,000:</span> 3% discount\n- <span class=\"metric-highlight\">Orders >$10,000:</span> 5% discount\n- <span class=\"performance-positive\">Annual contracts:</span> Up to 8% discount for committed volume\n\n**Payment Terms Impact:**\n- <span class=\"key-point\">15 days:</span> 2% discount\n- <span class=\"key-point\">30 days:</span> Standard pricing\n- <span class=\"metric-highlight\">60+ days:</span> 1.5% surcharge\n\nStrategic pricing maintains <span class=\"performance-positive\">competitive positioning while optimizing margin contribution</span> across diverse retail channels and client segments.`;\n  }\n  \n  // 24. Today's backorders\n  if (lowerQuestion.includes('backorder') || lowerQuestion.includes('back order') || \n      lowerQuestion.includes('backordered') || \n      (lowerQuestion.includes('order') && (lowerQuestion.includes('back') || lowerQuestion.includes('pending')))) {\n    return `Current backorder analysis reveals supply chain pressures and priority fulfillment requirements for immediate action.\n\n**Today's Backorder Summary:**\n<span class=\"metric-highlight\">Total Backorders: 847 units</span> across <span class=\"key-point\">12 different SKUs</span>\n<span class=\"performance-positive\">Total Value: $3,240</span>\n\n**Critical Backorders (High Priority):**\n\n**Super99 Costa Verde:**\n- <span class=\"metric-highlight\">Condimento Super Xtra 500g:</span> 120 units (3 days overdue)\n  Client impact: Premium product stockout affecting $580 daily sales\n- <span class=\"key-point\">Vinagre Premium 750ml:</span> 85 units (2 days overdue)\n  Production delay due to quality control requirements\n\n**Xtra Albrook:**\n- <span class=\"metric-highlight\">Mayonesa Premium 400g:</span> 95 units (4 days overdue)\n  Supply chain bottleneck in raw material delivery\n- <span class=\"key-point\">Adobo Tradicional 250g:</span> 150 units (1 day overdue)\n  High demand exceeding production capacity\n\n**Export Clients:**\n\n**Distribuidora Guatemala:**\n- <span class=\"performance-positive\">Condimento Super Xtra Export:</span> 200 units (container shipping delay)\n  Value: $570, Priority: Container departure scheduled tomorrow\n- <span class=\"key-point\">Vinagre Premium Export:</span> 75 units\n  EPA certification documentation pending\n\n**Regional Backorders:**\n\n**Rey Multiplaza:**\n- <span class=\"key-point\">Condimento Básico 300g:</span> 65 units\n  Standard product with 24-hour fulfillment target\n- <span class=\"key-point\">Salsa Verde 300ml:</span> 45 units\n  Seasonal demand spike affecting inventory levels\n\n**Root Cause Analysis:**\n\n**Production Constraints:**\n- <span class=\"metric-highlight\">Manufacturing capacity:</span> Operating at 94% utilization\n- <span class=\"key-point\">Quality control delays:</span> Extended testing for premium products\n- <span class=\"key-point\">Raw material supply:</span> Vinegar base 3-day delivery delay\n\n**Logistics Challenges:**\n- <span class=\"metric-highlight\">Transportation:</span> Limited truck availability during peak season\n- <span class=\"key-point\">Warehouse capacity:</span> Premium products require temperature control\n\n**Priority Action Plan:**\n\n**Immediate (Today):**\n1. **Express production run** for Condimento Super Xtra (200 units by 6 PM)\n2. **Emergency transfer** from Penonome warehouse to Albrook (Mayonesa Premium)\n3. **Customer communication** for export container departure confirmation\n\n**48 Hours:**\n1. **Production scaling** for Adobo Tradicional to clear 150-unit backlog\n2. **Quality expedite** for Vinagre Premium batch approval\n3. **Logistics coordination** for multi-stop delivery optimization\n\n**Weekly Target:**\nClear <span class=\"performance-positive\">100% of current backorders</span> while maintaining 24-hour fulfillment for new orders through enhanced production scheduling and inventory buffers.\n\nBackorder reduction represents <span class=\"performance-positive\">immediate $3,240 revenue recovery</span> with improved client satisfaction across critical accounts.`;\n  }\n  \n  // 25. Today's billing/invoices\n  if (lowerQuestion.includes('billing') || lowerQuestion.includes('invoice') || lowerQuestion.includes('billed') || lowerQuestion.includes('invoiced')) {\n    return `Daily billing analysis shows strong revenue performance with strategic account activity across all channels.\n\n**Today's Billing Summary:**\n<span class=\"performance-positive\">Total Invoiced: $18,450</span> across <span class=\"key-point\">23 invoices</span>\n<span class=\"metric-highlight\">Average Invoice Value: $802</span>\n\n**Large Account Billing:**\n\n**Super99 Chain:**\n- <span class=\"performance-positive\">Invoice #INV-2024-3421:</span> $3,200\n  Location: Costa Verde | Products: Premium line restock\n- <span class=\"performance-positive\">Invoice #INV-2024-3422:</span> $2,850\n  Location: Via España | Products: Mixed SKU order\n\n**Rey Chain:**\n- <span class=\"key-point\">Invoice #INV-2024-3423:</span> $2,400\n  Location: Multiplaza | Products: Standard + premium mix\n- <span class=\"key-point\">Invoice #INV-2024-3424:</span> $1,950\n  Location: Altos del Chase | Products: Volume order\n\n**Export Billing:**\n\n**International Shipments:**\n- <span class=\"performance-positive\">Invoice #EX-2024-0156:</span> $4,200\n  Client: Distribuidora Guatemala | Container partial shipment\n- <span class=\"key-point\">Invoice #EX-2024-0157:</span> $1,680\n  Client: Costa Rica Premium Foods | Premium product order\n\n**Regional Accounts:**\n\n**Traditional Trade:**\n- <span class=\"key-point\">El Machetazo David:</span> $950 (Invoice #INV-2024-3425)\n- <span class=\"key-point\">El Machetazo Santiago:</span> $720 (Invoice #INV-2024-3426)\n- <span class=\"key-point\">Independent Retailers:</span> $1,890 (7 small invoices)\n\n**Product Category Breakdown:**\n\n**Premium Products (45% of daily billing):**\n- <span class=\"performance-positive\">Condimento Super Xtra:</span> $3,480 revenue\n- <span class=\"performance-positive\">Vinagre Premium:</span> $2,820 revenue\n- <span class=\"key-point\">Mayonesa Premium:</span> $1,980 revenue\n\n**Standard Products (55% of daily billing):**\n- <span class=\"key-point\">Adobo Tradicional:</span> $3,240 revenue\n- <span class=\"key-point\">Condimento Básico:</span> $2,850 revenue\n- <span class=\"key-point\">Standard sauces/vinegars:</span> $4,080 revenue\n\n**Payment Terms Analysis:**\n\n**Immediate Payment (15 days):**\n- <span class=\"performance-positive\">7 invoices:</span> $5,640 total\n- <span class=\"key-point\">Discount applied:</span> 2% early payment incentive\n\n**Standard Terms (30 days):**\n- <span class=\"key-point\">12 invoices:</span> $8,920 total\n- <span class=\"key-point\">Mix:</span> Chain accounts and established clients\n\n**Extended Terms (45-60 days):**\n- <span class=\"metric-highlight\">4 invoices:</span> $3,890 total\n- <span class=\"metric-highlight\">Clients:</span> Large format chains with credit agreements\n\n**Revenue Performance:**\n\n**Daily Target Achievement:**\nToday's billing represents <span class=\"performance-positive\">112% of daily target</span> ($16,500 goal vs $18,450 actual)\n\n**Month-to-Date Performance:**\n- <span class=\"performance-positive\">Current MTD:</span> $285,600\n- <span class=\"key-point\">Target MTD:</span> $270,000\n- <span class=\"performance-positive\">Variance:</span> +5.8% above target\n\n**Outstanding Considerations:**\n- <span class=\"metric-highlight\">Pending invoices:</span> 3 export orders awaiting documentation\n- <span class=\"key-point\">Tomorrow's scheduled:</span> $12,800 confirmed orders for processing\n\nDaily billing performance demonstrates <span class=\"performance-positive\">strong revenue momentum with balanced channel distribution</span> across premium and standard product categories.`;\n  }\n  \n  // 26. Clients billed today\n  if (lowerQuestion.includes('clients') && (lowerQuestion.includes('billed') || lowerQuestion.includes('invoiced')) && lowerQuestion.includes('today')) {\n    return `Today's client billing report shows comprehensive account coverage across all market segments and geographic regions.\n\n**Clients Billed Today: <span class=\"performance-positive\">23 accounts</span>**\n\n**Major Chain Accounts:**\n\n**Super99 Locations:**\n- <span class=\"performance-positive\">Super99 Costa Verde</span> - Invoice: $3,200 (Premium product restock)\n- <span class=\"performance-positive\">Super99 Via España</span> - Invoice: $2,850 (Mixed SKU order)\n- <span class=\"key-point\">Super99 Multiplaza</span> - Invoice: $1,680 (Standard replenishment)\n\n**Rey Chain:**\n- <span class=\"key-point\">Rey Multiplaza</span> - Invoice: $2,400 (Standard + premium mix)\n- <span class=\"key-point\">Rey Altos del Chase</span> - Invoice: $1,950 (Volume order)\n\n**Xtra Locations:**\n- <span class=\"key-point\">Xtra Albrook</span> - Invoice: $1,420 (Value product focus)\n- <span class=\"key-point\">Xtra Penonome</span> - Invoice: $980 (Regional standard order)\n\n**Export Clients:**\n\n**International Accounts:**\n- <span class=\"performance-positive\">Distribuidora Guatemala</span> - Invoice: $4,200 (Container partial)\n- <span class=\"key-point\">Costa Rica Premium Foods</span> - Invoice: $1,680 (Premium export)\n- <span class=\"key-point\">El Salvador Trading Co.</span> - Invoice: $950 (Traditional products)\n\n**Traditional Trade:**\n\n**El Machetazo Network:**\n- <span class=\"key-point\">El Machetazo David</span> - Invoice: $950\n- <span class=\"key-point\">El Machetazo Santiago</span> - Invoice: $720\n- <span class=\"key-point\">El Machetazo Chitré</span> - Invoice: $580\n\n**Independent Retailers:**\n- <span class=\"metric-highlight\">Mini Super La Familia</span> (Veraguas) - Invoice: $340\n- <span class=\"metric-highlight\">Comercial San José</span> (Coclé) - Invoice: $280\n- <span class=\"metric-highlight\">Distribuidora Regional</span> (Los Santos) - Invoice: $420\n- <span class=\"metric-highlight\">Super Centro Colón</span> - Invoice: $380\n- <span class=\"metric-highlight\">Mercado Express</span> (Chiriquí) - Invoice: $310\n- <span class=\"metric-highlight\">Abastecedora del Este</span> - Invoice: $240\n- <span class=\"metric-highlight\">Minimarket Central</span> (Panama Oeste) - Invoice: $190\n\n**Food Service Sector:**\n\n**Hotel & Restaurant Clients:**\n- <span class=\"key-point\">Hotel Continental</span> - Invoice: $680 (Bulk condiments)\n- <span class=\"key-point\">Restaurante Tinajas</span> - Invoice: $450 (Specialty sauces)\n- <span class=\"key-point\">Catering Services SA</span> - Invoice: $320 (Volume mayonnaise)\n\n**Geographic Distribution:**\n\n**Panama City Metropolitan: 8 clients**\n- Revenue: $7,890 (42.8% of daily billing)\n- Mix: Modern trade and food service\n\n**Interior Provinces: 15 clients**\n- Revenue: $6,360 (34.5% of daily billing)\n- Focus: Traditional trade and regional chains\n\n**International: 3 clients**\n- Revenue: $6,830 (37.0% of daily billing)\n- Premium export positioning\n\n**Client Performance Analysis:**\n\n**High-Value Invoices (>$2,000):**\n- <span class=\"performance-positive\">6 clients</span> representing <span class=\"performance-positive\">61% of daily revenue</span>\n- Average invoice: $2,863\n\n**Medium-Value Invoices ($500-$2,000):**\n- <span class=\"key-point\">10 clients</span> representing <span class=\"key-point\">28% of daily revenue</span>\n- Growth segment focus\n\n**Small-Value Invoices (<$500):**\n- <span class=\"metric-highlight\">7 clients</span> representing <span class=\"metric-highlight\">11% of daily revenue</span>\n- Service efficiency opportunity\n\n**Payment Terms Breakdown:**\n- <span class=\"performance-positive\">Immediate (15 days):</span> 7 clients, $5,640\n- <span class=\"key-point\">Standard (30 days):</span> 12 clients, $8,920\n- <span class=\"metric-highlight\">Extended (45-60 days):</span> 4 clients, $3,890\n\nToday's billing demonstrates <span class=\"performance-positive\">excellent market coverage with balanced risk distribution</span> across all client segments and payment terms.`;\n  }\n  \n  // 27. Sales rep route today\n  if (lowerQuestion.includes('route') && lowerQuestion.includes('rep') && lowerQuestion.includes('today')) {\n    return `Daily route assignments and territory coverage for sales representatives show comprehensive market reach and client engagement.\n\n**Today's Route Assignments:**\n\n**Carlos Mendoza (Chiriquí Region):**\n<span class=\"key-point\">Route: CHIR-07-2024</span>\n- **8:00 AM:** El Machetazo David (Order: $950, Status: Completed)\n- **9:30 AM:** Super Centro Boquete (Order: $420, Status: Completed)\n- **11:00 AM:** Minimarket Volcán (Order: $280, Status: Completed)\n- **1:00 PM:** Distribuidora Frontera (Order: $340, Status: Completed)\n- **2:30 PM:** Comercial La Esperanza (Visit: No order, Reason: Overstocked)\n- **4:00 PM:** Mini Super Patricia (Order: $190, Status: Completed)\n- **5:00 PM:** Route summary and planning\n\n**María González (Coclé Region):**\n<span class=\"key-point\">Route: COCL-05-2024</span>\n- **7:45 AM:** Xtra Penonome (Order: $980, Status: Completed)\n- **9:15 AM:** El Machetazo Santiago (Order: $720, Status: Completed)\n- **10:45 AM:** Super La Central (Order: $310, Status: Completed)\n- **12:30 PM:** Comercial San José (Order: $280, Status: Completed)\n- **2:00 PM:** Mini Market Aguadulce (Visit: No order, Reason: Payment pending)\n- **3:30 PM:** Distribuidora Valle (Order: $450, Status: Completed)\n- **4:45 PM:** Client follow-up calls\n\n**José Luis Vargas (Santiago Region):**\n<span class=\"key-point\">Route: SANT-04-2024</span>\n- **8:30 AM:** El Machetazo Chitré (Order: $580, Status: Completed)\n- **10:00 AM:** Super Centro Las Tablas (Order: $380, Status: Completed)\n- **11:30 AM:** Minimarket Herrera (Order: $240, Status: Completed)\n- **1:15 PM:** Comercial Los Santos (Order: $320, Status: Completed)\n- **2:45 PM:** Abastecedora Regional (Visit: No order, Reason: Budget exhausted)\n- **4:15 PM:** New client prospecting: Farmacia Nacional\n\n**Ana Morales (Panama Centro):**\n<span class=\"key-point\">Route: PCE-09-2024</span>\n- **8:00 AM:** Super99 Costa Verde (Order: $3,200, Status: Completed)\n- **9:45 AM:** Rey Multiplaza (Order: $2,400, Status: Completed)\n- **11:30 AM:** Hotel Continental (Order: $680, Status: Completed)\n- **1:00 PM:** Restaurante Tinajas (Order: $450, Status: Completed)\n- **2:30 PM:** Super99 Via España (Order: $2,850, Status: Completed)\n- **4:00 PM:** Minimarket Central (Order: $190, Status: Completed)\n\n**Roberto Silva (Panama Oeste):**\n<span class=\"key-point\">Route: POE-06-2024</span>\n- **8:15 AM:** Xtra Albrook (Order: $1,420, Status: Completed)\n- **10:00 AM:** Rey Altos del Chase (Order: $1,950, Status: Completed)\n- **11:45 AM:** Super Centro Chorrera (Order: $340, Status: Completed)\n- **1:30 PM:** Distribuidora del Oeste (Visit: No order, Reason: Competitor promotion)\n- **3:00 PM:** Mini Super Arraiján (Order: $280, Status: Completed)\n- **4:30 PM:** Prospecting: New plaza shopping center\n\n**Route Performance Summary:**\n\n**Completed Orders: 19 successful visits**\n- Total revenue generated: <span class=\"performance-positive\">$16,620</span>\n- Average order value: <span class=\"key-point\">$875</span>\n\n**No-Order Visits: 4 visits**\n- Overstocked: 1 client (inventory management issue)\n- Payment pending: 1 client (credit terms review needed)\n- Budget exhausted: 1 client (monthly allocation consumed)\n- Competitor promotion: 1 client (pricing pressure analysis required)\n\n**Territory Efficiency:**\n- <span class=\"performance-positive\">Ana Morales (Panama Centro):</span> 100% conversion rate, 6/6 orders\n- <span class=\"performance-positive\">Carlos Mendoza (Chiriquí):</span> 83% conversion rate, 5/6 orders\n- <span class=\"key-point\">María González (Coclé):</span> 83% conversion rate, 5/6 orders\n- <span class=\"key-point\">José Luis Vargas (Santiago):</span> 80% conversion rate, 4/5 orders\n- <span class=\"key-point\">Roberto Silva (Panama Oeste):</span> 80% conversion rate, 4/5 orders\n\n**Geographic Coverage:**\n- <span class=\"performance-positive\">Total clients visited:</span> 23 locations\n- <span class=\"key-point\">New prospect meetings:</span> 2 potential clients\n- <span class=\"metric-highlight\">Follow-up required:</span> 4 clients for next visit cycle\n\nRoute optimization demonstrates <span class=\"performance-positive\">strong territorial coverage with high order conversion rates</span> across all regions.`;\n  }\n  \n  // 28. Clients without orders today and reasons\n  if ((lowerQuestion.includes('client') || lowerQuestion.includes('visit')) && (lowerQuestion.includes('no order') || lowerQuestion.includes(\"didn't\") || lowerQuestion.includes('without order')) && lowerQuestion.includes('why')) {\n    return `Analysis of today's client visits that did not result in orders reveals specific business challenges requiring targeted intervention.\n\n**Clients Visited Without Orders: <span class=\"metric-highlight\">4 locations</span>**\n\n**Comercial La Esperanza (Chiriquí - Carlos Mendoza):**\n- <span class=\"key-point\">Reason:</span> Overstocked on premium products\n- <span class=\"metric-highlight\">Current inventory:</span> 45-day supply of Condimento Super Xtra\n- <span class=\"key-point\">Issue analysis:</span> Slow premium product rotation in rural market\n- <span class=\"performance-positive\">Action plan:</span> Product mix adjustment to focus on traditional SKUs\n- <span class=\"key-point\">Next visit:</span> 2 weeks (inventory assessment)\n- <span class=\"metric-highlight\">Potential loss:</span> $340 expected order\n\n**Mini Market Aguadulce (Coclé - María González):**\n- <span class=\"key-point\">Reason:</span> Payment pending on previous invoice\n- <span class=\"metric-highlight\">Outstanding amount:</span> $890 (Invoice #INV-2024-3398, 35 days overdue)\n- <span class=\"key-point\">Issue analysis:</span> Cash flow challenge, owner hospitalized last month\n- <span class=\"performance-positive\">Action plan:</span> Credit terms extension approved, family meeting scheduled\n- <span class=\"key-point\">Next visit:</span> Friday (payment arrangement confirmation)\n- <span class=\"metric-highlight\">Potential loss:</span> $280 expected order\n\n**Abastecedora Regional (Santiago - José Luis Vargas):**\n- <span class=\"key-point\">Reason:</span> Monthly purchasing budget exhausted\n- <span class=\"metric-highlight\">Budget status:</span> $2,400 monthly limit reached on day 18\n- <span class=\"key-point\">Issue analysis:</span> Early month bulk purchases, poor cash flow planning\n- <span class=\"performance-positive\">Action plan:</span> Monthly budget planning assistance, smaller frequent orders\n- <span class=\"key-point\">Next visit:</span> Next month cycle start\n- <span class=\"metric-highlight\">Potential loss:</span> $320 expected order\n\n**Distribuidora del Oeste (Panama Oeste - Roberto Silva):**\n- <span class=\"key-point\">Reason:</span> Active competitor promotion (Rival brand 30% discount)\n- <span class=\"metric-highlight\">Competitor offer:</span> Mayonnaise and condiments at aggressive pricing\n- <span class=\"key-point\">Issue analysis:</span> Price war in Panama Oeste corridor\n- <span class=\"performance-positive\">Action plan:</span> Scanner promotion counter-offer, volume incentive\n- <span class=\"key-point\">Next visit:</span> Tomorrow (competitive response implementation)\n- <span class=\"metric-highlight\">Potential loss:</span> $450 expected order\n\n**Impact Analysis:**\n\n**Revenue Impact:**\n- <span class=\"metric-highlight\">Total missed revenue today:</span> $1,390\n- <span class=\"key-point\">Monthly projection:</span> $27,800 if issues persist\n- <span class=\"performance-positive\">Recovery potential:</span> 75% through targeted intervention\n\n**Root Cause Breakdown:**\n- <span class=\"key-point\">Inventory management:</span> 25% (1 client) - Product mix optimization needed\n- <span class=\"key-point\">Credit/payment issues:</span> 25% (1 client) - Credit policy review\n- <span class=\"key-point\">Budget constraints:</span> 25% (1 client) - Client financial planning support\n- <span class=\"metric-highlight\">Competitive pressure:</span> 25% (1 client) - Pricing strategy response\n\n**Strategic Response Plan:**\n\n**Immediate Actions (24-48 hours):**\n1. **Competitive response** to Distribuidora del Oeste with promotional counter-offer\n2. **Credit terms meeting** with Mini Market Aguadulce family\n3. **Inventory consultation** for Comercial La Esperanza product mix\n\n**Medium-term Solutions (1-2 weeks):**\n1. **Regional pricing strategy** review for competitive markets\n2. **Client financial planning** workshops for budget management\n3. **Inventory optimization** program for rural/traditional accounts\n\n**Performance Recovery Target:**\nRecover <span class=\"performance-positive\">$1,040 of the $1,390 missed revenue</span> within current month through targeted account management and competitive positioning adjustments.\n\nClient retention focus maintains <span class=\"performance-positive\">long-term relationship value over short-term order pressure</span> while addressing underlying business challenges.`;\n  }\n  \n  // 2. Scanner promotion performance analysis\n  if (lowerQuestion.includes('scanner') || (lowerQuestion.includes('promotion') && lowerQuestion.includes('last month')) || lowerQuestion.includes('sold the most')) {\n    const scannerPromotions = [\n      { name: 'Condimento Super Xtra 2x1', investment: 8500, units: 2400, revenue: 18600, roi: 118.8, stores: 12 },\n      { name: 'Vinagre Premium 30% Off', investment: 6200, units: 1800, revenue: 14200, roi: 129.0, stores: 8 },\n      { name: 'Mayonesa Bundle Pack', investment: 5800, units: 1200, revenue: 9800, roi: 69.0, stores: 6 },\n      { name: 'Adobo Triple Pack', investment: 4300, units: 950, revenue: 7200, roi: 67.4, stores: 5 },\n      { name: 'Salsa Verde Flash Sale', investment: 3200, units: 600, revenue: 4800, roi: 50.0, stores: 4 }\n    ];\n    \n    const topPromotion = scannerPromotions[0];\n    const bestROI = scannerPromotions.reduce((prev, curr) => curr.roi > prev.roi ? curr : prev);\n    \n    return `Scanner promotion performance analysis for last month shows clear winners and optimization opportunities.\n\n**Top-Selling Scanner Promotions (Units Moved):**\n\n**#1 Best Seller:**\n- <span class=\"performance-positive\">${topPromotion.name}</span>\n  Units sold: <span class=\"metric-highlight\">${topPromotion.units.toLocaleString()}</span>\n  Revenue generated: <span class=\"performance-positive\">$${topPromotion.revenue.toLocaleString()}</span>\n  Investment: $${topPromotion.investment.toLocaleString()}\n  ROI: ${topPromotion.roi}%\n  Store coverage: ${topPromotion.stores} locations\n\n**Performance Ranking:**\n${scannerPromotions.map((promo, index) => `\n${index + 1}. <span class=\"${index === 0 ? 'performance-positive' : 'key-point'}\">${promo.name}</span>\n   Units: ${promo.units.toLocaleString()} | Revenue: $${promo.revenue.toLocaleString()} | ROI: ${promo.roi}%`).join('')}\n\n**Best ROI Performance:**\n<span class=\"performance-positive\">${bestROI.name}</span> achieved the highest ROI at <span class=\"metric-highlight\">${bestROI.roi}%</span>, demonstrating optimal pricing strategy and customer demand alignment.\n\n**Strategic Analysis:**\n- <span class=\"performance-positive\">Premium products (Condimento Super Xtra, Vinagre Premium)</span> drive highest volume and ROI\n- <span class=\"key-point\">Bundle strategies</span> show mixed results - 2x1 outperforms triple packs\n- <span class=\"metric-highlight\">Store coverage correlation</span>: Higher store count directly impacts total volume\n\n**Investment Efficiency:**\nTotal promotion investment: <span class=\"metric-highlight\">$${scannerPromotions.reduce((sum, p) => sum + p.investment, 0).toLocaleString()}</span>\nTotal revenue generated: <span class=\"performance-positive\">$${scannerPromotions.reduce((sum, p) => sum + p.revenue, 0).toLocaleString()}</span>\nAverage ROI: <span class=\"performance-positive\">${(scannerPromotions.reduce((sum, p) => sum + p.roi, 0) / scannerPromotions.length).toFixed(1)}%</span>\n\n**Optimization Recommendations:**\n1. Scale ${topPromotion.name} to additional 8 stores for maximum impact\n2. Replicate ${bestROI.name} pricing model across premium product line\n3. Discontinue promotions with <70% ROI for budget reallocation\n4. Focus scanner investments on proven high-ROI product categories`;\n  }\n  \n  // 3. Tonga/Display investment profitability by store\n  if (lowerQuestion.includes('tonga') || lowerQuestion.includes('display') || lowerQuestion.includes('investment') && lowerQuestion.includes('profitable') || lowerQuestion.includes('most profitable')) {\n    const storeDisplayData = [\n      { store: 'Super99 Costa Verde', investment: 4200, revenue: 8800, profit: 4600, roi: 109.5, products: 'Condimento Super Xtra, Vinagre Premium' },\n      { store: 'Xtra Albrook', investment: 3800, revenue: 7200, profit: 3400, roi: 89.5, products: 'Mayonesa Bundle, Adobo Display' },\n      { store: 'Rey Multiplaza', investment: 3500, revenue: 6800, profit: 3300, roi: 94.3, products: 'Premium Vinagre, Salsa Verde' },\n      { store: 'Super99 Via España', investment: 2900, revenue: 6100, profit: 3200, roi: 110.3, products: 'Condimento Mix Display' },\n      { store: 'Xtra Penonome', investment: 2200, revenue: 3800, profit: 1600, roi: 72.7, products: 'Regional Mix Display' }\n    ];\n    \n    const mostProfitable = storeDisplayData.reduce((prev, curr) => curr.profit > prev.profit ? curr : prev);\n    const bestROI = storeDisplayData.reduce((prev, curr) => curr.roi > prev.roi ? curr : prev);\n    \n    return `Display investment profitability analysis reveals significant variance in store-level ROI performance and profit generation.\n\n**Most Profitable Store (Absolute Profit):**\n<span class=\"performance-positive\">${mostProfitable.store}</span>\n- Investment: <span class=\"metric-highlight\">$${mostProfitable.investment.toLocaleString()}</span>\n- Revenue generated: <span class=\"performance-positive\">$${mostProfitable.revenue.toLocaleString()}</span>\n- Net profit: <span class=\"performance-positive\">$${mostProfitable.profit.toLocaleString()}</span>\n- ROI: ${mostProfitable.roi}%\n- Display focus: ${mostProfitable.products}\n\n**Highest ROI Performance:**\n<span class=\"performance-positive\">${bestROI.store}</span> achieves <span class=\"metric-highlight\">${bestROI.roi}% ROI</span> with optimized investment-to-return ratio.\n\n**Store Profitability Ranking:**\n${storeDisplayData.map((store, index) => `\n${index + 1}. <span class=\"${index === 0 ? 'performance-positive' : 'key-point'}\">${store.store}</span>\n   Profit: $${store.profit.toLocaleString()} | ROI: ${store.roi}% | Investment: $${store.investment.toLocaleString()}`).join('')}\n\n**Performance Analysis:**\n**High Performers (>100% ROI):**\n- <span class=\"performance-positive\">Super99 Costa Verde & Via España</span>: Premium product focus drives superior returns\n- Strategic placement of high-margin SKUs maximizes display effectiveness\n\n**Underperformers (<90% ROI):**\n- <span class=\"metric-highlight\">Xtra Albrook</span>: 89.5% ROI suggests suboptimal product mix or placement\n- <span class=\"key-point\">Xtra Penonome</span>: 72.7% ROI indicates regional preference misalignment\n\n**Investment Efficiency:**\nTotal display investment: <span class=\"metric-highlight\">$${storeDisplayData.reduce((sum, s) => sum + s.investment, 0).toLocaleString()}</span>\nTotal profit generated: <span class=\"performance-positive\">$${storeDisplayData.reduce((sum, s) => sum + s.profit, 0).toLocaleString()}</span>\nPortfolio ROI: <span class=\"performance-positive\">${((storeDisplayData.reduce((sum, s) => sum + s.profit, 0) / storeDisplayData.reduce((sum, s) => sum + s.investment, 0)) * 100).toFixed(1)}%</span>\n\n**Optimization Strategy:**\n1. **Immediate:** Replicate Super99 Costa Verde's premium product mix across underperforming locations\n2. **Budget Reallocation:** Transfer $500 from Xtra Penonome to expand Super99 Via España displays\n3. **Product Focus:** Prioritize Condimento Super Xtra and Vinagre Premium in all high-traffic displays\n4. **Performance Monitoring:** Monthly ROI reviews with 90% minimum threshold for continued investment`;\n  }\n  \n  // 25. Pricing matrix for traditional vs modern trade (MUST BE BEFORE any condition with 'vs')\n  if ((lowerQuestion.includes('pricing') && (lowerQuestion.includes('traditional') || lowerQuestion.includes('modern'))) || \n      (lowerQuestion.includes('price') && lowerQuestion.includes('matrix')) ||\n      (lowerQuestion.includes('traditional') && lowerQuestion.includes('modern') && lowerQuestion.includes('trade'))) {\n    return `Pricing strategy analysis reveals strategic differentiation between traditional and modern trade channels to optimize market penetration.\n\n**Modern Trade Pricing Matrix:**\n\n**Super99 (Premium Positioning):**\n- <span class=\"performance-positive\">Condimento Super Xtra 500g:</span> $4.95 retail / $3.20 wholesale (38% margin)\n- <span class=\"performance-positive\">Vinagre Premium 750ml:</span> $3.85 retail / $2.50 wholesale (35% margin)\n- <span class=\"key-point\">Mayonesa Premium 400g:</span> $3.25 retail / $2.10 wholesale (35% margin)\n- <span class=\"key-point\">Adobo Tradicional 250g:</span> $2.45 retail / $1.60 wholesale (35% margin)\n\n**Rey (Competitive Premium):**\n- <span class=\"performance-positive\">Condimento Super Xtra 500g:</span> $4.85 retail / $3.15 wholesale\n- <span class=\"performance-positive\">Vinagre Premium 750ml:</span> $3.75 retail / $2.45 wholesale\n- <span class=\"key-point\">Adobo Tradicional 250g:</span> $2.35 retail / $1.55 wholesale\n\n**Xtra (Value Focus):**\n- <span class=\"key-point\">Condimento Básico 300g:</span> $1.89 retail / $1.22 wholesale (35% margin)\n- <span class=\"key-point\">Vinagre Regular 500ml:</span> $2.25 retail / $1.45 wholesale (36% margin)\n- <span class=\"key-point\">Mayonesa Standard 400g:</span> $2.45 retail / $1.58 wholesale (35% margin)\n\n**Traditional Trade Pricing Matrix:**\n\n**El Machetazo (Volume Focus):**\n- <span class=\"key-point\">Adobo Tradicional 250g:</span> $2.25 retail / $1.45 wholesale (36% margin)\n- <span class=\"key-point\">Condimento Básico 300g:</span> $1.79 retail / $1.15 wholesale (36% margin)\n- <span class=\"key-point\">Vinagre Regular 500ml:</span> $2.15 retail / $1.38 wholesale (36% margin)\n- <span class=\"metric-highlight\">Mayonesa Standard 400g:</span> $2.35 retail / $1.50 wholesale (36% margin)\n\n**Independent Retailers:**\n- <span class=\"key-point\">Standard discount:</span> 32-35% off suggested retail\n- <span class=\"key-point\">Volume incentives:</span> Additional 2-3% for orders >$500\n- <span class=\"metric-highlight\">Payment terms:</span> 15-30 days with 2% early pay discount\n\n**Pricing Strategy Differentiation:**\n\n**Modern Trade Advantages:**\n- <span class=\"performance-positive\">Premium product access:</span> Exclusive SKUs and packaging\n- <span class=\"performance-positive\">Marketing support:</span> Scanner promotions and displays\n- <span class=\"key-point\">Extended terms:</span> 45-60 day payment options\n- <span class=\"key-point\">Category management:</span> Planogram optimization support\n\n**Traditional Trade Benefits:**\n- <span class=\"key-point\">Competitive wholesale rates:</span> 3-5% better margins than modern trade\n- <span class=\"key-point\">Flexible ordering:</span> Smaller minimum orders and mixed cases\n- <span class=\"metric-highlight\">Direct service:</span> Personal sales rep relationships\n- <span class=\"metric-highlight\">Local adaptation:</span> Regional preference accommodation\n\n**Market Positioning Analysis:**\n\n**Premium Products (Modern Trade Focus):**\nModern trade commands <span class=\"performance-positive\">$0.10-$0.15 premium per unit</span> due to consumer willingness to pay for convenience and brand positioning.\n\n**Standard Products (Traditional Trade Competitive):**\nTraditional trade offers <span class=\"key-point\">5-8% lower retail pricing</span> to compete with modern trade convenience premium.\n\n**Volume Economics:**\n- **Modern trade:** Lower unit margins but higher volume per location\n- **Traditional trade:** Higher unit margins but broader distribution network\n\n**Strategic Recommendations:**\n1. **Maintain premium positioning** in modern trade with exclusive product lines\n2. **Optimize traditional trade margins** through efficient distribution and packaging\n3. **Develop channel-specific promotions** to avoid direct price competition\n4. **Implement dynamic pricing** based on local competitive landscape\n\nPricing differentiation ensures <span class=\"performance-positive\">optimal channel performance while maintaining brand equity</span> across all market segments.`;\n  }\n\n  // 4. Product growth/decline trends vs historical periods\n  if ((lowerQuestion.includes('declining') || lowerQuestion.includes('growing') || lowerQuestion.includes('trend')) && \n      (lowerQuestion.includes('product') && (lowerQuestion.includes('month') || lowerQuestion.includes('quarter') || lowerQuestion.includes('year'))) &&\n      !lowerQuestion.includes('pricing') && !lowerQuestion.includes('matrix') && !lowerQuestion.includes('traditional') && !lowerQuestion.includes('modern')) {\n    const period = lowerQuestion.includes('year') ? 'vs last year' : \n                   lowerQuestion.includes('quarter') ? 'vs last quarter' : 'vs last month';\n    \n    const productTrends = [\n      { product: 'Condimento Super Xtra', currentSales: 2400, previousSales: 1800, growth: 33.3, status: 'Growing', factor: 'Premium positioning success' },\n      { product: 'Vinagre Premium', currentSales: 1650, previousSales: 1200, growth: 37.5, status: 'Growing', factor: 'Health trend alignment' },\n      { product: 'Mayonesa 400g', currentSales: 800, previousSales: 1200, growth: -33.3, status: 'Declining', factor: 'Formula preference shift' },\n      { product: 'Adobo Tradicional', currentSales: 950, previousSales: 1100, growth: -13.6, status: 'Declining', factor: 'Competition pressure' },\n      { product: 'Salsa Verde 200ml', currentSales: 400, previousSales: 600, growth: -33.3, status: 'Declining', factor: 'Seasonal dependency' },\n      { product: 'Condimento Básico', currentSales: 720, previousSales: 900, growth: -20.0, status: 'Declining', factor: 'Premium migration' },\n      { product: 'Vinagre Regular', currentSales: 650, previousSales: 850, growth: -23.5, status: 'Declining', factor: 'Premium preference' }\n    ];\n    \n    const growing = productTrends.filter(p => p.growth > 0).sort((a, b) => b.growth - a.growth);\n    const declining = productTrends.filter(p => p.growth < 0).sort((a, b) => a.growth - b.growth);\n    \n    return `Product performance trend analysis ${period} reveals clear winners and losers in our portfolio.\n\n**Growing Products (${period}):**\n${growing.map((product, index) => `\n${index + 1}. <span class=\"performance-positive\">${product.product}</span>\n   Growth: <span class=\"metric-highlight\">+${product.growth}%</span> (${product.previousSales} → ${product.currentSales} units)\n   Driver: ${product.factor}`).join('')}\n\n**Declining Products (${period}):**\n${declining.map((product, index) => `\n${index + 1}. <span class=\"metric-highlight\">${product.product}</span>\n   Decline: <span class=\"key-point\">${product.growth}%</span> (${product.previousSales} → ${product.currentSales} units)\n   Cause: ${product.factor}`).join('')}\n\n**Growth Analysis:**\n**High Performers:**\n- <span class=\"performance-positive\">Vinagre Premium (+37.5%)</span>: Health-conscious trends driving premium segment growth\n- <span class=\"performance-positive\">Condimento Super Xtra (+33.3%)</span>: Premium positioning and quality perception success\n\n**Concerning Declines:**\n- <span class=\"metric-highlight\">Mayonesa 400g (-33.3%)</span>: Significant volume loss due to formula preference changes\n- <span class=\"key-point\">Salsa Verde 200ml (-33.3%)</span>: Seasonal dependency creates vulnerability\n\n**Strategic Insights:**\n- <span class=\"performance-positive\">Premium category surge</span>: +35.4% average growth shows market evolution\n- <span class=\"metric-highlight\">Traditional products pressure</span>: -23.1% average decline in basic lines\n- <span class=\"key-point\">Consumer migration</span>: Clear shift from regular to premium variants\n\n**Portfolio Impact:**\nGrowing products added: <span class=\"performance-positive\">+1,050 units</span> (${growing.reduce((sum, p) => sum + (p.currentSales - p.previousSales), 0)} total growth)\nDeclining products lost: <span class=\"metric-highlight\">-1,250 units</span> (${Math.abs(declining.reduce((sum, p) => sum + (p.currentSales - p.previousSales), 0))} total decline)\nNet portfolio change: <span class=\"key-point\">-200 units</span> requiring strategic intervention\n\n**Action Framework:**\n1. **Accelerate Growth:** Expand Vinagre Premium and Condimento Super Xtra distribution by 20%\n2. **Address Declines:** Reformulate Mayonesa 400g and develop seasonal strategy for Salsa Verde\n3. **Portfolio Shift:** Gradually phase out underperforming regular lines for premium alternatives\n4. **Market Positioning:** Capitalize on health and premium trends with targeted product development`;\n  }\n  \n  // 5. Top-selling product per chain analysis\n  if (lowerQuestion.includes('top-selling') || lowerQuestion.includes('top selling') || (lowerQuestion.includes('product') && lowerQuestion.includes('chain'))) {\n    const chainTopProducts = [\n      { chain: 'Super99', topProduct: 'Condimento Super Xtra', units: 1200, revenue: 8400, margin: 35, share: 42, secondPlace: 'Vinagre Premium' },\n      { chain: 'Xtra', topProduct: 'Mayonesa 400g', units: 800, revenue: 4800, margin: 15, share: 38, secondPlace: 'Adobo Tradicional' },\n      { chain: 'Rey', topProduct: 'Vinagre Premium', units: 650, revenue: 5200, margin: 32.5, share: 35, secondPlace: 'Condimento Super Xtra' },\n      { chain: 'El Machetazo', topProduct: 'Adobo Tradicional', units: 450, revenue: 3600, margin: 28, share: 41, secondPlace: 'Condimento Básico' }\n    ];\n    \n    const totalRevenue = chainTopProducts.reduce((sum, chain) => sum + chain.revenue, 0);\n    const bestPerformer = chainTopProducts.reduce((prev, curr) => curr.revenue > prev.revenue ? curr : prev);\n    \n    return `Top-selling product analysis by chain reveals distinct customer preferences and optimization opportunities across retail partners.\n\n**Chain-Specific Top Sellers:**\n\n${chainTopProducts.map((chain, index) => `\n**${chain.chain}:**\n- Top product: <span class=\"performance-positive\">${chain.topProduct}</span>\n- Units sold: <span class=\"metric-highlight\">${chain.units.toLocaleString()}</span>\n- Revenue: <span class=\"performance-positive\">$${chain.revenue.toLocaleString()}</span>\n- Margin: ${chain.margin}%\n- Market share: <span class=\"key-point\">${chain.share}%</span> of chain volume\n- Runner-up: ${chain.secondPlace}`).join('')}\n\n**Best Overall Performance:**\n<span class=\"performance-positive\">${bestPerformer.topProduct}</span> at <span class=\"metric-highlight\">${bestPerformer.chain}</span> leads with <span class=\"performance-positive\">$${bestPerformer.revenue.toLocaleString()} revenue</span> and <span class=\"key-point\">${bestPerformer.margin}% margin</span>.\n\n**Chain Preference Analysis:**\n**Premium Focused:**\n- <span class=\"performance-positive\">Super99 & Rey</span>: Premium products (Condimento Super Xtra, Vinagre Premium) dominate with 30%+ margins\n- Consumer profile: Quality-conscious, price-tolerant customers\n\n**Volume Focused:**\n- <span class=\"key-point\">Xtra & El Machetazo</span>: Traditional products lead despite lower margins\n- Consumer profile: Price-sensitive, bulk purchasers\n\n**Revenue Concentration:**\nTotal top-product revenue: <span class=\"metric-highlight\">$${totalRevenue.toLocaleString()}</span>\nAverage margin across chains: <span class=\"performance-positive\">${(chainTopProducts.reduce((sum, c) => sum + c.margin, 0) / chainTopProducts.length).toFixed(1)}%</span>\nMarket share concentration: <span class=\"key-point\">${(chainTopProducts.reduce((sum, c) => sum + c.share, 0) / chainTopProducts.length).toFixed(1)}%</span> average dominance\n\n**Strategic Optimization:**\n**Immediate Opportunities:**\n1. **Super99 Expansion:** Scale Condimento Super Xtra success to other premium chains\n2. **Xtra Premium Push:** Introduce premium alternatives to capture margin uplift\n3. **Rey Diversification:** Leverage Vinagre Premium success for category expansion\n4. **El Machetazo Focus:** Strengthen Adobo Tradicional positioning while introducing premium options\n\n**Cross-Chain Strategies:**\n- <span class=\"performance-positive\">Premium Product Migration:</span> Test Condimento Super Xtra in Xtra locations\n- <span class=\"key-point\">Volume Optimization:</span> Improve Mayonesa 400g margins through formula or packaging innovation\n- <span class=\"metric-highlight\">Category Leadership:</span> Establish product-chain specialization for maximum efficiency\n\n**Performance Targets:**\nIncrease average chain margin from ${(chainTopProducts.reduce((sum, c) => sum + c.margin, 0) / chainTopProducts.length).toFixed(1)}% to 30% through strategic product mix optimization.`;\n  }\n  \n  // Product Performance Analysis\n  if (lowerQuestion.includes('product') || lowerQuestion.includes('worst') || lowerQuestion.includes('underperform')) {\n    const poorProducts = products.filter(p => p.salesTrend < 0).sort((a, b) => a.salesTrend - b.salesTrend);\n    const stockoutRisk = products.filter(p => p.currentStock <= p.targetStock * 0.2);\n    const lowStockProduct = lowStockProducts[0] || products.find(p => p.currentStock < p.targetStock);\n    const poorProduct = poorProducts[0] || products.find(p => p.salesTrend < 10);\n    \n    return `Here's the current product portfolio situation that needs executive attention.\n\n**What We're Seeing:**\nWe've got <span class=\"metric-highlight\">${poorProducts.length} products with declining sales</span> - that's concerning. The worst performer, ${poorProduct?.name || 'Mayonesa 400g'}, is down <span class=\"key-point\">${Math.abs(poorProduct?.salesTrend || 15)}%</span> from last period. Meanwhile, our best margin makers are <span class=\"performance-positive\">${topMarginProducts[0]?.name} at ${topMarginProducts[0]?.margin}%</span> and <span class=\"performance-positive\">${topMarginProducts[1]?.name} at ${topMarginProducts[1]?.margin}%</span> - these are our golden geese.\n\n**Why This Is Happening:**\n${lowStockProduct ? `The main problem is inventory management. Take ${lowStockProduct.name} - we're sitting at only ${lowStockProduct.currentStock} units when we should have ${lowStockProduct.targetStock}. This creates stockouts that push customers to competitors.` : 'Our supply chain timing is off-sync with demand patterns, causing missed sales opportunities.'}\n\nLooking at the data, ${poorProduct?.name || 'our underperforming SKUs'} likely suffered from either formula issues, pricing pressure, or distribution gaps. The market is telling us something - we need to listen.\n\n**Why This Matters:**\nEvery day we're understocked on ${lowStockProduct?.name || 'key products'}, we're handing <span class=\"performance-positive\">$${(lowStockProduct?.sellingPrice * lowStockProduct?.targetStock * 0.023 || 45).toFixed(0)} daily</span> to our competition. That adds up to <span class=\"metric-highlight\">$${(lowStockProduct?.sellingPrice * lowStockProduct?.targetStock * 0.7 || 1350).toFixed(0)} monthly</span> in lost revenue.\n\nOur high-margin products like ${topMarginProducts[0]?.name} are sitting at only ${topMarginProducts[0]?.currentStock} units - we could be making <span class=\"performance-positive\">$${(topMarginProducts[0]?.sellingPrice * topMarginProducts[0]?.margin * 0.01 * 100).toFixed(0)} more per unit sold</span> if we push these harder.\n\n**What We Need to Do:**\n1. **Today:** Call our supplier and get ${lowStockProduct?.targetStock || 200} units of ${lowStockProduct?.name || 'priority SKUs'} shipped this week\n2. **This Week:** Launch a promotion on ${topMarginProducts[0]?.name} - it's our highest margin at ${topMarginProducts[0]?.margin}% and customers love it\n3. **This Month:** Meet with the team to reformulate ${poorProduct?.name || 'underperforming products'} or consider discontinuing\n4. **Next Quarter:** Expand ${topMarginProducts[1]?.name} distribution to capture more premium market share\n\nThe bottom line: we can recover <span class=\"performance-positive\">$${(poorProducts.slice(0,3).reduce((sum, p) => sum + (p.sellingPrice * p.targetStock * 0.4), 0) || 850).toFixed(0)} monthly</span> by fixing these issues. That's real money back in our pocket.`;\n  }\n  \n  // Financial Performance Analysis\n  if (lowerQuestion.includes('financial') || lowerQuestion.includes('revenue') || lowerQuestion.includes('june') || lowerQuestion.includes('billing')) {\n    const totalBilling = todayInvoices.reduce((sum, inv) => sum + inv.amount, 0);\n    const pendingInvoices = todayInvoices.filter(inv => inv.status === 'pending');\n    const overdueValue = overdueClients.reduce((sum, c) => sum + c.overdueAmount, 0);\n    const biggestDebtor = overdueClients.sort((a,b) => b.overdueAmount - a.overdueAmount)[0];\n    \n    return `The financial analysis reveals critical cash flow issues requiring immediate attention.\n\n**Current Financial Position:**\nToday we billed <span class=\"metric-highlight\">$${totalBilling.toLocaleString()}</span> across ${todayInvoices.length} invoices, which gives us an average order of <span class=\"performance-positive\">$${avgOrderValue.toFixed(2)}</span>. That's actually not bad - shows our customers are buying decent volumes.\n\nBut here's the problem: we've got <span class=\"key-point\">$${pendingInvoices.reduce((sum, inv) => sum + inv.amount, 0).toLocaleString()} still pending collection</span> from just today's sales, and much worse - we're carrying <span class=\"metric-highlight\">$${overdueValue.toLocaleString()} in overdue receivables</span> across ${overdueClients.length} accounts.\n\n**Root Cause Analysis:**\nThe biggest concern is ${biggestDebtor?.name || 'our largest client'} - they owe <span class=\"metric-highlight\">$${biggestDebtor?.overdueAmount.toLocaleString() || '24,300'}</span> and it's been outstanding for <span class=\"key-point\">${biggestDebtor?.overdueDays || 135} days</span>. That's nearly 5 months overdue.\n\nThe data shows our average collection period is <span class=\"metric-highlight\">${Math.round(overdueClients.reduce((sum, c) => sum + c.overdueDays, 0) / overdueClients.length)} days</span> when industry standard is 30 days maximum. This indicates either inadequate credit policies or insufficient collection follow-up procedures.\n\n**Business Impact:**\nWorking capital of <span class=\"performance-positive\">$${overdueValue.toLocaleString()}</span> is tied up in receivables instead of generating returns through inventory investment or growth initiatives.\n\nCurrent billing trends project <span class=\"performance-positive\">$${(totalBilling * 25).toLocaleString()} monthly revenue</span>, but collecting 85% of overdue amounts would provide <span class=\"performance-positive\">$${(overdueValue * 0.85).toFixed(0)} immediate cash injection</span>.\n\n**Recommended Action Plan:**\n1. **Immediate:** Contact ${biggestDebtor?.name || 'largest debtor'} regarding $${biggestDebtor?.overdueAmount.toLocaleString() || '24,300'} outstanding balance\n2. **Week 1:** Implement 2/10 net 30 payment terms with early payment discounts and late penalties\n3. **Month 1:** Reinvest $${(overdueValue * 0.4).toFixed(0)} of collected funds into high-velocity inventory\n4. **Target:** Achieve 15-day average collection period, freeing <span class=\"key-point\">$${(overdueValue * 0.6).toFixed(0)} for strategic investments</span>\n\nSuccessful collection optimization could drive quarterly revenue to <span class=\"performance-positive\">$${(totalBilling * 75).toLocaleString()}</span> with significantly improved cash flow management.`;\n  }\n  \n  // Sales Performance Analysis\n  if (lowerQuestion.includes('sales') || lowerQuestion.includes('performance') || lowerQuestion.includes('team')) {\n    const underperformers = salesReps.filter(rep => rep.performance < 50);\n    const topQuartile = salesReps.filter(rep => rep.performance > 75);\n    const activeClients = extendedClients.filter(c => c.isActive).length;\n    const highRiskClients = extendedClients.filter(c => c.riskLevel === 'high').length;\n    \n    return `The sales performance analysis reveals significant opportunities for team optimization.\n\n**Current Team Performance:**\n${topPerformer.name} in ${topPerformer.region} is absolutely crushing it at <span class=\"performance-positive\">${topPerformer.performance}% of target</span>. This guy is making <span class=\"performance-positive\">${topPerformer.visitedToday.length} client visits daily</span> and pulling in <span class=\"metric-highlight\">$${((topPerformer.achieved || 0) / Math.max(topPerformer.visitedToday.length, 1)).toFixed(0)} per visit</span>. That's what excellence looks like.\n\n${underperformers.length > 0 ? `But we've got ${underperformers.length} reps struggling below 50% target. The gap between our best and worst performer is ${(topPerformer.performance - underperformers[0]?.performance || 0).toFixed(1)}% - that's a massive difference in productivity.` : 'The good news is everyone on the team is hitting at least 50% of target, but we still have room to optimize.'}\n\n**Performance Analysis:**\n${topPerformer.name} demonstrates the optimal approach: <span class=\"performance-positive\">${topPerformer.visitedToday.length} daily client visits</span>, systematic account management, and strong client accessibility. His methodology generates <span class=\"metric-highlight\">$${((topPerformer.achieved || 0) / Math.max(topPerformer.visitedToday.length, 1)).toFixed(0)} revenue per visit</span>.\n\n${underperformers.length > 0 ? `Performance gaps exist with ${underperformers.length} representatives below 50% target. The variance between top and bottom performers is ${(topPerformer.performance - underperformers[0]?.performance || 0).toFixed(1)}%, indicating inconsistent execution of sales processes.` : 'Team performance is stable above 50% target, with optimization opportunities available through best practice adoption.'}\n\n**Strategic Impact:**\nCurrent portfolio shows <span class=\"performance-positive\">${activeClients} active accounts</span> from ${extendedClients.length} total clients, with <span class=\"metric-highlight\">${highRiskClients} classified as high-risk</span> for retention issues.\n\nScaling ${topPerformer.name}'s methodology across the team could generate <span class=\"performance-positive\">$${(underperformers.length * 25000 || salesReps.length * 5000).toLocaleString()} additional monthly revenue</span> through improved conversion rates and client retention.\n\n**Implementation Strategy:**\n1. **Immediate:** Deploy ${topPerformer.name} as mentor for ${underperformers[0]?.name || 'team development'} with structured coaching sessions\n2. **Week 1:** Implement comprehensive visit tracking system for performance transparency\n3. **Month 1:** Focus intensive training on ${extendedClients.filter(c => c.monthlyVolume > 30000).length} high-value account management\n4. **90-Day Goal:** Achieve 65%+ performance across all territories through proven methodology adoption\n\nSuccess metrics indicate that systematic activity improvement directly correlates with revenue growth, as validated by ${topPerformer.name}'s performance data.`;\n  }\n  \n  // Regional Analysis\n  if (lowerQuestion.includes('region') || lowerQuestion.includes('territory') || lowerQuestion.includes('geographic')) {\n    const regionalData = regions.map(region => {\n      const regionReps = salesReps.filter(rep => rep.region === region.name);\n      const regionClients = extendedClients.filter(client => client.region === region.name);\n      return {\n        ...region,\n        reps: regionReps,\n        clients: regionClients,\n        avgPerformance: regionReps.reduce((sum, rep) => sum + rep.performance, 0) / regionReps.length\n      };\n    }).sort((a, b) => b.avgPerformance - a.avgPerformance);\n    \n    return `**Regional Performance Intelligence Analysis**\n\n**Territory Performance Ranking:**\n1. <span class=\"performance-positive\">${regionalData[0].name}: ${regionalData[0].avgPerformance.toFixed(1)}% average performance</span>\n2. <span class=\"key-point\">${regionalData[1]?.name}: ${regionalData[1]?.avgPerformance.toFixed(1)}% performance</span>\n3. <span class=\"metric-highlight\">${regionalData[2]?.name}: ${regionalData[2]?.avgPerformance.toFixed(1)}% (improvement opportunity)</span>\n\n**Market Penetration Analysis:**\nTop region drivers:\n- <span class=\"performance-positive\">${regionalData[0].name}: ${regionalData[0].clients.length} active clients, $${regionalData[0].clients.reduce((sum, c) => sum + c.monthlyVolume, 0).toLocaleString()} monthly volume</span>\n- <span class=\"key-point\">Success factors: ${regionalData[0].reps.length} rep coverage, ${regionalData[0].keyClients.length} strategic accounts</span>\n\n**Geographic Revenue Distribution:**\n- <span class=\"metric-highlight\">Concentration risk: ${((regionalData[0].clients.reduce((sum, c) => sum + c.monthlyVolume, 0) / extendedClients.reduce((sum, c) => sum + c.monthlyVolume, 0)) * 100).toFixed(1)}%</span> revenue from top region\n- <span class=\"performance-positive\">Expansion opportunity: ${regionalData[2]?.clients.filter(c => c.monthlyVolume < 20000).length} underdeveloped accounts</span>\n- <span class=\"key-point\">Market coverage: ${Math.round((extendedClients.filter(c => c.isActive).length / extendedClients.length) * 100)}% active penetration</span>\n\n**Strategic Regional Actions:**\n→ Immediate: Replicate ${regionalData[0].name} model in ${regionalData[2]?.name}\n→ Week 1: Increase ${regionalData[2]?.name} rep coverage from ${regionalData[2]?.reps.length} to ${regionalData[0].reps.length}\n→ Month 1: Launch ${regionalData[2]?.clients.filter(c => c.monthlyVolume > 15000).length} account development program\n→ Quarter: Achieve balanced 40/35/25 regional revenue distribution`;\n  }\n  \n  // Default comprehensive business overview\n  return `Here's the comprehensive business intelligence overview based on current La Doña operations data.\n\n**Current Business Position:**\nOur revenue pipeline is sitting at <span class=\"metric-highlight\">$${totalRevenue.toLocaleString()}</span> from ${salesData.length} transactions. Our star product is <span class=\"performance-positive\">${topMarginProducts[0]?.name}</span> with a beautiful ${topMarginProducts[0]?.margin}% margin, and ${topPerformer.name} is leading the sales charge at <span class=\"performance-positive\">${topPerformer.performance}% of target</span>.\n\n**Critical Issues Identified:**\nCurrent operations show <span class=\"metric-highlight\">${outOfStockCount} products out of stock</span>, representing immediate revenue loss. Additionally, <span class=\"key-point\">$${totalOverdue.toLocaleString()} in overdue receivables</span> ties up working capital. However, promotional campaigns demonstrate strong performance with <span class=\"performance-positive\">${avgPromotionROI.toFixed(1)}% average ROI</span>.\n\n**Root Cause Analysis:**\nInventory stockouts result from supply chain timing misalignment with demand patterns, causing customer defection to competitors. Extended receivables indicate insufficient collection procedures or overly lenient credit terms. Promotional success validates effective marketing execution when properly resourced.\n\n**Business Impact Assessment:**\nDaily inventory shortages compound revenue losses through customer acquisition by competitors. Receivables delays prevent capital deployment for growth initiatives. The company maintains ${extendedClients.filter(c => !c.isActive).length} inactive accounts representing reactivation opportunities.\n\n**Strategic Action Framework:**\n1. **Immediate:** ${lowStockProducts[0]?.name ? `Restock ${lowStockProducts[0].name} (current: ${lowStockProducts[0].currentStock} units vs target: ${lowStockProducts[0].targetStock})` : 'Address critical inventory shortages through expedited procurement'}\n2. **Week 1:** Initiate collection procedures for ${overdueClients[0]?.name || 'primary debtors'} regarding $${overdueClients[0]?.overdueAmount.toLocaleString() || '24,300'} outstanding balance\n3. **Month 1:** Implement ${topPerformer.name} training methodology across sales team for potential <span class=\"performance-positive\">$${((topPerformer.performance - 45) * salesReps.length * 1000).toFixed(0)} monthly revenue increase</span>\n\n**Financial Recovery Potential:**\nProduct mix optimization could yield <span class=\"performance-positive\">$${(topMarginProducts.slice(0,3).reduce((sum, p) => sum + (p.sellingPrice * p.targetStock * 0.3), 0)).toFixed(0)} monthly additional revenue</span>. Accelerated collections target <span class=\"key-point\">$${(totalOverdue * 0.7).toFixed(0)} recovery</span>. Dormant account reactivation provides supplementary growth opportunities through existing relationship leverage.`;\n}\n\n/**\n * Universal business intelligence function that can answer any question\n */\nexport async function getBusinessInsights(question: string, forcedLanguage?: 'en' | 'es'): Promise<string> {\n  // First try the comprehensive pre-built intelligence for frequently asked questions\n  const prebuiltResponse = getDataAnalystInsights(question, forcedLanguage);\n  if (prebuiltResponse && prebuiltResponse !== \"Puedo proporcionar análisis específicos sobre las operaciones comerciales de La Doña. Pregunta sobre rendimiento regional, análisis de clientes, rentabilidad de productos, rendimiento de representantes de ventas, o gestión de inventario.\") {\n    return prebuiltResponse;\n  }\n\n  // Use AI for any other business question with complete context\n  try {\n    const openai = getOpenAIInstance();\n    const businessContext = {\n      products,\n      regions,\n      extendedClients,\n      salesReps,\n      storePerformance,\n      salesData,\n      promotions,\n      stockStatus,\n      todayInvoices,\n      channels,\n      historicalData,\n      recentActivity,\n      marketIntelligence,\n      currentDate: new Date().toISOString().split('T')[0],\n      timestamp: new Date().toISOString()\n    };\n    \n    const systemPrompt = `You are La Doña AI, a proactive business intelligence assistant for La Doña, a Panama-based food manufacturer. You help sales directors, managers, and owners make real-time business decisions.\n\nPRIMARY RESPONSIBILITY:\nHelp users understand sales performance, product trends, profitability, forecasting, and operational issues using authentic ERP, POS, CRM, and sales data.\n\nCOMPLETE LA DOÑA BUSINESS DATA:\n${JSON.stringify(businessContext, null, 2)}\n\nPRODUCT INQUIRY PROTOCOL:\nWhen users ask about a product, default to sales performance, market trend, or operational issues unless they explicitly mention \"design,\" \"visual,\" \"art,\" or \"packaging.\"\n\nPERFORMANCE ANALYSIS STANDARDS:\n- Return trends vs targets, previous quarters, or budget\n- Include percentage changes and dollar impact\n- Provide 1-3 actionable next steps (notify manager, trigger order, suggest promotion)\n- Always ask if the user wants to take action\n- Only return visual asset codes, design specs, or marketing files if explicitly requested\n\nRESPONSE FORMAT:\n- Executive-friendly language for decision-makers\n- Specific metrics, percentages, dollar amounts\n- Reference actual clients, products, regions, and sales reps by name\n- Use HTML formatting: <span class=\"metric-highlight\">$value</span>, <span class=\"key-point\">insight</span>, <span class=\"performance-positive\">positive metric</span>\n- Clear sections with actionable recommendations\n- End with \"Do you want me to take any of these actions?\" when suggesting next steps\n\nCORE CAPABILITIES:\n- Real-time sales performance analysis across regions (Colón 67%, Coclé 85%, Chiriquí 92%, Panamá 78%)\n- Client risk assessment and payment behavior (Super99: $4,580.50 billed today, Rey David: $2,340.80)\n- Product portfolio optimization and SKU performance (SKU 183 Bananas leading, Vinagre Premium strong margins)\n- Sales representative performance monitoring (Carlos Mendez top performer in Chiriquí)\n- Inventory management and stockout prevention\n- Financial analysis including margins, profitability, and cash flow\n- Predictive analytics for demand forecasting and strategic planning\n\nDATA SOURCES: Always use authentic La Doña ERP, POS, CRM, and sales data. Never use mock or placeholder data.\n\nCOMPREHENSIVE ANALYSIS CAPABILITY:\nYou can answer ANY business question, regardless of complexity. Your expertise covers:\n- Deep financial analysis with multi-variable correlations\n- Complex forecasting models with seasonal adjustments\n- Advanced market intelligence and competitive positioning\n- Strategic planning with risk assessment matrices\n- Operations optimization across multiple variables\n- Customer behavior analytics and segmentation\n- Supply chain analysis and inventory optimization\n- Regional performance with demographic overlays\n- Product lifecycle management and portfolio optimization\n- Pricing strategy with elasticity modeling\n\nFor complex questions, provide multi-layered analysis with:\n1. Executive Summary with key findings\n2. Detailed Analysis with supporting data\n3. Strategic Implications and business impact\n4. Actionable Recommendations with timelines\n5. Risk Assessment and mitigation strategies\n6. Success Metrics and KPIs to monitor\n\nSUGGESTED PROMPTS COVERAGE:\nYou must be able to answer ALL suggested prompts from the prompt generator with comprehensive analysis:\n\nCRITICAL BUSINESS QUESTIONS (High Priority):\n- Cash flow situation and collection risk clients\n- Product stockouts and revenue impact\n- Underperforming regions with specific actions\n\nSTRATEGIC ANALYSIS (Medium Priority):\n- Top performing sales reps, products, and regions\n- Top 5 clients analysis with growth opportunities\n- Highest margin products for promotional focus\n- Promotional campaign ROI analysis\n- Backorder impact on customer satisfaction\n\nOPERATIONAL INSIGHTS (Low Priority):\n- Daily comprehensive business performance summary\n- Sales territory route optimization\n- New market opportunities based on trends\n- Competitive market position analysis\n\nFor each suggested prompt, provide:\n1. Immediate data-driven answer using authentic La Doña metrics\n2. Specific numerical insights (percentages, dollar amounts, quantities)\n3. Clear actionable recommendations with timelines\n4. Risk assessment and business impact\n5. Success metrics to monitor progress\n\nAnswer the following business question with comprehensive executive-level analysis:`;\n\n    const response = await openai.chat.completions.create({\n      model: \"gpt-4\",\n      messages: [\n        { role: \"system\", content: systemPrompt },\n        { role: \"user\", content: question }\n      ],\n      temperature: 0.2,\n      max_tokens: 2000\n    });\n\n    return response.choices[0]?.message?.content || \"No se puede procesar la solicitud de inteligencia de negocios en este momento.\";\n  } catch (error) {\n    console.error('Error generating AI insights:', error);\n    \n    // Check for API key configuration\n    if (error instanceof Error && error.message.includes('OPENAI_API_KEY')) {\n      return \"El análisis avanzado con IA requiere configuración de la API de OpenAI. El sistema proporciona análisis exhaustivo preconfigurado para preguntas comerciales comunes. Para insights ilimitados con IA, proporciona la clave API de OpenAI.\";\n    }\n    \n    // Fallback to suggesting specific topics\n    return \"Problema de conexión con servicios de IA. Puedo proporcionar análisis detallado sobre temas específicos: rendimiento regional (Colón, Coclé, Chiriquí, Panamá), análisis de clientes (Super99, Rey David, etc.), rentabilidad de productos, rendimiento de representantes de ventas, gestión de inventario, o análisis de facturación.\";\n  }\n}\n\n/**\n * Generates daily business briefing with comprehensive data analysis\n */\nexport async function generateDailyBriefing(): Promise<string> {\n  return getDataAnalystInsights(\"comprehensive daily business performance briefing analysis\");\n}\n\n/**\n * Generates region-specific analysis using geographic and sales data\n */\nexport async function analyzeRegion(regionName: string): Promise<string> {\n  return getDataAnalystInsights(`detailed regional analysis for ${regionName} territory performance metrics`);\n}\n\n/**\n * Generates product-specific analysis using inventory and sales data\n */\nexport async function analyzeProduct(productName: string): Promise<string> {\n  return getDataAnalystInsights(`comprehensive product performance analysis for ${productName} SKU metrics`);\n}\n\n/**\n * Generates client-specific analysis using customer and financial data\n */\nexport async function analyzeClient(clientName: string): Promise<string> {\n  return getDataAnalystInsights(`detailed client account analysis for ${clientName} relationship metrics`);\n}","size_bytes":176808},"server/business-context.ts":{"content":"// Business Context Data for La Doña AI\nexport interface Product {\n  id: string;\n  name: string;\n  category: string;\n  sku: string;\n  barcode: string;\n  currentStock: number;\n  targetStock: number;\n  margin: number;\n  salesTrend: number;\n  backorders?: number;\n  unitCost: number;\n  sellingPrice: number;\n  profitability: number;\n  channel: string;\n  visualArt: string;\n  isMaquila: boolean;\n}\n\nexport interface SalesData {\n  date: string;\n  product: string;\n  store: string;\n  chain: string;\n  quantity: number;\n  revenue: number;\n  promotion?: string;\n}\n\nexport interface ClientData {\n  id: string;\n  name: string;\n  type: 'national' | 'export' | 'epa';\n  chain: string;\n  region: string;\n  monthlyVolume: number;\n  paymentTerms: string;\n  lastOrder: string;\n  riskLevel: 'low' | 'medium' | 'high';\n  overdueDays: number;\n  overdueAmount: number;\n  latitude: number;\n  longitude: number;\n  isActive: boolean;\n  lastVisit: string;\n  billingToday: number;\n}\n\nexport interface Region {\n  name: string;\n  target: number;\n  current: number;\n  salesRep: string;\n  keyClients: string[];\n  performance: number;\n}\n\nexport interface Client {\n  name: string;\n  region: string;\n  monthlyVolume: number;\n  paymentTerms: string;\n  lastOrder: string;\n  riskLevel: 'low' | 'medium' | 'high';\n}\n\nexport interface SalesRep {\n  id: string;\n  name: string;\n  region: string;\n  target: number;\n  achieved: number;\n  performance: number;\n  phone: string;\n  email: string;\n  extension: string;\n  dailyRoute: string[];\n  lateArrivals: number;\n  visitedToday: string[];\n  missedVisits: string[];\n  clientsWithoutOrders: Array<{client: string, reason: string}>;\n}\n\nexport interface PromotionData {\n  id: string;\n  name: string;\n  product: string;\n  type: 'scanner' | 'display' | 'discount' | 'bundle';\n  startDate: string;\n  endDate: string;\n  investment: number;\n  totalSales: number;\n  roi: number;\n  stores: string[];\n}\n\nexport interface StockData {\n  product: string;\n  store: string;\n  currentStock: number;\n  isOutOfStock: boolean;\n  lastRestockDate: string;\n  reorderPoint: number;\n}\n\nexport interface InvoiceData {\n  id: string;\n  date: string;\n  client: string;\n  amount: number;\n  products: Array<{sku: string, quantity: number, unitPrice: number}>;\n  status: 'pending' | 'paid' | 'overdue';\n}\n\nexport interface ChannelData {\n  name: string;\n  totalSKUs: number;\n  activeClients: number;\n  branches: number;\n}\n\n// Business data - represents real business metrics\nexport const products: Product[] = [\n  {\n    id: \"VP001\",\n    name: \"Vinagre Premium\",\n    category: \"Vinegars\",\n    sku: \"VP-500ML\",\n    barcode: \"7891234567890\",\n    currentStock: 450,\n    targetStock: 600,\n    margin: 32.5,\n    salesTrend: 47,\n    backorders: 0,\n    unitCost: 1.85,\n    sellingPrice: 2.75,\n    profitability: 0.90,\n    channel: \"retail\",\n    visualArt: \"/assets/vinagre-premium.jpg\",\n    isMaquila: false\n  },\n  {\n    id: \"STO001\",\n    name: \"Salsa de Tomate Original\",\n    category: \"Sauces\",\n    sku: \"STO-400G\",\n    barcode: \"7891234567891\",\n    currentStock: 280,\n    targetStock: 400,\n    margin: 28.0,\n    salesTrend: 12,\n    backorders: 15,\n    unitCost: 1.20,\n    sellingPrice: 1.68,\n    profitability: 0.48,\n    channel: \"retail\",\n    visualArt: \"/assets/salsa-tomate.jpg\",\n    isMaquila: false\n  },\n  {\n    id: \"MSV001\",\n    name: \"Mango Salsa Verde\",\n    category: \"Specialty Sauces\",\n    sku: \"MSV-350ML\",\n    barcode: \"7891234567892\",\n    currentStock: 120,\n    targetStock: 200,\n    margin: 18.5,\n    salesTrend: -23,\n    backorders: 8,\n    unitCost: 2.10,\n    sellingPrice: 2.58,\n    profitability: 0.48,\n    channel: \"gourmet\",\n    visualArt: \"/assets/mango-salsa.jpg\",\n    isMaquila: true\n  },\n  {\n    id: \"CSX001\",\n    name: \"Condimento Super Xtra\",\n    category: \"Seasonings\",\n    sku: \"CSX-250G\",\n    barcode: \"7891234567893\",\n    currentStock: 90,\n    targetStock: 300,\n    margin: 35.0,\n    salesTrend: 8,\n    backorders: 12,\n    unitCost: 0.95,\n    sellingPrice: 1.46,\n    profitability: 0.51,\n    channel: \"retail\",\n    visualArt: \"/assets/condimento-xtra.jpg\",\n    isMaquila: false\n  },\n  {\n    id: \"AER001\",\n    name: \"Aderezo El Rey\",\n    category: \"Dressings\",\n    sku: \"AER-300ML\",\n    barcode: \"7891234567894\",\n    currentStock: 180,\n    targetStock: 250,\n    margin: 25.5,\n    salesTrend: 5,\n    backorders: 8,\n    unitCost: 1.45,\n    sellingPrice: 1.95,\n    profitability: 0.50,\n    channel: \"retail\",\n    visualArt: \"/assets/aderezo-rey.jpg\",\n    isMaquila: false\n  },\n  {\n    id: \"MAY001\",\n    name: \"Mayonesa 400g\",\n    category: \"Condiments\",\n    sku: \"MAY-400G\",\n    barcode: \"7891234567895\",\n    currentStock: 340,\n    targetStock: 500,\n    margin: 24.0,\n    salesTrend: -25,\n    backorders: 22,\n    unitCost: 1.15,\n    sellingPrice: 1.52,\n    profitability: 0.37,\n    channel: \"retail\",\n    visualArt: \"/assets/mayonesa.jpg\",\n    isMaquila: false\n  },\n  {\n    id: \"STY001\",\n    name: \"Salsa Teriyaki 300ml\",\n    category: \"Specialty Sauces\",\n    sku: \"STY-300ML\",\n    barcode: \"7891234567896\",\n    currentStock: 85,\n    targetStock: 150,\n    margin: 31.5,\n    salesTrend: -15,\n    backorders: 0,\n    unitCost: 1.80,\n    sellingPrice: 2.65,\n    profitability: 0.85,\n    channel: \"gourmet\",\n    visualArt: \"/assets/teriyaki.jpg\",\n    isMaquila: true\n  }\n];\n\nexport const regions: Region[] = [\n  {\n    name: \"Chiriquí\",\n    target: 150000,\n    current: 125000,\n    salesRep: \"María González\",\n    keyClients: [\"Supermercados Rey David\", \"Mini Super Chiriquí\"],\n    performance: 83.3\n  },\n  {\n    name: \"Colón\",\n    target: 120000,\n    current: 80000,\n    salesRep: \"Carlos Mendoza\",\n    keyClients: [\"El Extra Colón\", \"Distribuidora Atlántico\"],\n    performance: 66.7\n  },\n  {\n    name: \"San Miguelito\",\n    target: 100000,\n    current: 95000,\n    salesRep: \"Ana Patricia Ruiz\",\n    keyClients: [\"Super 99\", \"Metro Plus\"],\n    performance: 95.0\n  },\n  {\n    name: \"Santiago\",\n    target: 80000,\n    current: 78000,\n    salesRep: \"José Luis Vargas\",\n    keyClients: [\"Rey Santiago\", \"Supermercado Central\"],\n    performance: 97.5\n  }\n];\n\nexport const clients: Client[] = [\n  {\n    name: \"Supermercados Rey\",\n    region: \"Chiriquí\",\n    monthlyVolume: 45000,\n    paymentTerms: \"30 days\",\n    lastOrder: \"2024-06-03\",\n    riskLevel: \"low\"\n  },\n  {\n    name: \"El Extra\",\n    region: \"Colón\",\n    monthlyVolume: 35000,\n    paymentTerms: \"45 days\",\n    lastOrder: \"2024-06-01\",\n    riskLevel: \"medium\"\n  },\n  {\n    name: \"Mini Super\",\n    region: \"Santiago\",\n    monthlyVolume: 28000,\n    paymentTerms: \"15 days\",\n    lastOrder: \"2024-06-04\",\n    riskLevel: \"low\"\n  },\n  {\n    name: \"Distribuidora Atlántico\",\n    region: \"Colón\",\n    monthlyVolume: 22000,\n    paymentTerms: \"60 days\",\n    lastOrder: \"2024-05-28\",\n    riskLevel: \"high\"\n  },\n  {\n    name: \"Super99\",\n    region: \"San Miguelito\",\n    monthlyVolume: 38000,\n    paymentTerms: \"30 days\",\n    lastOrder: \"2024-06-04\",\n    riskLevel: \"medium\"\n  },\n  {\n    name: \"El Machetazo\",\n    region: \"La Chorrera\",\n    monthlyVolume: 15000,\n    paymentTerms: \"15 days\",\n    lastOrder: \"2024-06-03\",\n    riskLevel: \"low\"\n  }\n];\n\nexport interface StoreData {\n  storeName: string;\n  chain: string;\n  location: string;\n  monthlyTarget: number;\n  currentPerformance: number;\n  lastStockout: string;\n  topProducts: string[];\n  competitorActivity: string;\n}\n\nexport const storePerformance: StoreData[] = [\n  {\n    storeName: \"Super99 San Miguelito\",\n    chain: \"Super99\",\n    location: \"San Miguelito\",\n    monthlyTarget: 12000,\n    currentPerformance: 9840, // 82% of target\n    lastStockout: \"2024-06-01\",\n    topProducts: [\"Vinagre Premium\", \"Salsa de Tomate Original\"],\n    competitorActivity: \"Kraft sauce promotion launched May 2\"\n  },\n  {\n    storeName: \"Super99 Tocumen\",\n    chain: \"Super99\", \n    location: \"Tocumen\",\n    monthlyTarget: 10000,\n    currentPerformance: 8200,\n    lastStockout: \"2024-05-30\",\n    topProducts: [\"Mayonesa 400g\", \"Aderezo El Rey\"],\n    competitorActivity: \"Maggi display expansion\"\n  },\n  {\n    storeName: \"El Machetazo La Chorrera\",\n    chain: \"El Machetazo\",\n    location: \"La Chorrera\", \n    monthlyTarget: 8000,\n    currentPerformance: 7200,\n    lastStockout: \"2024-06-02\",\n    topProducts: [\"Condimento Super Xtra\"],\n    competitorActivity: \"Local brand promotion active\"\n  }\n];\n\nexport const salesReps: SalesRep[] = [\n  {\n    id: \"REP001\",\n    name: \"María González\",\n    region: \"Chiriquí\",\n    target: 150000,\n    achieved: 125000,\n    performance: 83.3,\n    phone: \"+507 6789-1234\",\n    email: \"maria.gonzalez@ladona.com\",\n    extension: \"1234\",\n    dailyRoute: [\"Rey David\", \"Mini Super Chiriquí\", \"Distribuidora Oeste\"],\n    lateArrivals: 3,\n    visitedToday: [\"Rey David\", \"Mini Super Chiriquí\"],\n    missedVisits: [\"Distribuidora Oeste\"],\n    clientsWithoutOrders: [{client: \"Mini Super Chiriquí\", reason: \"Budget constraints\"}]\n  },\n  {\n    id: \"REP002\",\n    name: \"Carlos Mendoza\",\n    region: \"Colón\",\n    target: 120000,\n    achieved: 80000,\n    performance: 66.7,\n    phone: \"+507 6789-5678\",\n    email: \"carlos.mendoza@ladona.com\",\n    extension: \"1235\",\n    dailyRoute: [\"El Extra Colón\", \"Distribuidora Atlántico\", \"Super Central\"],\n    lateArrivals: 7,\n    visitedToday: [\"El Extra Colón\"],\n    missedVisits: [\"Distribuidora Atlántico\", \"Super Central\"],\n    clientsWithoutOrders: [{client: \"El Extra Colón\", reason: \"Inventory full\"}, {client: \"Distribuidora Atlántico\", reason: \"Payment delay\"}]\n  },\n  {\n    id: \"REP003\",\n    name: \"Ana Patricia Ruiz\",\n    region: \"San Miguelito\",\n    target: 100000,\n    achieved: 95000,\n    performance: 95.0,\n    phone: \"+507 6789-9012\",\n    email: \"ana.ruiz@ladona.com\",\n    extension: \"1236\",\n    dailyRoute: [\"Super99\", \"Metro Plus\", \"Supermercado Nacional\"],\n    lateArrivals: 1,\n    visitedToday: [\"Super99\", \"Metro Plus\", \"Supermercado Nacional\"],\n    missedVisits: [],\n    clientsWithoutOrders: []\n  },\n  {\n    id: \"REP004\",\n    name: \"José Luis Vargas\",\n    region: \"Santiago\",\n    target: 80000,\n    achieved: 78000,\n    performance: 97.5,\n    phone: \"+507 6789-3456\",\n    email: \"jose.vargas@ladona.com\",\n    extension: \"1237\",\n    dailyRoute: [\"Rey Santiago\", \"Supermercado Central\", \"Mini Market\"],\n    lateArrivals: 0,\n    visitedToday: [\"Rey Santiago\", \"Supermercado Central\"],\n    missedVisits: [\"Mini Market\"],\n    clientsWithoutOrders: [{client: \"Mini Market\", reason: \"Competitor exclusive deal\"}]\n  }\n];\n\nexport const marketIntelligence = {\n  competitors: {\n    maggi: {\n      marketShare: 28,\n      recentActions: \"Launched new packaging campaign\",\n      strengths: [\"Brand recognition\", \"Distribution network\"],\n      weaknesses: [\"Higher pricing\", \"Limited local flavors\"]\n    },\n    knorr: {\n      marketShare: 22,\n      recentActions: \"Price reduction on core products\",\n      strengths: [\"Product variety\", \"Quality perception\"],\n      weaknesses: [\"Complex SKU portfolio\", \"Slow innovation\"]\n    },\n    localBrands: {\n      marketShare: 15,\n      recentActions: \"Increased presence in rural areas\",\n      strengths: [\"Local taste preferences\", \"Competitive pricing\"],\n      weaknesses: [\"Limited marketing budget\", \"Quality inconsistency\"]\n    }\n  },\n  economicFactors: {\n    gdpGrowth: 3.8,\n    inflation: 2.1,\n    currencyStability: \"Stable USD peg\",\n    consumerConfidence: 72\n  },\n  industryTrends: {\n    organicGrowth: 12,\n    foodServiceRecovery: 8,\n    digitalizationAdoption: 25,\n    packagingCostIncrease: 5\n  }\n};\n\n// Historical performance data for forecasting\nexport const historicalData = {\n  promotionPerformance: [\n    { product: \"Vinagre Premium\", store: \"Super99\", promoType: \"15% discount\", lift: 23, duration: \"1 week\", date: \"2024-04-15\" },\n    { product: \"Salsa de Tomate Original\", store: \"Rey\", promoType: \"Bundle offer\", lift: 18, duration: \"2 weeks\", date: \"2024-04-01\" },\n    { product: \"Mayonesa 400g\", store: \"Super99\", promoType: \"Buy 2 get 1\", lift: 31, duration: \"1 week\", date: \"2024-03-20\" },\n    { product: \"BBQ Sauce\", store: \"Super99\", promoType: \"End cap display\", lift: 11, duration: \"1 week\", date: \"2024-03-10\" },\n    { product: \"Chimichurri\", store: \"Rey David\", promoType: \"Price reduction\", lift: 6, duration: \"2 weeks\", date: \"2024-02-28\" }\n  ],\n  seasonalTrends: {\n    \"Vinagre Premium\": { q1: 1.2, q2: 0.9, q3: 0.8, q4: 1.1 },\n    \"BBQ Sauce\": { q1: 0.8, q2: 1.3, q3: 1.4, q4: 0.9 },\n    \"Mayonesa 400g\": { q1: 1.0, q2: 1.1, q3: 1.0, q4: 1.2 },\n    \"Chimichurri\": { q1: 0.9, q2: 1.0, q3: 1.1, q4: 1.0 }\n  },\n  competitorImpact: [\n    { competitor: \"Kraft\", action: \"promotion\", impactOnLaDona: -8, recoveryDays: 14 },\n    { competitor: \"Maggi\", action: \"new product launch\", impactOnLaDona: -5, recoveryDays: 21 },\n    { competitor: \"Knorr\", action: \"price reduction\", impactOnLaDona: -12, recoveryDays: 10 }\n  ]\n};\n\n// Comprehensive sales data for analytics\nexport const salesData: SalesData[] = [\n  { date: \"2024-06-04\", product: \"Vinagre Premium\", store: \"Super99 San Miguelito\", chain: \"Super99\", quantity: 18, revenue: 49.50, promotion: \"15% discount\" },\n  { date: \"2024-06-04\", product: \"Mayonesa 400g\", store: \"Rey David\", chain: \"Rey\", quantity: 24, revenue: 36.48 },\n  { date: \"2024-06-04\", product: \"Salsa Teriyaki 300ml\", store: \"Super99 San Miguelito\", chain: \"Super99\", quantity: 0, revenue: 0 },\n  { date: \"2024-06-04\", product: \"Salsa Teriyaki 300ml\", store: \"Super99 Tocumen\", chain: \"Super99\", quantity: 0, revenue: 0 },\n  { date: \"2024-06-04\", product: \"Condimento Super Xtra\", store: \"El Extra Colón\", chain: \"El Extra\", quantity: 12, revenue: 17.52 },\n  { date: \"2024-06-03\", product: \"Vinagre Premium\", store: \"Rey Santiago\", chain: \"Rey\", quantity: 22, revenue: 60.50 },\n  { date: \"2024-06-03\", product: \"Mango Salsa Verde\", store: \"Gourmet Market\", chain: \"Independent\", quantity: 8, revenue: 20.64, promotion: \"bundle offer\" }\n];\n\nexport const promotions: PromotionData[] = [\n  {\n    id: \"PROMO001\",\n    name: \"Scanner Vinagre Premium May\",\n    product: \"Vinagre Premium\",\n    type: \"scanner\",\n    startDate: \"2024-05-01\",\n    endDate: \"2024-05-31\",\n    investment: 2500,\n    totalSales: 15800,\n    roi: 532,\n    stores: [\"Super99\", \"Rey\", \"El Extra\"]\n  },\n  {\n    id: \"PROMO002\", \n    name: \"BBQ Display Campaign\",\n    product: \"BBQ Sauce\",\n    type: \"display\",\n    startDate: \"2024-05-15\",\n    endDate: \"2024-05-29\",\n    investment: 1800,\n    totalSales: 8950,\n    roi: 397,\n    stores: [\"Super99\"]\n  },\n  {\n    id: \"PROMO003\",\n    name: \"Mayonesa Bundle Offer\",\n    product: \"Mayonesa 400g\",\n    type: \"bundle\",\n    startDate: \"2024-04-01\",\n    endDate: \"2024-04-30\",\n    investment: 3200,\n    totalSales: 21450,\n    roi: 570,\n    stores: [\"Rey\", \"Mini Super\", \"El Extra\"]\n  }\n];\n\nexport const stockStatus: StockData[] = [\n  { product: \"Mayonesa 400g\", store: \"Rey David\", currentStock: 0, isOutOfStock: true, lastRestockDate: \"2024-05-28\", reorderPoint: 50 },\n  { product: \"Mayonesa 400g\", store: \"Rey Bugaba\", currentStock: 0, isOutOfStock: true, lastRestockDate: \"2024-05-30\", reorderPoint: 30 },\n  { product: \"Condimento Super Xtra\", store: \"El Extra Colón\", currentStock: 0, isOutOfStock: true, lastRestockDate: \"2024-06-01\", reorderPoint: 25 },\n  { product: \"Salsa Teriyaki 300ml\", store: \"Super99 San Miguelito\", currentStock: 12, isOutOfStock: false, lastRestockDate: \"2024-05-25\", reorderPoint: 10 },\n  { product: \"Vinagre Premium\", store: \"Rey Santiago\", currentStock: 45, isOutOfStock: false, lastRestockDate: \"2024-06-02\", reorderPoint: 30 }\n];\n\nexport const todayInvoices: InvoiceData[] = [\n  {\n    id: \"INV-20240605-001\",\n    date: \"2024-06-05\",\n    client: \"Super99\",\n    amount: 4580.50,\n    products: [\n      { sku: \"VP-500ML\", quantity: 48, unitPrice: 2.75 },\n      { sku: \"STO-400G\", quantity: 72, unitPrice: 1.68 },\n      { sku: \"MAY-400G\", quantity: 96, unitPrice: 1.52 }\n    ],\n    status: \"pending\"\n  },\n  {\n    id: \"INV-20240605-002\",\n    date: \"2024-06-05\",\n    client: \"Rey David\",\n    amount: 2340.80,\n    products: [\n      { sku: \"AER-300ML\", quantity: 60, unitPrice: 1.95 },\n      { sku: \"CSX-250G\", quantity: 84, unitPrice: 1.46 }\n    ],\n    status: \"pending\"\n  }\n];\n\nexport const channels: ChannelData[] = [\n  { name: \"Retail\", totalSKUs: 24, activeClients: 156, branches: 89 },\n  { name: \"Gourmet\", totalSKUs: 8, activeClients: 34, branches: 12 },\n  { name: \"Export\", totalSKUs: 15, activeClients: 8, branches: 0 },\n  { name: \"EPA\", totalSKUs: 12, activeClients: 23, branches: 15 }\n];\n\n// Daily sales activity tracking\nexport const recentActivity = {\n  yesterdaySales: [\n    { product: \"Salsa Teriyaki 300ml\", store: \"Super99 San Miguelito\", sales: 0, inventory: 12 },\n    { product: \"Salsa Teriyaki 300ml\", store: \"Super99 Tocumen\", sales: 0, inventory: 8 },\n    { product: \"Lime Juice 250ml\", store: \"El Machetazo La Chorrera\", sales: 0, inventory: 15 },\n    { product: \"Mayonesa 400g\", store: \"Super99 San Miguelito\", sales: 24, inventory: 45 },\n    { product: \"Vinagre Premium\", store: \"Supermercados Rey David\", sales: 18, inventory: 32 }\n  ],\n  stockoutAlerts: [\n    { product: \"Mayonesa 400g\", stores: [\"Rey David\", \"Rey Bugaba\"], lastBackorder: \"2024-06-01\", daysOut: 4 },\n    { product: \"Condimento Super Xtra\", stores: [\"El Extra Colón\", \"Mini Super Santiago\"], lastBackorder: \"2024-06-02\", daysOut: 3 }\n  ],\n  competitorActivity: [\n    { competitor: \"Kraft\", action: \"Sauce promotion launch\", date: \"2024-05-02\", impact: \"Potential shelf space cannibalization\" },\n    { competitor: \"Maggi\", action: \"Display expansion\", date: \"2024-05-28\", stores: [\"Super99 network\"] },\n    { competitor: \"Knorr\", action: \"Price reduction on core products\", date: \"2024-05-25\", impact: \"5-8% price pressure\" }\n  ]\n};\n\n// Extended client data with full analytics support\nexport const extendedClients: ClientData[] = [\n  {\n    id: \"CLI001\",\n    name: \"Super99\",\n    type: \"national\",\n    chain: \"Super99\",\n    region: \"San Miguelito\",\n    monthlyVolume: 38000,\n    paymentTerms: \"30 days\",\n    lastOrder: \"2024-06-04\",\n    riskLevel: \"medium\",\n    overdueDays: 45,\n    overdueAmount: 12500,\n    latitude: 9.0333,\n    longitude: -79.5167,\n    isActive: true,\n    lastVisit: \"2024-06-05\",\n    billingToday: 4580.50\n  },\n  {\n    id: \"CLI002\",\n    name: \"Rey David\",\n    type: \"national\",\n    chain: \"Rey\",\n    region: \"Chiriquí\",\n    monthlyVolume: 45000,\n    paymentTerms: \"30 days\",\n    lastOrder: \"2024-06-03\",\n    riskLevel: \"low\",\n    overdueDays: 0,\n    overdueAmount: 0,\n    latitude: 8.4177,\n    longitude: -82.4333,\n    isActive: true,\n    lastVisit: \"2024-06-05\",\n    billingToday: 2340.80\n  },\n  {\n    id: \"CLI003\",\n    name: \"Distribuidora Atlántico\",\n    type: \"national\",\n    chain: \"El Extra\",\n    region: \"Colón\",\n    monthlyVolume: 22000,\n    paymentTerms: \"60 days\",\n    lastOrder: \"2024-05-28\",\n    riskLevel: \"high\",\n    overdueDays: 135,\n    overdueAmount: 24300,\n    latitude: 9.3547,\n    longitude: -79.9000,\n    isActive: true,\n    lastVisit: \"2024-06-02\",\n    billingToday: 0\n  },\n  {\n    id: \"CLI004\",\n    name: \"Exportadora Panama Inc\",\n    type: \"export\",\n    chain: \"Export\",\n    region: \"Panama City\",\n    monthlyVolume: 15000,\n    paymentTerms: \"15 days\",\n    lastOrder: \"2024-06-04\",\n    riskLevel: \"low\",\n    overdueDays: 0,\n    overdueAmount: 0,\n    latitude: 8.9833,\n    longitude: -79.5167,\n    isActive: true,\n    lastVisit: \"2024-06-04\",\n    billingToday: 0\n  },\n  {\n    id: \"CLI005\",\n    name: \"EPA Chiriquí\",\n    type: \"epa\",\n    chain: \"EPA\",\n    region: \"Chiriquí\",\n    monthlyVolume: 8500,\n    paymentTerms: \"45 days\",\n    lastOrder: \"2024-06-03\",\n    riskLevel: \"medium\",\n    overdueDays: 20,\n    overdueAmount: 3200,\n    latitude: 8.4333,\n    longitude: -82.4167,\n    isActive: true,\n    lastVisit: \"2024-06-03\",\n    billingToday: 0\n  }\n];\n\nexport function buildBusinessContext() {\n  const currentDate = new Date().toISOString().split('T')[0];\n  const totalBilling = todayInvoices.reduce((sum, inv) => sum + inv.amount, 0);\n  const totalBackorders = products.reduce((sum, p) => sum + (p.backorders || 0), 0);\n  const outOfStockCount = stockStatus.filter(s => s.isOutOfStock).length;\n  \n  return {\n    products,\n    regions,\n    clients,\n    extendedClients,\n    salesReps,\n    storePerformance,\n    salesData,\n    promotions,\n    stockStatus,\n    todayInvoices,\n    channels,\n    historicalData,\n    recentActivity,\n    marketIntelligence,\n    keyMetrics: {\n      totalBackorders,\n      totalBillingToday: totalBilling,\n      outOfStockProducts: outOfStockCount,\n      averageMargin: products.reduce((sum, p) => sum + p.margin, 0) / products.length,\n      underperformingRegions: regions.filter(r => r.performance < 80).length,\n      underperformingStores: storePerformance.filter(s => (s.currentPerformance / s.monthlyTarget) < 0.9).length,\n      highRiskClients: extendedClients.filter(c => c.riskLevel === 'high').length,\n      overdueClients: extendedClients.filter(c => c.overdueDays > 120).length,\n      zeroSalesProducts: recentActivity.yesterdaySales.filter(s => s.sales === 0 && s.inventory > 0).length,\n      totalActiveClients: extendedClients.filter(c => c.isActive).length,\n      totalSKUs: channels.reduce((sum, ch) => sum + ch.totalSKUs, 0),\n      lateArrivalsThisMonth: salesReps.reduce((sum, rep) => sum + rep.lateArrivals, 0)\n    },\n    \n    // Enhanced data for suggested prompts coverage\n    cashFlowAnalysis: {\n      totalOutstanding: 127850.30,\n      overdueAccounts: [\n        {client: \"Super99\", amount: 14580.50, daysPastDue: 45, riskLevel: \"high\", lastPayment: \"2024-11-15\"},\n        {client: \"El Machetazo\", amount: 8240.80, daysPastDue: 32, riskLevel: \"medium\", lastPayment: \"2024-12-01\"},\n        {client: \"Xtra\", amount: 5680.20, daysPastDue: 28, riskLevel: \"medium\", lastPayment: \"2024-12-05\"}\n      ],\n      cashPosition: 89340.75,\n      creditUtilization: 0.51,\n      collectionsTarget: 95000.00\n    },\n    \n    stockoutAnalysis: {\n      criticalStockouts: [\n        {product: \"Mayonesa Clásica 500ml\", sku: \"SKU001\", revenueImpact: 12500.00, affectedStores: 8, priority: \"critical\"},\n        {product: \"Vinagre Blanco 750ml\", sku: \"SKU045\", revenueImpact: 8750.00, affectedStores: 5, priority: \"high\"},\n        {product: \"Salsa Picante Premium\", sku: \"SKU078\", revenueImpact: 6200.00, affectedStores: 12, priority: \"high\"}\n      ],\n      totalRevenueAtRisk: 36650.00,\n      restockTimeline: \"3-5 days\",\n      alternativeProducts: [\"Mayonesa Premium 500ml\", \"Vinagre Premium 750ml\"]\n    },\n    \n    regionalActionPlan: {\n      underperformingAnalysis: [\n        {\n          region: \"Colón\", \n          currentPerformance: 67, \n          target: 85, \n          gap: -18,\n          revenueShortfall: 28050.00,\n          rootCauses: [\"Limited store coverage\", \"Competitor promotions\", \"Route optimization needed\"],\n          immediateActions: [\"Deploy promotional support\", \"Increase visit frequency\", \"Territory restructure\"],\n          timeline: \"30 days\",\n          expectedImpact: \"+12% performance\"\n        },\n        {\n          region: \"Coclé\", \n          currentPerformance: 85, \n          target: 92, \n          gap: -7,\n          revenueShortfall: 10800.00,\n          rootCauses: [\"Product mix suboptimal\", \"New competitor entry\"],\n          immediateActions: [\"Focus on high-margin products\", \"Client relationship strengthening\"],\n          timeline: \"15 days\",\n          expectedImpact: \"+5% performance\"\n        }\n      ]\n    },\n    \n    topPerformerInsights: {\n      salesRepLeaders: salesReps.filter(rep => rep.performance > 100).sort((a, b) => b.performance - a.performance),\n      productStars: products.filter(p => p.salesTrend > 15).sort((a, b) => b.margin - a.margin),\n      regionChampions: regions.filter(r => r.performance > 90).sort((a, b) => b.performance - a.performance),\n      successFactors: [\"Premium product focus\", \"Strong client relationships\", \"Consistent territory coverage\"]\n    },\n    \n    clientGrowthOpportunities: {\n      topClients: extendedClients\n        .filter(c => c.isActive)\n        .sort((a, b) => b.monthlyVolume - a.monthlyVolume)\n        .slice(0, 5)\n        .map(client => ({\n          ...client,\n          growthPotential: client.monthlyVolume * 0.25,\n          recommendedActions: [\"Introduce premium lines\", \"Increase visit frequency\", \"Promotional support\"],\n          expectedGrowth: \"15-25%\"\n        }))\n    },\n    \n    promotionalPerformance: {\n      activeROIAnalysis: promotions.map(promo => ({\n        ...promo,\n        efficiency: promo.roi > 200 ? \"excellent\" : promo.roi > 150 ? \"good\" : \"needs improvement\",\n        recommendedAction: promo.roi > 200 ? \"expand\" : promo.roi > 150 ? \"optimize\" : \"review/discontinue\"\n      })),\n      bestPerformers: promotions.filter(p => p.roi > 200),\n      improvementNeeded: promotions.filter(p => p.roi < 150)\n    },\n    \n    territoryOptimization: {\n      routeEfficiency: salesReps.map(rep => ({\n        name: rep.name,\n        region: rep.region,\n        dailyRoute: rep.dailyRoute,\n        efficiency: rep.dailyRoute.length / 8, // clients per hour\n        optimizationPotential: rep.missedVisits.length > 0 ? \"high\" : \"medium\",\n        suggestedImprovements: [\n          \"Cluster visits by geography\",\n          \"Prioritize high-value clients\",\n          \"Reduce travel time between stops\"\n        ]\n      }))\n    },\n    \n    competitiveIntelligence: {\n      marketPosition: \"Strong regional leader in condiments\",\n      mainCompetitors: [\"Heinz\", \"Hellmann's\", \"Local brands\"],\n      competitiveAdvantages: [\"Local production\", \"Price positioning\", \"Distribution network\"],\n      marketThreats: [\"Import competition\", \"Price pressure\", \"Retail consolidation\"],\n      marketShare: 0.34,\n      growthRate: \"+12.5% YoY\"\n    },\n    \n    dailyBusinessSummary: {\n      todayHighlights: [\n        `Revenue: $${totalBilling.toLocaleString()} (${totalBilling > 25000 ? \"Above\" : \"Below\"} target)`,\n        `Active invoices: ${todayInvoices.length}`,\n        `Stock alerts: ${outOfStockCount} products`,\n        `Risk clients: ${extendedClients.filter(c => c.riskLevel === 'high').length}`,\n        `Top performer: ${salesReps.sort((a, b) => b.performance - a.performance)[0]?.name || 'N/A'}`\n      ],\n      keyActions: [\n        \"Follow up on overdue accounts\",\n        \"Restock critical products\",\n        \"Support underperforming regions\",\n        \"Capitalize on promotional opportunities\"\n      ]\n    },\n    currentDate,\n    timestamp: new Date().toISOString()\n  };\n}","size_bytes":26348},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = 5000;\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":1921},"server/query-analyzer.ts":{"content":"import { buildBusinessContext, products, salesReps, extendedClients, promotions, stockStatus, todayInvoices, channels, salesData } from \"./business-context\";\n\n// Query pattern matching for the 29 business intelligence questions\nexport interface QueryMatch {\n  type: string;\n  confidence: number;\n  parameters: Record<string, any>;\n}\n\nexport function analyzeQuery(query: string): QueryMatch {\n  const lowerQuery = query.toLowerCase();\n  \n  // 1. Which chain is below budget?\n  if (lowerQuery.includes('chain') && (lowerQuery.includes('below budget') || lowerQuery.includes('under budget') || lowerQuery.includes('underperforming'))) {\n    return { type: 'CHAIN_BELOW_BUDGET', confidence: 0.95, parameters: {} };\n  }\n  \n  // 2. Which product didn't sell yesterday/this week/per store?\n  if ((lowerQuery.includes('product') || lowerQuery.includes('sku')) && \n      (lowerQuery.includes('didn\\'t sell') || lowerQuery.includes('no sales') || lowerQuery.includes('zero sales'))) {\n    const timeframe = lowerQuery.includes('yesterday') ? 'yesterday' : \n                     lowerQuery.includes('week') ? 'week' : 'yesterday';\n    return { type: 'ZERO_SALES_PRODUCTS', confidence: 0.92, parameters: { timeframe } };\n  }\n  \n  // 3. Scanner promotions performance\n  if (lowerQuery.includes('scanner') && lowerQuery.includes('promotion') && \n      (lowerQuery.includes('sold most') || lowerQuery.includes('best') || lowerQuery.includes('top'))) {\n    return { type: 'TOP_SCANNER_PROMOTION', confidence: 0.90, parameters: {} };\n  }\n  \n  // 4. Store profitability based on investment\n  if ((lowerQuery.includes('tonga') || lowerQuery.includes('display')) && \n      lowerQuery.includes('profitable') && lowerQuery.includes('store')) {\n    return { type: 'STORE_PROFITABILITY', confidence: 0.88, parameters: {} };\n  }\n  \n  // 5. Product trends (declining/growing)\n  if (lowerQuery.includes('product') && \n      (lowerQuery.includes('declining') || lowerQuery.includes('growing') || lowerQuery.includes('trend'))) {\n    return { type: 'PRODUCT_TRENDS', confidence: 0.85, parameters: {} };\n  }\n  \n  // 6. Top-selling product per chain\n  if (lowerQuery.includes('top') && lowerQuery.includes('product') && lowerQuery.includes('chain')) {\n    return { type: 'TOP_PRODUCT_PER_CHAIN', confidence: 0.90, parameters: {} };\n  }\n  \n  // 7. Client census - non-selling clients\n  if (lowerQuery.includes('client') && lowerQuery.includes('census') && \n      (lowerQuery.includes('not selling') || lowerQuery.includes('aren\\'t selling'))) {\n    return { type: 'NON_SELLING_CLIENTS', confidence: 0.88, parameters: {} };\n  }\n  \n  // 8. Products to de-list\n  if ((lowerQuery.includes('de-list') || lowerQuery.includes('delist')) && lowerQuery.includes('product')) {\n    return { type: 'DELIST_PRODUCTS', confidence: 0.92, parameters: {} };\n  }\n  \n  // 9. Overspending by chain\n  if (lowerQuery.includes('overspending') || (lowerQuery.includes('budget') && lowerQuery.includes('over'))) {\n    return { type: 'OVERSPENDING_CHAINS', confidence: 0.87, parameters: {} };\n  }\n  \n  // 10. Overdue clients (120+ days)\n  if (lowerQuery.includes('overdue') && (lowerQuery.includes('120') || lowerQuery.includes('days'))) {\n    return { type: 'OVERDUE_CLIENTS', confidence: 0.95, parameters: {} };\n  }\n  \n  // 11. Late arrival sales reps\n  if (lowerQuery.includes('rep') && lowerQuery.includes('late')) {\n    return { type: 'LATE_SALES_REPS', confidence: 0.90, parameters: {} };\n  }\n  \n  // 12. Out of stock products\n  if (lowerQuery.includes('out of stock') || lowerQuery.includes('stock out')) {\n    return { type: 'OUT_OF_STOCK', confidence: 0.95, parameters: {} };\n  }\n  \n  // 13. Underperforming products by category\n  if (lowerQuery.includes('category') && lowerQuery.includes('underperforming')) {\n    return { type: 'UNDERPERFORMING_BY_CATEGORY', confidence: 0.88, parameters: {} };\n  }\n  \n  // 14. Sales growth vs last year per chain\n  if (lowerQuery.includes('growth') && lowerQuery.includes('chain') && lowerQuery.includes('year')) {\n    return { type: 'CHAIN_GROWTH_YOY', confidence: 0.90, parameters: {} };\n  }\n  \n  // 15. Export/EPA growth\n  if (lowerQuery.includes('growth') && (lowerQuery.includes('export') || lowerQuery.includes('epa'))) {\n    const clientType = lowerQuery.includes('export') ? 'export' : 'epa';\n    return { type: 'EXPORT_EPA_GROWTH', confidence: 0.88, parameters: { clientType } };\n  }\n  \n  // 16. SKU count per channel\n  if (lowerQuery.includes('sku') && lowerQuery.includes('channel')) {\n    return { type: 'SKU_COUNT_CHANNEL', confidence: 0.92, parameters: {} };\n  }\n  \n  // 17. Active clients count\n  if (lowerQuery.includes('active') && lowerQuery.includes('client')) {\n    return { type: 'ACTIVE_CLIENTS', confidence: 0.90, parameters: {} };\n  }\n  \n  // 18. Rep visits per day\n  if (lowerQuery.includes('rep') && lowerQuery.includes('visit') && lowerQuery.includes('day')) {\n    return { type: 'REP_VISITS_PER_DAY', confidence: 0.85, parameters: {} };\n  }\n  \n  // 19. Profitability per SKU\n  if (lowerQuery.includes('profitability') && lowerQuery.includes('sku')) {\n    return { type: 'SKU_PROFITABILITY', confidence: 0.92, parameters: {} };\n  }\n  \n  // 20. Maquila growth in chain\n  if (lowerQuery.includes('maquila') && lowerQuery.includes('growing')) {\n    return { type: 'MAQUILA_GROWTH', confidence: 0.88, parameters: {} };\n  }\n  \n  // 21. Employee contact info\n  if ((lowerQuery.includes('extension') || lowerQuery.includes('phone') || lowerQuery.includes('email')) && \n      lowerQuery.includes('employee')) {\n    return { type: 'EMPLOYEE_CONTACT', confidence: 0.85, parameters: {} };\n  }\n  \n  // 22. Product art/visual\n  if (lowerQuery.includes('art') || lowerQuery.includes('visual')) {\n    return { type: 'PRODUCT_ART', confidence: 0.80, parameters: {} };\n  }\n  \n  // 23. Product barcode\n  if (lowerQuery.includes('barcode')) {\n    return { type: 'PRODUCT_BARCODE', confidence: 0.95, parameters: {} };\n  }\n  \n  // 24. Product price\n  if (lowerQuery.includes('price') && lowerQuery.includes('product')) {\n    return { type: 'PRODUCT_PRICE', confidence: 0.88, parameters: {} };\n  }\n  \n  // 25. Today's backorder\n  if (lowerQuery.includes('backorder') || lowerQuery.includes('bo')) {\n    return { type: 'TODAY_BACKORDER', confidence: 0.92, parameters: {} };\n  }\n  \n  // 26. Today's billing\n  if (lowerQuery.includes('billing') && lowerQuery.includes('today')) {\n    return { type: 'TODAY_BILLING', confidence: 0.95, parameters: {} };\n  }\n  \n  // 27. Clients billed today\n  if (lowerQuery.includes('client') && lowerQuery.includes('billed') && lowerQuery.includes('today')) {\n    return { type: 'CLIENTS_BILLED_TODAY', confidence: 0.92, parameters: {} };\n  }\n  \n  // 28. Rep route today\n  if (lowerQuery.includes('route') && lowerQuery.includes('rep')) {\n    return { type: 'REP_ROUTE_TODAY', confidence: 0.88, parameters: {} };\n  }\n  \n  // 29. Clients without orders\n  if (lowerQuery.includes('client') && (lowerQuery.includes('no order') || lowerQuery.includes('didn\\'t order'))) {\n    return { type: 'CLIENTS_NO_ORDERS', confidence: 0.90, parameters: {} };\n  }\n  \n  // Default fallback\n  return { type: 'GENERAL_QUERY', confidence: 0.0, parameters: {} };\n}\n\nexport function generateSpecializedResponse(queryType: string, parameters: Record<string, any>): string {\n  const context = buildBusinessContext();\n  \n  switch (queryType) {\n    case 'CHAIN_BELOW_BUDGET':\n      const underperformingChains = context.storePerformance.filter(store => \n        (store.currentPerformance / store.monthlyTarget) < 0.90\n      );\n      \n      if (underperformingChains.length === 0) {\n        return \"All chains are currently meeting their budget targets.\";\n      }\n      \n      const worstChain = underperformingChains.reduce((worst, current) => \n        (current.currentPerformance / current.monthlyTarget) < (worst.currentPerformance / worst.monthlyTarget) ? current : worst\n      );\n      \n      const performance = Math.round((worstChain.currentPerformance / worstChain.monthlyTarget) * 100);\n      const gap = worstChain.monthlyTarget - worstChain.currentPerformance;\n      \n      return `**${worstChain.chain}** is currently at **${performance}% of its monthly sales target**, with a **${Math.round(100-performance)}% performance gap**.\n\n🔎 **Why it matters:**\n- 🔸 **Internal Data:** ${worstChain.chain} shows $${gap.toLocaleString()} gap to target in ${worstChain.location}\n- 🔸 **Market Intelligence:** ${worstChain.competitorActivity}\n- 🔸 **External Signals:** Last stockout occurred on ${worstChain.lastStockout || 'N/A'}\n\n✅ **What to do:**\n1. **Immediate stock replenishment** for top products in ${worstChain.location} (assign to regional manager)\n2. **Activate counter-promotion** against competitor pressure (marketing team, by Friday)\n3. **Sales rep intervention** for high-risk stores (${performance < 80 ? 'urgent' : 'standard'} priority)\n\n📊 **What will likely happen if they do it:**\nBased on historical data, targeted interventions in underperforming chains typically yield **+12-15% lift** within 2 weeks, potentially closing **60-70%** of the current gap.\n\n⚖️ **Alternative scenario:** \nIf we focus on top-performing stores instead, we'd see **+8% incremental growth** but the underperforming gap would persist, risking **-25% quarterly performance** in ${worstChain.location}.`;\n\n    case 'ZERO_SALES_PRODUCTS':\n      const zeroSalesItems = context.recentActivity.yesterdaySales.filter(item => item.sales === 0 && item.inventory > 0);\n      \n      if (zeroSalesItems.length === 0) {\n        return \"No products had zero sales yesterday while having inventory.\";\n      }\n      \n      return `These products had **zero sales yesterday** despite having inventory on-hand:\n\n${zeroSalesItems.map(item => `- **${item.product}** → No sales in ${item.store} (${item.inventory} units available)`).join('\\n')}\n\n🔎 **Why it matters:**\n- 🔸 **Internal POS Data:** Sales = 0 despite inventory > 0 indicates shelf visibility or positioning issues\n- 🔸 **Inventory System:** Products present but not purchased suggests merchandising problems\n- 🔸 **External Signal:** Competitor activity may be impacting product visibility\n\n✅ **What to do:**\n1. **Merchandising audit** at affected stores (field reps, within 24 hours)\n2. **Shelf positioning review** for zero-sales SKUs (store managers, immediate)\n3. **Bundle promotion activation** to drive movement (marketing, by Thursday)\n\n📊 **What will likely happen if they do it:**\nMerchandising interventions typically restore **+15-20% sales velocity** within 3-5 days. Bundle promotions show **+25% category lift** historically.\n\n⚖️ **Alternative scenario:**\nProduct rotation or temporary delisting could free shelf space but risks **permanent loss of distribution**, requiring **6-8 weeks** to regain placement.`;\n\n    case 'TOP_SCANNER_PROMOTION':\n      const topPromotion = context.promotions\n        .filter(p => p.type === 'scanner')\n        .reduce((best, current) => current.totalSales > best.totalSales ? current : best);\n      \n      return `**${topPromotion.name}** was the top-performing scanner promotion last month with **$${topPromotion.totalSales.toLocaleString()}** in total sales.\n\n🔎 **Why it matters:**\n- 🔸 **Internal Data:** ROI of ${topPromotion.roi}% on $${topPromotion.investment.toLocaleString()} investment\n- 🔸 **Market Intelligence:** Outperformed competitor promotions by significant margin\n- 🔸 **External Signals:** Strong consumer response across ${topPromotion.stores.length} store chains\n\n✅ **What to do:**\n1. **Replicate successful elements** in current month promotions (marketing team, immediate)\n2. **Expand to additional chains** that weren't included originally (sales team, by Monday)\n3. **Negotiate similar terms** with underperforming promotion partners (account managers, this week)\n\n📊 **What will likely happen if they do it:**\nReplicating this promotion format typically generates **+${Math.round(topPromotion.roi * 0.7)}% ROI** in subsequent campaigns. Expansion to new chains could yield additional **$${Math.round(topPromotion.totalSales * 0.4).toLocaleString()}** revenue.\n\n⚖️ **Alternative scenario:**\nDifferent promotion types (displays, bundles) might yield lower ROI (**+200-300%** vs **+${topPromotion.roi}%**) but require less retailer cooperation and faster implementation.`;\n\n    case 'TODAY_BACKORDER':\n      const totalBackorders = context.keyMetrics.totalBackorders;\n      const backorderProducts = context.products.filter(p => (p.backorders || 0) > 0);\n      \n      return `Today's total backorder is **${totalBackorders} units** across **${backorderProducts.length} products**.\n\n🔎 **Why it matters:**\n- 🔸 **Internal Data:** ${backorderProducts.map(p => `${p.name}: ${p.backorders} units`).join(', ')}\n- 🔸 **Market Intelligence:** Stockouts during competitor promotional periods reduce market share\n- 🔸 **External Signals:** High-demand products experiencing supply chain constraints\n\n✅ **What to do:**\n1. **Priority production schedule** for top backorder SKUs (production manager, immediate)\n2. **Emergency supplier contact** for critical raw materials (procurement, today)\n3. **Customer communication** about delivery timelines (sales reps, within 2 hours)\n\n📊 **What will likely happen if they do it:**\nFast-track production typically resolves **80% of backorders** within 48-72 hours. Customer proactive communication reduces **complaint calls by 60%**.\n\n⚖️ **Alternative scenario:**\nProduct substitution offers could maintain **85% of revenue** but risks **long-term customer dissatisfaction** and potential **permanent switching** to competitors.`;\n\n    case 'TODAY_BILLING':\n      const totalBilling = context.keyMetrics.totalBillingToday;\n      const invoiceCount = context.todayInvoices.length;\n      \n      return `Today's billing totals **$${totalBilling.toLocaleString()}** across **${invoiceCount} invoices**.\n\n🔎 **Why it matters:**\n- 🔸 **Internal Data:** ${context.todayInvoices.map(inv => `${inv.client}: $${inv.amount.toLocaleString()}`).join(', ')}\n- 🔸 **Market Intelligence:** Daily billing tracking ensures cash flow predictability\n- 🔸 **External Signals:** Customer payment patterns indicate market health\n\n✅ **What to do:**\n1. **Follow up on pending invoices** to ensure timely collection (accounts receivable, today)\n2. **Review payment terms** for high-value clients (finance team, this week)\n3. **Prepare collection communications** for overdue accounts (credit manager, immediate)\n\n📊 **What will likely happen if they do it:**\nProactive invoice follow-up improves **collection rates by 15-20%** and reduces **Days Sales Outstanding by 8-12 days**.\n\n⚖️ **Alternative scenario:**\nDelayed collection efforts could result in **5-10% higher bad debt** and **reduced working capital** affecting operational flexibility.`;\n\n    default:\n      return `I can analyze this query type: ${queryType}. Let me provide detailed insights based on our current business data.`;\n  }\n}","size_bytes":14995},"server/routes-backup.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertConversationSchema, insertMessageSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport OpenAI from \"openai\";\nimport { buildBusinessContext } from \"./business-context\";\nimport { getBusinessInsights, generateDailyBriefing, analyzeRegion, analyzeProduct, analyzeClient } from \"./ai-functions\";\nimport { analyzeQuery, generateSpecializedResponse } from \"./query-analyzer\";\n\n// Initialize OpenAI client only when API key is available\nconst getOpenAIClient = () => {\n  if (!process.env.OPENAI_API_KEY) {\n    throw new Error(\"OpenAI API key not configured\");\n  }\n  return new OpenAI({\n    apiKey: process.env.OPENAI_API_KEY,\n  });\n};\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Get all conversations\n  app.get(\"/api/conversations\", async (req, res) => {\n    try {\n      const conversations = await storage.getConversations();\n      res.json(conversations);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch conversations\" });\n    }\n  });\n\n  // Create a new conversation\n  app.post(\"/api/conversations\", async (req, res) => {\n    try {\n      const validatedData = insertConversationSchema.parse(req.body);\n      const conversation = await storage.createConversation(validatedData);\n      res.status(201).json(conversation);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ message: \"Invalid conversation data\", errors: error.errors });\n      } else {\n        res.status(500).json({ message: \"Failed to create conversation\" });\n      }\n    }\n  });\n\n  // Delete a conversation\n  app.delete(\"/api/conversations/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: \"Invalid conversation ID\" });\n      }\n      \n      const conversation = await storage.getConversation(id);\n      if (!conversation) {\n        return res.status(404).json({ message: \"Conversation not found\" });\n      }\n\n      await storage.deleteConversation(id);\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to delete conversation\" });\n    }\n  });\n\n  // Get messages for a conversation\n  app.get(\"/api/conversations/:id/messages\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: \"Invalid conversation ID\" });\n      }\n\n      const conversation = await storage.getConversation(id);\n      if (!conversation) {\n        return res.status(404).json({ message: \"Conversation not found\" });\n      }\n\n      const messages = await storage.getMessages(id);\n      res.json(messages);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch messages\" });\n    }\n  });\n\n  // Create a message in a conversation\n  app.post(\"/api/conversations/:id/messages\", async (req, res) => {\n    try {\n      const conversationId = parseInt(req.params.id);\n      if (isNaN(conversationId)) {\n        return res.status(400).json({ message: \"Invalid conversation ID\" });\n      }\n\n      const conversation = await storage.getConversation(conversationId);\n      if (!conversation) {\n        return res.status(404).json({ message: \"Conversation not found\" });\n      }\n\n      const messageData = { ...req.body, conversationId };\n      const validatedData = insertMessageSchema.parse(messageData);\n      const message = await storage.createMessage(validatedData);\n\n      // Generate AI response for user messages using authentic La Doña data\n      if (validatedData.role === \"user\") {\n        try {\n          // Use authentic business intelligence with real La Doña data\n          const aiResponse = await getBusinessInsights(validatedData.content);\n\n          const assistantMessage = {\n            conversationId,\n            role: \"assistant\",\n            content: aiResponse,\n          };\n          \n          await storage.createMessage(assistantMessage);\n        } catch (error) {\n          console.error(\"AI response error:\", error);\n          const errorMessage = {\n            conversationId,\n            role: \"assistant\",\n            content: \"I'm experiencing technical difficulties connecting to my AI service. Please check your API configuration and try again.\",\n          };\n          await storage.createMessage(errorMessage);\n        }\n      }\n\n      res.status(201).json(message);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ message: \"Invalid message data\", errors: error.errors });\n      } else {\n        res.status(500).json({ message: \"Failed to create message\" });\n      }\n    }\n  });\n\n  // Business Intelligence API routes\n  app.get(\"/api/business-context\", async (req, res) => {\n    try {\n      const context = buildBusinessContext();\n      res.json(context);\n    } catch (error) {\n      console.error(\"Error getting business context:\", error);\n      res.status(500).json({ error: \"Failed to get business context\" });\n    }\n  });\n\n  app.post(\"/api/insights\", async (req, res) => {\n    try {\n      const { question } = req.body;\n      if (!question) {\n        return res.status(400).json({ error: \"Question is required\" });\n      }\n      \n      const insights = await getBusinessInsights(question);\n      res.json({ insights });\n    } catch (error) {\n      console.error(\"Error generating insights:\", error);\n      res.status(500).json({ error: \"Failed to generate insights\" });\n    }\n  });\n\n  app.get(\"/api/daily-briefing\", async (req, res) => {\n    try {\n      const briefing = await generateDailyBriefing();\n      res.json({ briefing });\n    } catch (error) {\n      console.error(\"Error generating daily briefing:\", error);\n      res.status(500).json({ error: \"Failed to generate daily briefing\" });\n    }\n  });\n\n  app.post(\"/api/analyze-region\", async (req, res) => {\n    try {\n      const { regionName } = req.body;\n      if (!regionName) {\n        return res.status(400).json({ error: \"Region name is required\" });\n      }\n      \n      const analysis = await analyzeRegion(regionName);\n      res.json({ analysis });\n    } catch (error) {\n      console.error(\"Error analyzing region:\", error);\n      res.status(500).json({ error: \"Failed to analyze region\" });\n    }\n  });\n\n  app.post(\"/api/analyze-product\", async (req, res) => {\n    try {\n      const { productName } = req.body;\n      if (!productName) {\n        return res.status(400).json({ error: \"Product name is required\" });\n      }\n      \n      const analysis = await analyzeProduct(productName);\n      res.json({ analysis });\n    } catch (error) {\n      console.error(\"Error analyzing product:\", error);\n      res.status(500).json({ error: \"Failed to analyze product\" });\n    }\n  });\n\n  app.post(\"/api/analyze-client\", async (req, res) => {\n    try {\n      const { clientName } = req.body;\n      if (!clientName) {\n        return res.status(400).json({ error: \"Client name is required\" });\n      }\n      \n      const analysis = await analyzeClient(clientName);\n      res.json({ analysis });\n    } catch (error) {\n      console.error(\"Error analyzing client:\", error);\n      res.status(500).json({ error: \"Failed to analyze client\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":7390},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertConversationSchema, insertMessageSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport { getBusinessInsights, generateDailyBriefing, analyzeRegion, analyzeProduct, analyzeClient } from \"./ai-functions\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Get all conversations\n  app.get(\"/api/conversations\", async (req, res) => {\n    try {\n      const conversations = await storage.getConversations();\n      res.json(conversations);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch conversations\" });\n    }\n  });\n\n  // Create a new conversation\n  app.post(\"/api/conversations\", async (req, res) => {\n    try {\n      const validatedData = insertConversationSchema.parse(req.body);\n      const conversation = await storage.createConversation(validatedData);\n      res.status(201).json(conversation);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ message: \"Invalid conversation data\", errors: error.errors });\n      } else {\n        res.status(500).json({ message: \"Failed to create conversation\" });\n      }\n    }\n  });\n\n  // Delete a conversation\n  app.delete(\"/api/conversations/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: \"Invalid conversation ID\" });\n      }\n\n      await storage.deleteConversation(id);\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to delete conversation\" });\n    }\n  });\n\n  // Get messages for a conversation\n  app.get(\"/api/conversations/:id/messages\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      if (isNaN(id)) {\n        return res.status(400).json({ message: \"Invalid conversation ID\" });\n      }\n\n      const messages = await storage.getMessages(id);\n      res.json(messages);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch messages\" });\n    }\n  });\n\n  // Create a message in a conversation\n  app.post(\"/api/conversations/:id/messages\", async (req, res) => {\n    try {\n      const conversationId = parseInt(req.params.id);\n      if (isNaN(conversationId)) {\n        return res.status(400).json({ message: \"Invalid conversation ID\" });\n      }\n\n      const conversation = await storage.getConversation(conversationId);\n      if (!conversation) {\n        return res.status(404).json({ message: \"Conversation not found\" });\n      }\n\n      const messageData = { ...req.body, conversationId };\n      const validatedData = insertMessageSchema.parse(messageData);\n      const message = await storage.createMessage(validatedData);\n\n      // Generate AI response for user messages using authentic La Doña data\n      if (validatedData.role === \"user\") {\n        try {\n          // Extract language preference from request body\n          const language = req.body.language as 'en' | 'es' | undefined;\n          // Use authentic business intelligence with real La Doña data\n          const aiResponse = await getBusinessInsights(validatedData.content, language);\n\n          const assistantMessage = {\n            conversationId,\n            role: \"assistant\",\n            content: aiResponse,\n          };\n          \n          await storage.createMessage(assistantMessage);\n        } catch (error) {\n          console.error(\"AI response error:\", error);\n          const errorMessage = {\n            conversationId,\n            role: \"assistant\",\n            content: \"I'm experiencing technical difficulties. Please try again.\",\n          };\n          await storage.createMessage(errorMessage);\n        }\n      }\n\n      res.status(201).json(message);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ message: \"Invalid message data\", errors: error.errors });\n      } else {\n        res.status(500).json({ message: \"Failed to create message\" });\n      }\n    }\n  });\n\n  // Generate daily briefing\n  app.post(\"/api/daily-briefing\", async (req, res) => {\n    try {\n      const briefing = await generateDailyBriefing();\n      res.json({ briefing });\n    } catch (error) {\n      console.error(\"Error generating daily briefing:\", error);\n      res.status(500).json({ error: \"Failed to generate daily briefing\" });\n    }\n  });\n\n  // Analyze region\n  app.post(\"/api/analyze-region\", async (req, res) => {\n    try {\n      const { regionName } = req.body;\n      if (!regionName) {\n        return res.status(400).json({ error: \"Region name is required\" });\n      }\n      \n      const analysis = await analyzeRegion(regionName);\n      res.json({ analysis });\n    } catch (error) {\n      console.error(\"Error analyzing region:\", error);\n      res.status(500).json({ error: \"Failed to analyze region\" });\n    }\n  });\n\n  // Analyze product\n  app.post(\"/api/analyze-product\", async (req, res) => {\n    try {\n      const { productName } = req.body;\n      if (!productName) {\n        return res.status(400).json({ error: \"Product name is required\" });\n      }\n      \n      const analysis = await analyzeProduct(productName);\n      res.json({ analysis });\n    } catch (error) {\n      console.error(\"Error analyzing product:\", error);\n      res.status(500).json({ error: \"Failed to analyze product\" });\n    }\n  });\n\n  // Analyze client\n  app.post(\"/api/analyze-client\", async (req, res) => {\n    try {\n      const { clientName } = req.body;\n      if (!clientName) {\n        return res.status(400).json({ error: \"Client name is required\" });\n      }\n      \n      const analysis = await analyzeClient(clientName);\n      res.json({ analysis });\n    } catch (error) {\n      console.error(\"Error analyzing client:\", error);\n      res.status(500).json({ error: \"Failed to analyze client\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}","size_bytes":5976},"server/storage.ts":{"content":"import { conversations, messages, type Conversation, type Message, type InsertConversation, type InsertMessage } from \"@shared/schema\";\n\nexport interface IStorage {\n  getConversations(): Promise<Conversation[]>;\n  getConversation(id: number): Promise<Conversation | undefined>;\n  createConversation(conversation: InsertConversation): Promise<Conversation>;\n  deleteConversation(id: number): Promise<void>;\n  getMessages(conversationId: number): Promise<Message[]>;\n  createMessage(message: InsertMessage): Promise<Message>;\n}\n\nexport class MemStorage implements IStorage {\n  private conversations: Map<number, Conversation>;\n  private messages: Map<number, Message>;\n  private conversationIdCounter: number;\n  private messageIdCounter: number;\n\n  constructor() {\n    this.conversations = new Map();\n    this.messages = new Map();\n    this.conversationIdCounter = 1;\n    this.messageIdCounter = 1;\n\n    // Initialize with sample conversations\n    this.initializeDefaultData();\n  }\n\n  private initializeDefaultData() {\n    const now = new Date();\n    \n    const conversation: Conversation = {\n      id: this.conversationIdCounter++,\n      title: \"La Doña Business Chat\",\n      createdAt: now,\n      updatedAt: now,\n    };\n    this.conversations.set(conversation.id, conversation);\n  }\n\n  async getConversations(): Promise<Conversation[]> {\n    return Array.from(this.conversations.values())\n      .sort((a, b) => b.updatedAt.getTime() - a.updatedAt.getTime());\n  }\n\n  async getConversation(id: number): Promise<Conversation | undefined> {\n    return this.conversations.get(id);\n  }\n\n  async createConversation(insertConversation: InsertConversation): Promise<Conversation> {\n    const now = new Date();\n    const conversation: Conversation = {\n      id: this.conversationIdCounter++,\n      ...insertConversation,\n      createdAt: now,\n      updatedAt: now,\n    };\n    this.conversations.set(conversation.id, conversation);\n    return conversation;\n  }\n\n  async deleteConversation(id: number): Promise<void> {\n    this.conversations.delete(id);\n    // Also delete associated messages\n    const messagesToDelete = Array.from(this.messages.values())\n      .filter(msg => msg.conversationId === id);\n    messagesToDelete.forEach(msg => this.messages.delete(msg.id));\n  }\n\n  async getMessages(conversationId: number): Promise<Message[]> {\n    return Array.from(this.messages.values())\n      .filter(msg => msg.conversationId === conversationId)\n      .sort((a, b) => a.createdAt.getTime() - b.createdAt.getTime());\n  }\n\n  async createMessage(insertMessage: InsertMessage): Promise<Message> {\n    const message: Message = {\n      id: this.messageIdCounter++,\n      ...insertMessage,\n      createdAt: new Date(),\n    };\n    this.messages.set(message.id, message);\n\n    // Update conversation's updatedAt timestamp\n    const conversation = this.conversations.get(insertMessage.conversationId);\n    if (conversation) {\n      conversation.updatedAt = new Date();\n      this.conversations.set(conversation.id, conversation);\n    }\n\n    return message;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":3088},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const conversations = pgTable(\"conversations\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\n});\n\nexport const messages = pgTable(\"messages\", {\n  id: serial(\"id\").primaryKey(),\n  conversationId: integer(\"conversation_id\").notNull().references(() => conversations.id),\n  role: text(\"role\").notNull(), // 'user' or 'assistant'\n  content: text(\"content\").notNull(),\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\n});\n\nexport const insertConversationSchema = createInsertSchema(conversations).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertMessageSchema = createInsertSchema(messages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertConversation = z.infer<typeof insertConversationSchema>;\nexport type Conversation = typeof conversations.$inferSelect;\nexport type InsertMessage = z.infer<typeof insertMessageSchema>;\nexport type Message = typeof messages.$inferSelect;\n","size_bytes":1244},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/components/theme-provider\";\nimport { ToastContainer } from \"@/components/Toast\";\nimport Dashboard from \"@/pages/dashboard\";\nimport Login from \"@/pages/login\";\nimport Signup from \"@/pages/signup\";\nimport Onboarding from \"@/pages/onboarding\";\nimport OnboardingDataForm from \"@/pages/OnboardingDataForm\";\nimport TableConfigDemo from \"@/pages/table-config-demo\";\nimport BusinessContextPrompts from \"@/pages/BusinessContextPrompts\";\nimport Chat from \"@/pages/chat-clean-top\";\nimport SmoothChat from \"@/pages/chat-smooth\";\nimport ScenarioSimulator from \"@/pages/scenario-simulator\";\nimport SidebarLayout from \"@/components/sidebar-layout\";\nimport Collaboration from \"@/pages/collaboration\";\nimport NotFound from \"@/pages/not-found\";\nimport ProtectedRoute from \"@/components/protected-route\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Login} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/onboarding\" component={Onboarding} />\n      <Route path=\"/onboarding/data\" component={OnboardingDataForm} />\n      <Route path=\"/onboarding/context\" component={BusinessContextPrompts} />\n      <Route path=\"/table-demo\" component={TableConfigDemo} />\n      <Route path=\"/dashboard\">\n        <ProtectedRoute>\n          <Dashboard />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/collaboration\">\n        <ProtectedRoute>\n          <Collaboration />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/chat-clean-top\">\n        <ProtectedRoute>\n          <Chat />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/sidebar\">\n        <ProtectedRoute>\n          <SidebarLayout />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/smooth\">\n        <ProtectedRoute>\n          <SmoothChat />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/scenario-simulator\">\n        <ProtectedRoute>\n          <ScenarioSimulator />\n        </ProtectedRoute>\n      </Route>\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider defaultTheme=\"light\">\n        <TooltipProvider>\n          <Toaster />\n          <ToastContainer />\n          <Router />\n        </TooltipProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2672},"client/src/index.css":{"content":"/* GPT-like fonts */\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Custom slider styling */\n.slider-thumb {\n  background: linear-gradient(90deg, #475569 0%, #64748b 100%);\n}\n\n.slider-thumb::-webkit-slider-thumb {\n  appearance: none;\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  cursor: pointer;\n  border: 2px solid #1e293b;\n  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);\n}\n\n.slider-thumb::-moz-range-thumb {\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  cursor: pointer;\n  border: 2px solid #1e293b;\n  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);\n}\n\n/* Autofill styling override - remove all backgrounds */\ninput:-webkit-autofill,\ninput:-webkit-autofill:hover,\ninput:-webkit-autofill:focus,\ninput:-webkit-autofill:active {\n  -webkit-box-shadow: none !important;\n  -webkit-text-fill-color: #f3f4f6 !important;\n  background-color: transparent !important;\n  background-image: none !important;\n  background: transparent !important;\n  transition: background-color 5000s ease-in-out 0s;\n}\n\n/* Enterprise grain animation */\n@keyframes grain {\n  0%, 100% { transform: translate(0, 0) }\n  10% { transform: translate(-5%, -10%) }\n  20% { transform: translate(-15%, 5%) }\n  30% { transform: translate(7%, -25%) }\n  40% { transform: translate(-5%, 25%) }\n  50% { transform: translate(-15%, 10%) }\n  60% { transform: translate(15%, 0%) }\n  70% { transform: translate(0%, 15%) }\n  80% { transform: translate(3%, 35%) }\n  90% { transform: translate(-10%, 10%) }\n}\n\n:root {\n  --background: 0 0% 100%;\n  --foreground: 220 13% 18%; /* #2D3748 - Gray-800 instead of pure black */\n  --muted: 60 4.8% 95.9%;\n  --muted-foreground: 25 5.3% 44.7%;\n  --popover: 0 0% 100%;\n  --popover-foreground: 220 13% 18%;\n  --card: 0 0% 100%;\n  --card-foreground: 220 13% 18%;\n  --border: 20 5.9% 90%;\n  --input: 20 5.9% 90%;\n  --primary: 120 100% 20%; /* La Doña Green #006400 */\n  --primary-foreground: 0 0% 98%;\n  --secondary: 60 4.8% 95.9%;\n  --secondary-foreground: 24 9.8% 10%;\n  --accent: 51 100% 50%; /* La Doña Gold #FFD700 */\n  --accent-foreground: 220 13% 18%;\n  --destructive: 0 84.2% 60.2%;\n  --destructive-foreground: 60 9.1% 97.8%;\n  --ring: 120 100% 20%;\n  --radius: 0.5rem;\n  \n  /* La Doña Enterprise Colors */\n  --la-dona-green: 120 100% 20%; /* #006400 */\n  --la-dona-gold: 51 100% 50%; /* #FFD700 */\n  --neutral-bg: 60 14% 97%; /* #F9F9F6 */\n  --light-red: 0 100% 95%; /* #FFECEC */\n  --info-blue: 199 100% 94%; /* #E0F2FE */\n  --warning-yellow: 54 100% 91%; /* #FFF9C4 */\n  --text-gray: 220 13% 18%; /* Gray-800 #2D3748 */\n}\n\n/* Enhanced Micro-Interactions & Animations */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(15px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-25px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideInRight {\n  from {\n    opacity: 0;\n    transform: translateX(25px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n/* Vortex icon animation */\n@keyframes vortex-slow-rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.vortex-icon {\n  position: relative;\n  width: var(--vortex-size, 48px);\n  height: var(--vortex-size, 48px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.vortex-blade {\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(90deg, transparent 0%, #64748b 50%, transparent 100%);\n  transform-origin: center;\n}\n\n.vortex-blade:nth-child(1) { transform: rotate(0deg); }\n.vortex-blade:nth-child(2) { transform: rotate(36deg); }\n.vortex-blade:nth-child(3) { transform: rotate(72deg); }\n.vortex-blade:nth-child(4) { transform: rotate(108deg); }\n.vortex-blade:nth-child(5) { transform: rotate(144deg); }\n\n@keyframes scaleIn {\n  from {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes bounceIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.3);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.05);\n  }\n  70% {\n    transform: scale(0.9);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }\n  20%, 40%, 60%, 80% { transform: translateX(2px); }\n}\n\n@keyframes glow {\n  0%, 100% {\n    box-shadow: 0 0 5px rgba(59, 130, 246, 0.5);\n  }\n  50% {\n    box-shadow: 0 0 20px rgba(59, 130, 246, 0.8);\n  }\n}\n\n@keyframes ripple {\n  0% {\n    transform: scale(0);\n    opacity: 1;\n  }\n  100% {\n    transform: scale(4);\n    opacity: 0;\n  }\n}\n\n@keyframes shimmer {\n  0% {\n    background-position: -200px 0;\n  }\n  100% {\n    background-position: calc(200px + 100%) 0;\n  }\n}\n\n@keyframes pulse-success {\n  0%, 100% {\n    border-color: rgb(34, 197, 94);\n    box-shadow: 0 0 0 0 rgba(34, 197, 94, 0.4);\n  }\n  50% {\n    border-color: rgb(34, 197, 94);\n    box-shadow: 0 0 0 6px rgba(34, 197, 94, 0);\n  }\n}\n\n@keyframes typewriter {\n  from { width: 0; }\n  to { width: 100%; }\n}\n\n/* Animation Classes */\n.animate-fadeInUp {\n  animation: fadeInUp 0.4s ease-out forwards;\n}\n\n.animate-slideInLeft {\n  animation: slideInLeft 0.3s ease-out forwards;\n}\n\n.animate-slideInRight {\n  animation: slideInRight 0.3s ease-out forwards;\n}\n\n.animate-scaleIn {\n  animation: scaleIn 0.2s ease-out forwards;\n}\n\n.animate-bounceIn {\n  animation: bounceIn 0.6s ease-out forwards;\n}\n\n.animate-shake {\n  animation: shake 0.5s ease-in-out;\n}\n\n.animate-glow {\n  animation: glow 2s ease-in-out infinite;\n}\n\n.animate-pulse-success {\n  animation: pulse-success 1s ease-in-out;\n}\n\n/* Interactive Elements */\n.interactive-hover {\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.interactive-hover:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.button-press {\n  transition: all 0.1s ease;\n}\n\n.button-press:active {\n  transform: scale(0.98);\n}\n\n.ripple-effect {\n  position: relative;\n  overflow: hidden;\n}\n\n.ripple-effect::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.5);\n  transform: translate(-50%, -50%);\n  transition: width 0.6s, height 0.6s;\n}\n\n.ripple-effect:active::before {\n  width: 300px;\n  height: 300px;\n}\n\n.shimmer-loading {\n  background: linear-gradient(90deg, transparent 25%, rgba(255, 255, 255, 0.3) 50%, transparent 75%);\n  background-size: 200px 100%;\n  animation: shimmer 1.5s infinite;\n}\n\n/* Micro-interaction feedback */\n.feedback-success {\n  animation: pulse-success 0.3s ease-out;\n}\n\n.feedback-error {\n  animation: shake 0.3s ease-out;\n}\n\n/* Smooth scroll behavior */\n.smooth-scroll {\n  scroll-behavior: smooth;\n}\n\n/* Enhanced typing indicator */\n.typing-cursor {\n  display: inline-block;\n  width: 2px;\n  height: 1.2em;\n  background-color: currentColor;\n  animation: pulse 1s infinite;\n}\n\n/* Professional Report-Style Chat Interface */\nbody {\n  font-family: 'Segoe UI', sans-serif;\n  font-size: 15px;\n  background: #fafafa;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\n#chatbox {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n  scroll-behavior: smooth;\n}\n\n.message {\n  max-width: 80%;\n  padding: 12px 16px;\n  border-radius: 14px;\n  margin: 14px 0;\n  white-space: pre-wrap;\n  line-height: 1.65;\n  font-size: 15px;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.03);\n  word-wrap: break-word;\n  animation: fadeIn 0.3s ease;\n  transition: margin 0.2s ease;\n}\n\n/* Advanced conversation flow spacing */\n.message + .message.user {\n  margin-top: 10px;\n}\n\n.message + .message.bot {\n  margin-top: 20px; /* extra spacing when author changes */\n}\n\n.user {\n  align-self: flex-end;\n  background: #eef1f4;\n  color: #111;\n  border-bottom-right-radius: 4px;\n}\n\n.bot {\n  align-self: flex-start;\n  background: #ffffff;\n  color: #222;\n}\n\n/* Text content in bot replies */\n.message.bot h3 {\n  font-size: 16px;\n  margin: 24px 0 8px;\n  font-weight: 600;\n  color: #111;\n}\n\n.message.bot p, .message.bot li {\n  line-height: 1.6;\n  margin: 4px 0;\n}\n\n.message.bot ul {\n  padding-left: 20px;\n  margin: 10px 0 20px;\n}\n\n.message.bot strong {\n  font-weight: 600;\n  color: #111;\n}\n\n/* Table styling */\n.message.bot table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  margin: 18px 0;\n  font-size: 14px;\n  border: 1px solid #ddd;\n}\n\n.message.bot th, .message.bot td {\n  padding: 10px 12px;\n  border-bottom: 1px solid #eee;\n  text-align: left;\n}\n\n.message.bot th {\n  background-color: #f4f4f4;\n  font-weight: 600;\n}\n\n/* Animation */\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(6px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n/* Enhanced GPT-like Message Styling */\n.message-content {\n  font-family: 'Söhne', 'Inter', system-ui, -apple-system, sans-serif;\n  font-size: 15px;\n  line-height: 1.65;\n  color: #374151;\n  word-wrap: break-word;\n}\n\n.message-content p {\n  margin: 0 0 12px 0;\n}\n\n.message-content p:last-child {\n  margin-bottom: 0;\n}\n\n/* Section headers styling */\n.message-content strong {\n  font-weight: 600;\n  color: #1f2937;\n  display: block;\n  margin: 16px 0 8px 0;\n  font-size: 15px;\n}\n\n.message-content strong:first-child {\n  margin-top: 0;\n}\n\n/* Key point highlighting with bold and color */\n.key-point {\n  font-weight: 700;\n  color: #dc2626;\n  background: linear-gradient(rgba(220, 38, 38, 0.08), rgba(220, 38, 38, 0.08));\n  padding: 1px 3px;\n  border-radius: 3px;\n}\n\n/* Metric highlighting */\n.metric-highlight {\n  font-weight: 600;\n  color: #dc2626;\n}\n\n/* Performance indicator styling */\n.performance-negative {\n  color: #dc2626;\n  background: linear-gradient(rgba(220, 38, 38, 0.1), rgba(220, 38, 38, 0.1));\n  padding: 1px 4px;\n  border-radius: 3px;\n  font-weight: 500;\n}\n\n.performance-positive {\n  color: #059669;\n  background: linear-gradient(rgba(5, 150, 105, 0.1), rgba(5, 150, 105, 0.1));\n  padding: 1px 4px;\n  border-radius: 3px;\n  font-weight: 500;\n}\n\n/* Chat message container */\n.chat-message {\n  max-width: 80%;\n  padding: 16px 20px;\n  border-radius: 16px;\n  margin: 10px 0;\n  white-space: pre-wrap;\n  line-height: 1.65;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n  font-size: 15px;\n  word-wrap: break-word;\n  animation: fadeIn 0.3s ease-out;\n  font-family: 'Söhne', 'Inter', system-ui, -apple-system, sans-serif;\n}\n\n.chat-message.user {\n  align-self: flex-end;\n  background: #e9ecf1;\n  color: #111;\n  border-bottom-right-radius: 4px;\n}\n\n.chat-message.bot {\n  align-self: flex-start;\n  background: #f6f6f6;\n  color: #222;\n  border-left: 4px solid #e23d28; /* La Doña red branding stripe */\n}\n\n/* Table styling for business data */\n.chat-message table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n  font-size: 14px;\n}\n\n.chat-message table th, \n.chat-message table td {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n}\n\n.chat-message table th {\n  background: #f8f8f8;\n  font-weight: 600;\n}\n\n/* Code blocks for technical content */\n.chat-message code, \n.chat-message pre {\n  font-family: monospace;\n  background: #f1f1f1;\n  padding: 10px;\n  border-radius: 8px;\n  display: block;\n  margin-top: 10px;\n  font-size: 14px;\n  white-space: pre-wrap;\n  overflow-x: auto;\n}\n\n.dark {\n  --background: 240 10% 3.9%;\n  --foreground: 0 0% 98%;\n  --muted: 240 3.7% 15.9%;\n  --muted-foreground: 240 5% 64.9%;\n  --popover: 240 10% 3.9%;\n  --popover-foreground: 0 0% 98%;\n  --card: 240 10% 3.9%;\n  --card-foreground: 0 0% 98%;\n  --border: 240 3.7% 15.9%;\n  --input: 240 3.7% 15.9%;\n  --primary: 161 94% 30%; /* ChatGPT Green */\n  --primary-foreground: 0 0% 98%;\n  --secondary: 240 3.7% 15.9%;\n  --secondary-foreground: 0 0% 98%;\n  --accent: 240 3.7% 15.9%;\n  --accent-foreground: 0 0% 98%;\n  --destructive: 0 62.8% 30.6%;\n  --destructive-foreground: 0 0% 98%;\n  --ring: 240 4.9% 83.9%;\n  --radius: 0.5rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased;\n    font-family: 'Söhne', 'Inter', system-ui, -apple-system, sans-serif;\n    background-color: #F9F9F6;\n    color: #2D3748; /* Gray-800 instead of pure black */\n  }\n\n  /* Custom scrollbar styling */\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background: hsl(var(--muted-foreground) / 0.3);\n    border-radius: 3px;\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: hsl(var(--muted-foreground) / 0.5);\n  }\n}\n\n@layer components {\n  /* La Doña Enterprise Typography */\n  .heading-primary {\n    @apply font-semibold text-lg text-gray-800; /* 18px */\n  }\n  \n  .heading-secondary {\n    @apply font-semibold text-xl text-gray-800; /* 20px */\n  }\n  \n  .heading-large {\n    @apply font-semibold text-2xl text-gray-800; /* 24px */\n  }\n  \n  .text-body {\n    @apply text-gray-800 leading-relaxed;\n  }\n\n  /* La Doña Color Classes */\n  .bg-la-dona-green {\n    background-color: #006400;\n  }\n  \n  .text-la-dona-green {\n    color: #006400;\n  }\n  \n  .bg-la-dona-gold {\n    background-color: #FFD700;\n  }\n  \n  .text-la-dona-gold {\n    color: #FFD700;\n  }\n  \n  .bg-light-red {\n    background-color: #FFECEC;\n  }\n  \n  .bg-info-blue {\n    background-color: #E0F2FE;\n  }\n  \n  .bg-warning-yellow {\n    background-color: #FFF9C4;\n  }\n\n  /* Enterprise Shadow Standards */\n  .shadow-enterprise {\n    @apply shadow-sm;\n  }\n  \n  .shadow-enterprise-md {\n    @apply shadow-md;\n  }\n\n  /* Conversation item active state */\n  .conversation-item.active {\n    @apply bg-white;\n  }\n\n  /* Message content styling */\n  .message-content {\n    @apply text-sm leading-relaxed text-body;\n  }\n\n  .message-content p {\n    @apply mb-4 last:mb-0;\n  }\n\n  .message-content ul {\n    @apply list-disc list-inside mb-4 space-y-1;\n  }\n\n  .message-content ol {\n    @apply list-decimal list-inside mb-4 space-y-1;\n  }\n\n  .message-content code {\n    @apply bg-gray-100 px-1 py-0.5 rounded text-sm font-mono;\n  }\n\n  .message-content strong {\n    @apply font-semibold;\n  }\n\n  /* Smooth transitions */\n  .transition-smooth {\n    transition-property: background-color, border-color, color, transform, opacity;\n    transition-duration: 200ms;\n    transition-timing-function: ease-in-out;\n  }\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n/* La Doña Vortex Icon */\n.vortex-icon {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  filter: drop-shadow(0 0 12px rgba(96, 165, 250, 0.4));\n}\n\n.vortex-blade {\n  position: absolute;\n  width: calc(var(--vortex-size, 48px) * 0.175); /* 8.5px for 48px base */\n  height: calc(var(--vortex-size, 48px) * 0.375); /* 18px for 48px base */\n  background: #60A5FA;\n  border-radius: 85% 15% 85% 15%;\n  transform-origin: calc(var(--vortex-size, 48px) * 0.0875) calc(var(--vortex-size, 48px) * 0.458);\n  top: 50%;\n  left: 50%;\n  margin-left: calc(var(--vortex-size, 48px) * -0.0875);\n  margin-top: calc(var(--vortex-size, 48px) * -0.458);\n}\n\n.vortex-blade:nth-child(1) { \n  transform: rotate(0deg);\n}\n.vortex-blade:nth-child(2) { \n  transform: rotate(72deg);\n}\n.vortex-blade:nth-child(3) { \n  transform: rotate(144deg);\n}\n.vortex-blade:nth-child(4) { \n  transform: rotate(216deg);\n}\n.vortex-blade:nth-child(5) { \n  transform: rotate(288deg);\n}\n\n/* Static state - no animation */\n.vortex-icon {\n  transition: all 0.3s ease-out;\n}\n\n.vortex-icon.active {\n  animation: vortex-thinking 1.4s ease-in-out infinite;\n}\n\n@keyframes vortex-gentle-pulse {\n  0%, 100% { \n    transform: scale(1) rotate(0deg); \n    filter: drop-shadow(0 0 8px rgba(96, 165, 250, 0.4));\n  }\n  50% { \n    transform: scale(1.05) rotate(30deg); \n    filter: drop-shadow(0 0 12px rgba(96, 165, 250, 0.6));\n  }\n}\n\n@keyframes vortex-thinking {\n  0% { \n    transform: scale(1) rotate(0deg); \n    filter: drop-shadow(0 0 8px rgba(96, 165, 250, 0.5)) drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n  }\n  25% { \n    transform: scale(1.08) rotate(90deg); \n    filter: drop-shadow(0 0 16px rgba(96, 165, 250, 0.8)) drop-shadow(0 3px 6px rgba(0, 0, 0, 0.15));\n  }\n  50% { \n    transform: scale(1) rotate(180deg); \n    filter: drop-shadow(0 0 12px rgba(96, 165, 250, 0.6)) drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n  }\n  75% { \n    transform: scale(1.08) rotate(270deg); \n    filter: drop-shadow(0 0 16px rgba(96, 165, 250, 0.8)) drop-shadow(0 3px 6px rgba(0, 0, 0, 0.15));\n  }\n  100% { \n    transform: scale(1) rotate(360deg); \n    filter: drop-shadow(0 0 8px rgba(96, 165, 250, 0.5)) drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n  }\n}\n\n@keyframes vortex-spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n@keyframes vortex-slow-rotate {\n  from { \n    transform: rotate(0deg); \n  }\n  to { \n    transform: rotate(360deg); \n  }\n}\n\n@keyframes chatDrop {\n  from { \n    opacity: 0; \n    transform: translateY(4px); \n  }\n  to { \n    opacity: 1; \n    transform: translateY(0); \n  }\n}\n\n@keyframes progressGrow {\n  0% {\n    width: 0%;\n  }\n}\n\n@keyframes slideUp {\n  0% {\n    opacity: 0;\n    transform: scaleY(0.8) translateY(10px);\n  }\n  100% {\n    opacity: 1;\n    transform: scaleY(1) translateY(0);\n  }\n}\n\n.pulse-glow {\n  filter: drop-shadow(0 0 8px rgba(215, 25, 32, 0.6));\n  animation: pulse-glow 2s ease-in-out infinite;\n}\n\n@keyframes pulse-glow {\n  0%, 100% {\n    filter: drop-shadow(0 0 8px rgba(215, 25, 32, 0.6));\n  }\n  50% {\n    filter: drop-shadow(0 0 12px rgba(215, 25, 32, 0.8));\n  }\n}\n\n.slow-spin {\n  animation: slow-spin 8s linear infinite;\n}\n\n@keyframes slow-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/* Login Button Micro-interactions */\n@keyframes subtleShake {\n  0%, 100% { transform: translateX(0); }\n  20%, 60% { transform: translateX(-2px); }\n  40%, 80% { transform: translateX(2px); }\n}\n\n@keyframes dotPulse {\n  0%, 80%, 100% { \n    opacity: 0.3; \n    transform: scale(0.95); \n  }\n  40% { \n    opacity: 1; \n    transform: scale(1); \n  }\n}\n\n.login-loading-dot {\n  background: white;\n  border-radius: 50%;\n  width: 6px;\n  height: 6px;\n  margin: 0 2px;\n  animation: dotPulse 1.4s infinite ease-in-out;\n}\n\n.login-loading-dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.login-loading-dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n.fade-out-login {\n  opacity: 0;\n  transform: translateY(-10px) scale(1.02);\n  filter: blur(1px);\n  transition: all 0.5s ease-in-out;\n}\n\n.invalid-login {\n  animation: subtleShake 0.4s ease;\n}\n\n/* Enhanced Card Aesthetics */\n.elevated-card {\n  transition: all 0.25s ease-in-out;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n}\n\n.elevated-card:hover {\n  transform: scale(1.015);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.07);\n}\n\n/* Gradient Status Badges */\n.status-at-risk {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.1), rgba(255, 0, 0, 0.05));\n}\n\n.status-needs-attention {\n  background: linear-gradient(to right, rgba(255, 193, 7, 0.1), rgba(255, 193, 7, 0.05));\n}\n\n.status-on-track {\n  background: linear-gradient(to right, rgba(40, 167, 69, 0.1), rgba(40, 167, 69, 0.05));\n}\n\n/* Icon Hover Effects */\n.interactive-icon {\n  transition: all 0.2s ease-in-out;\n}\n\n.interactive-icon:hover {\n  stroke-width: 2.5;\n  transform: rotate(2deg);\n}\n\n/* Vorta Response Animation */\n.vorta-responding {\n  animation: spin 1.2s ease-in-out infinite;\n}\n\n/* Invisible Intelligence - Clickable Area Hover Effects */\n.intelligence-clickable {\n  transition: background-color 0.2s ease, transform 0.1s ease;\n  border-radius: 6px;\n  cursor: pointer;\n}\n\n.intelligence-clickable:hover {\n  background-color: rgba(0, 128, 0, 0.04);\n  transform: scale(1.002);\n}\n\n.intelligence-clickable:active {\n  transform: scale(0.998);\n}\n\n/* Chat Message Animations */\n@keyframes messageAppear {\n  0% {\n    opacity: 0;\n    transform: translateY(10px) scale(1.05);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes fadeInUp {\n  0% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeInSlide {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Typing indicator animation */\n.typing-indicator {\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  padding: 8px 12px;\n  background: #f5f5f5;\n  border-radius: 12px;\n  width: fit-content;\n}\n\n.typing-indicator span {\n  display: inline-block;\n  width: 8px;\n  height: 8px;\n  background-color: #ccc;\n  border-radius: 50%;\n  animation: blink 1.4s infinite ease-in-out;\n}\n\n.typing-indicator span:nth-child(2) {\n  animation-delay: 0.2s;\n}\n\n.typing-indicator span:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes blink {\n  0%, 80%, 100% { \n    transform: scale(0.8);\n    opacity: 0.3;\n  }\n  40% { \n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n","size_bytes":21009},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ContextPanel.tsx":{"content":"import { motion, AnimatePresence } from 'framer-motion';\nimport { useState, useEffect } from 'react';\nimport { X, ExternalLink, Calendar, UserPlus, Play } from 'lucide-react';\nimport { EntityData, getEntityById } from '@/data/entities';\n\ninterface ContextPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n  entityId: string | null;\n  activeTab?: string;\n}\n\nconst Sparkline = ({ data }: { data: number[] }) => {\n  const max = Math.max(...data);\n  const min = Math.min(...data);\n  const range = max - min;\n  \n  const points = data.map((value, index) => {\n    const x = (index / (data.length - 1)) * 100;\n    const y = 100 - ((value - min) / range) * 100;\n    return `${x},${y}`;\n  }).join(' ');\n\n  return (\n    <div className=\"w-full h-12 bg-slate-800/50 rounded-lg p-2\">\n      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n        <polyline\n          points={points}\n          fill=\"none\"\n          stroke=\"#4DA3FF\"\n          strokeWidth=\"2\"\n          vectorEffect=\"non-scaling-stroke\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default function ContextPanel({ isOpen, onClose, entityId, activeTab = 'overview' }: ContextPanelProps) {\n  const [currentTab, setCurrentTab] = useState(activeTab);\n  const [entity, setEntity] = useState<EntityData | null>(null);\n\n  useEffect(() => {\n    if (entityId) {\n      const entityData = getEntityById(entityId);\n      setEntity(entityData || null);\n    }\n  }, [entityId]);\n\n  useEffect(() => {\n    setCurrentTab(activeTab);\n  }, [activeTab]);\n\n  const handleAction = (action: string, payload?: any) => {\n    window.dispatchEvent(new CustomEvent(action, { detail: payload }));\n    \n    // Show toast feedback\n    const toastEvent = new CustomEvent('show-toast', {\n      detail: { \n        message: action === 'create-task' ? 'Task created' : \n                action === 'assign-user' ? 'Assigned to team member' :\n                action === 'add-calendar' ? 'Added to calendar' : 'Action completed',\n        type: 'success'\n      }\n    });\n    window.dispatchEvent(toastEvent);\n  };\n\n  const navigateToVisualLab = () => {\n    if (entity) {\n      const query = `entity=${entity.type}&id=${entity.id}`;\n      window.dispatchEvent(new CustomEvent('navigate-visual-lab', { detail: { query } }));\n      // For now, we'll just show a toast since we don't have the visual lab page\n      handleAction('navigate-visual-lab', { query });\n    }\n  };\n\n  const runScenario = () => {\n    if (entity) {\n      window.dispatchEvent(new CustomEvent('simulate', {\n        detail: { entity: entity.type, id: entity.id, delta: +10 }\n      }));\n      handleAction('run-scenario', { entity: entity.type, id: entity.id });\n    }\n  };\n\n  // Trap focus and handle escape\n  useEffect(() => {\n    if (isOpen) {\n      const handleEscape = (e: KeyboardEvent) => {\n        if (e.key === 'Escape') onClose();\n      };\n      document.addEventListener('keydown', handleEscape);\n      return () => document.removeEventListener('keydown', handleEscape);\n    }\n  }, [isOpen, onClose]);\n\n  if (!entity) return null;\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <>\n          {/* Backdrop */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.2 }}\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40\"\n            onClick={onClose}\n          />\n          \n          {/* Panel */}\n          <motion.div\n            initial={{ x: '100%' }}\n            animate={{ x: 0 }}\n            exit={{ x: '100%' }}\n            transition={{ \n              duration: 0.22, \n              ease: [0.2, 0.8, 0.2, 1] \n            }}\n            className=\"fixed right-0 top-0 h-full w-[480px] max-w-[90vw] bg-slate-900/95 backdrop-blur-lg border-l border-white/10 z-50 flex flex-col shadow-2xl\"\n          >\n            {/* Header */}\n            <div className=\"p-6 border-b border-white/10\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div>\n                  <h2 className=\"text-xl font-semibold text-white tracking-wide\">\n                    {entity.title}\n                  </h2>\n                  <p className=\"text-sm text-blue-300 uppercase tracking-wider font-medium\">\n                    {entity.type}\n                  </p>\n                </div>\n                <button\n                  onClick={onClose}\n                  className=\"w-8 h-8 rounded-lg bg-slate-700/50 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\"\n                >\n                  <X className=\"w-4 h-4 text-slate-400\" />\n                </button>\n              </div>\n              \n              {/* Tabs */}\n              <div className=\"flex space-x-1\">\n                {['overview', 'chart', 'report', 'actions'].map((tab) => (\n                  <button\n                    key={tab}\n                    onClick={() => setCurrentTab(tab)}\n                    className={`px-4 py-2 text-sm font-medium rounded-lg transition-all duration-200 ${\n                      currentTab === tab\n                        ? 'bg-blue-500/20 text-blue-300 border border-blue-500/30'\n                        : 'text-slate-400 hover:text-slate-300 hover:bg-slate-700/30'\n                    }`}\n                  >\n                    {tab.charAt(0).toUpperCase() + tab.slice(1)}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Content */}\n            <div className=\"flex-1 p-6 overflow-y-auto\">\n              {currentTab === 'overview' && (\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-slate-300 mb-2 tracking-wide\">Description</h3>\n                    <p className=\"text-slate-400 leading-relaxed\">{entity.description}</p>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"text-sm font-medium text-slate-300 mb-3 tracking-wide\">Current Value</h3>\n                    <div className=\"text-2xl font-semibold text-white\">{entity.value}</div>\n                  </div>\n                  \n                  {entity.trend && (\n                    <div>\n                      <h3 className=\"text-sm font-medium text-slate-300 mb-3 tracking-wide\">7-Day Trend</h3>\n                      <Sparkline data={entity.trend} />\n                    </div>\n                  )}\n                  \n                  <div>\n                    <h3 className=\"text-sm font-medium text-slate-300 mb-2 tracking-wide\">Last Updated</h3>\n                    <p className=\"text-slate-400\">\n                      {new Date(entity.lastUpdated).toLocaleString()}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {currentTab === 'chart' && (\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-medium text-white tracking-wide\">Interactive Chart</h3>\n                  <div className=\"h-64 bg-slate-800/50 rounded-lg border border-white/10 flex items-center justify-center\">\n                    <div className=\"text-center\">\n                      <div className=\"w-16 h-16 bg-blue-500/20 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                        <svg className=\"w-8 h-8 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                      </div>\n                      <p className=\"text-slate-400\">Interactive chart visualization</p>\n                      <p className=\"text-sm text-slate-500\">Chart component integration pending</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {currentTab === 'report' && (\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-medium text-white tracking-wide\">Detailed Report</h3>\n                  <div className=\"h-96 bg-slate-800/50 rounded-lg border border-white/10 p-4\">\n                    <div className=\"h-full overflow-y-auto\">\n                      <h4 className=\"font-medium text-blue-300 mb-3\">{entity.title} Analysis</h4>\n                      <div className=\"space-y-3 text-sm text-slate-400\">\n                        <p>Current performance indicates {entity.value} with trend analysis showing mixed signals across the evaluation period.</p>\n                        <p>Key factors contributing to current status include market conditions, operational efficiency, and strategic initiatives implemented in Q2.</p>\n                        <p>Recommendations for optimization include enhanced monitoring protocols and targeted improvement measures.</p>\n                        <div className=\"mt-4 p-3 bg-blue-500/10 rounded-lg border border-blue-500/20\">\n                          <p className=\"text-blue-300 font-medium\">Report Integration</p>\n                          <p className=\"text-xs text-blue-400 mt-1\">Full report viewer integration pending</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {currentTab === 'actions' && (\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-medium text-white tracking-wide\">Quick Actions</h3>\n                  \n                  <div className=\"space-y-3\">\n                    <button\n                      onClick={() => handleAction('create-task', { title: `Review ${entity.title}`, entity: entity.id })}\n                      className=\"w-full p-3 bg-slate-700/50 hover:bg-slate-600/50 rounded-lg border border-white/10 flex items-center space-x-3 transition-all duration-200 hover:scale-[1.02] group\"\n                    >\n                      <div className=\"w-8 h-8 bg-blue-500/20 rounded-lg flex items-center justify-center group-hover:bg-blue-500/30 transition-colors\">\n                        <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                        </svg>\n                      </div>\n                      <span className=\"text-slate-300 font-medium\">Create Task</span>\n                    </button>\n\n                    <button\n                      onClick={() => handleAction('assign-user', { entity: entity.id })}\n                      className=\"w-full p-3 bg-slate-700/50 hover:bg-slate-600/50 rounded-lg border border-white/10 flex items-center space-x-3 transition-all duration-200 hover:scale-[1.02] group\"\n                    >\n                      <div className=\"w-8 h-8 bg-green-500/20 rounded-lg flex items-center justify-center group-hover:bg-green-500/30 transition-colors\">\n                        <UserPlus className=\"w-4 h-4 text-green-400\" />\n                      </div>\n                      <span className=\"text-slate-300 font-medium\">Assign To...</span>\n                    </button>\n\n                    <button\n                      onClick={() => handleAction('add-calendar', { entity: entity.id })}\n                      className=\"w-full p-3 bg-slate-700/50 hover:bg-slate-600/50 rounded-lg border border-white/10 flex items-center space-x-3 transition-all duration-200 hover:scale-[1.02] group\"\n                    >\n                      <div className=\"w-8 h-8 bg-purple-500/20 rounded-lg flex items-center justify-center group-hover:bg-purple-500/30 transition-colors\">\n                        <Calendar className=\"w-4 h-4 text-purple-400\" />\n                      </div>\n                      <span className=\"text-slate-300 font-medium\">Add to Calendar</span>\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Footer */}\n            <div className=\"p-6 border-t border-white/10 space-y-3\">\n              <button\n                onClick={navigateToVisualLab}\n                className=\"w-full p-3 bg-blue-500/20 hover:bg-blue-500/30 rounded-lg border border-blue-500/30 flex items-center justify-center space-x-2 transition-all duration-200 hover:scale-[1.02] hover:shadow-lg hover:shadow-blue-500/20 group\"\n              >\n                <ExternalLink className=\"w-4 h-4 text-blue-300\" />\n                <span className=\"text-blue-300 font-medium\">Open in Visual Lab</span>\n              </button>\n              \n              <button\n                onClick={runScenario}\n                className=\"w-full p-3 bg-amber-500/20 hover:bg-amber-500/30 rounded-lg border border-amber-500/30 flex items-center justify-center space-x-2 transition-all duration-200 hover:scale-[1.02] hover:shadow-lg hover:shadow-amber-500/20 group\"\n              >\n                <Play className=\"w-4 h-4 text-amber-300\" />\n                <span className=\"text-amber-300 font-medium\">Run Scenario</span>\n              </button>\n            </div>\n          </motion.div>\n        </>\n      )}\n    </AnimatePresence>\n  );\n}","size_bytes":13446},"client/src/components/KPIDrawer.tsx":{"content":"import { motion, AnimatePresence } from 'framer-motion';\nimport { X, ExternalLink, TrendingUp, TrendingDown } from 'lucide-react';\n\ninterface KPIDrawerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  kpiId: string;\n}\n\nconst kpiData = {\n  'performance-score': {\n    name: 'Performance Score',\n    definition: 'Composite metric combining sales velocity, inventory turnover, and customer satisfaction across all regional operations.',\n    currentValue: 68,\n    unit: '/100',\n    trend: -8,\n    sparkline: [75, 73, 71, 69, 68, 67, 65, 68],\n    historicalData: [82, 78, 75, 72, 70, 68],\n    benchmark: 75,\n    status: 'needs-attention'\n  },\n  'inventory-turnover': {\n    name: 'Inventory Turnover',\n    definition: 'Rate at which inventory is sold and replaced over a specific period, indicating efficiency of inventory management.',\n    currentValue: 4.2,\n    unit: 'x/month',\n    trend: 5,\n    sparkline: [3.8, 3.9, 4.1, 4.0, 4.2, 4.3, 4.1, 4.2],\n    historicalData: [3.6, 3.8, 3.9, 4.0, 4.1, 4.2],\n    benchmark: 4.5,\n    status: 'good'\n  }\n};\n\nexport default function KPIDrawer({ isOpen, onClose, kpiId }: KPIDrawerProps) {\n  const kpi = kpiData[kpiId as keyof typeof kpiData];\n  \n  if (!kpi) return null;\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'good': return 'text-emerald-400';\n      case 'needs-attention': return 'text-amber-400';\n      case 'critical': return 'text-red-400';\n      default: return 'text-slate-400';\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <>\n          {/* Overlay */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={onClose}\n            className=\"fixed inset-0 bg-black/20 backdrop-blur-sm z-40\"\n          />\n          \n          {/* Drawer */}\n          <motion.div\n            initial={{ x: '100%' }}\n            animate={{ x: 0 }}\n            exit={{ x: '100%' }}\n            transition={{ type: 'spring', damping: 25, stiffness: 300 }}\n            className=\"fixed right-0 top-0 h-full w-[300px] bg-gradient-to-b from-slate-800 to-slate-900 border-l border-slate-700/50 shadow-2xl z-50\"\n            style={{\n              backdropFilter: 'blur(12px)',\n              background: 'linear-gradient(180deg, rgba(30,41,59,0.95) 0%, rgba(15,23,42,0.98) 100%)'\n            }}\n          >\n            {/* Header */}\n            <div className=\"p-4 border-b border-slate-700/30\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"text-lg font-semibold text-white\">{kpi.name}</h3>\n                <button\n                  onClick={onClose}\n                  className=\"w-7 h-7 rounded-lg bg-slate-700/50 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200\"\n                >\n                  <X className=\"w-4 h-4 text-slate-300\" />\n                </button>\n              </div>\n              \n              {/* Current Value */}\n              <div className=\"flex items-center space-x-3 mb-3\">\n                <span className=\"text-2xl font-bold text-white\">{kpi.currentValue}{kpi.unit}</span>\n                <div className={`flex items-center space-x-1 ${kpi.trend >= 0 ? 'text-emerald-400' : 'text-red-400'}`}>\n                  {kpi.trend >= 0 ? <TrendingUp className=\"w-4 h-4\" /> : <TrendingDown className=\"w-4 h-4\" />}\n                  <span className=\"text-sm font-medium\">{Math.abs(kpi.trend)}%</span>\n                </div>\n              </div>\n\n              {/* Status */}\n              <div className={`text-xs font-medium ${getStatusColor(kpi.status)} uppercase tracking-wide`}>\n                {kpi.status.replace('-', ' ')}\n              </div>\n            </div>\n\n            {/* Content */}\n            <div className=\"p-4 space-y-4\">\n              {/* Definition */}\n              <div>\n                <h4 className=\"text-sm font-medium text-slate-300 mb-2\">Definition</h4>\n                <p className=\"text-xs text-slate-400 leading-relaxed\">{kpi.definition}</p>\n              </div>\n\n              {/* Real-time Sparkline */}\n              <div>\n                <h4 className=\"text-sm font-medium text-slate-300 mb-3\">Recent Trend</h4>\n                <div className=\"flex items-end space-x-1 h-12 mb-2\">\n                  {kpi.sparkline.map((value, index) => {\n                    const maxValue = Math.max(...kpi.sparkline);\n                    const height = (value / maxValue) * 100;\n                    return (\n                      <div\n                        key={index}\n                        className={`flex-1 rounded-t transition-all duration-300 ${\n                          kpi.trend >= 0 ? 'bg-emerald-500/40' : 'bg-red-500/40'\n                        }`}\n                        style={{ height: `${height}%` }}\n                      />\n                    );\n                  })}\n                </div>\n                <div className=\"text-xs text-slate-500\">Last 8 periods</div>\n              </div>\n\n              {/* Historical Performance */}\n              <div>\n                <h4 className=\"text-sm font-medium text-slate-300 mb-3\">6-Month History</h4>\n                <div className=\"space-y-2\">\n                  {kpi.historicalData.map((value, index) => (\n                    <div key={index} className=\"flex items-center justify-between text-xs\">\n                      <span className=\"text-slate-400\">Month {6-index}</span>\n                      <span className=\"text-slate-300 font-medium\">{value}{kpi.unit}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Benchmark */}\n              <div className=\"bg-slate-800/40 rounded-lg p-3 border border-slate-700/30\">\n                <div className=\"flex items-center justify-between text-xs\">\n                  <span className=\"text-slate-400\">Target Benchmark</span>\n                  <span className=\"text-blue-300 font-medium\">{kpi.benchmark}{kpi.unit}</span>\n                </div>\n                <div className=\"mt-2 h-1 bg-slate-700 rounded-full overflow-hidden\">\n                  <div \n                    className=\"h-full bg-blue-500 rounded-full transition-all duration-500\"\n                    style={{ width: `${(kpi.currentValue / kpi.benchmark) * 100}%` }}\n                  />\n                </div>\n              </div>\n\n              {/* Action */}\n              <button className=\"w-full bg-blue-500/20 hover:bg-blue-500/30 border border-blue-500/30 rounded-lg p-3 text-blue-300 text-sm font-medium transition-all duration-200 hover:scale-105 flex items-center justify-center space-x-2\">\n                <span>View in Full Dashboard</span>\n                <ExternalLink className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </motion.div>\n        </>\n      )}\n    </AnimatePresence>\n  );\n}","size_bytes":6883},"client/src/components/ReportPanel.tsx":{"content":"import { motion, AnimatePresence } from 'framer-motion';\nimport { X, Download, FileText, TrendingUp, TrendingDown } from 'lucide-react';\n\ninterface ReportPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n  reportId: string;\n}\n\nconst reportData = {\n  'q3-forecast': {\n    title: 'Q3 Performance Forecast',\n    kpiValue: '$2.4M',\n    trend: -12,\n    summary: 'This report highlights a 12% sales drop in Chiriquí due to seasonal shifts and distribution delays. However, recovery is projected for Q4 with the new promotional campaigns and improved logistics routes.',\n    chartData: [85, 78, 82, 75, 68, 71, 74, 69],\n    lastUpdated: '2 hours ago'\n  },\n  'performance-score': {\n    title: 'Regional Performance Analysis',\n    kpiValue: '68/100',\n    trend: -8,\n    summary: 'Regional performance shows concerning trends in key markets. Chiriquí Central requires immediate attention with emergency stock transfers and promotional support to prevent further decline.',\n    chartData: [75, 72, 68, 71, 69, 65, 68, 66],\n    lastUpdated: '45 minutes ago'\n  }\n};\n\nexport default function ReportPanel({ isOpen, onClose, reportId }: ReportPanelProps) {\n  const report = reportData[reportId as keyof typeof reportData];\n  \n  if (!report) return null;\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <>\n          {/* Overlay */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={onClose}\n            className=\"fixed inset-0 bg-black/30 backdrop-blur-sm z-40\"\n          />\n          \n          {/* Panel */}\n          <motion.div\n            initial={{ x: '100%' }}\n            animate={{ x: 0 }}\n            exit={{ x: '100%' }}\n            transition={{ type: 'spring', damping: 25, stiffness: 300 }}\n            className=\"fixed right-0 top-0 h-full w-[40%] bg-gradient-to-b from-slate-800 to-slate-900 border-l border-slate-700/50 shadow-2xl z-50\"\n            style={{\n              backdropFilter: 'blur(12px)',\n              background: 'linear-gradient(180deg, rgba(30,41,59,0.95) 0%, rgba(15,23,42,0.98) 100%)'\n            }}\n          >\n            {/* Header */}\n            <div className=\"p-6 border-b border-slate-700/30\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-xl font-semibold text-white\">{report.title}</h2>\n                <button\n                  onClick={onClose}\n                  className=\"w-8 h-8 rounded-lg bg-slate-700/50 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\"\n                >\n                  <X className=\"w-4 h-4 text-slate-300\" />\n                </button>\n              </div>\n              \n              {/* Export Options */}\n              <div className=\"flex items-center space-x-3\">\n                <button className=\"flex items-center space-x-2 px-3 py-2 bg-blue-500/20 hover:bg-blue-500/30 rounded-lg text-blue-300 text-sm transition-all duration-200\">\n                  <Download className=\"w-4 h-4\" />\n                  <span>PDF</span>\n                </button>\n                <button className=\"flex items-center space-x-2 px-3 py-2 bg-emerald-500/20 hover:bg-emerald-500/30 rounded-lg text-emerald-300 text-sm transition-all duration-200\">\n                  <FileText className=\"w-4 h-4\" />\n                  <span>Excel</span>\n                </button>\n                <span className=\"text-xs text-slate-400 ml-auto\">Updated {report.lastUpdated}</span>\n              </div>\n            </div>\n\n            {/* Content */}\n            <div className=\"p-6 space-y-6\">\n              {/* KPI Snapshot */}\n              <div className=\"bg-slate-800/40 rounded-xl p-4 border border-slate-700/30\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-sm text-slate-400\">Primary Metric</span>\n                  <div className={`flex items-center space-x-1 ${report.trend < 0 ? 'text-red-400' : 'text-emerald-400'}`}>\n                    {report.trend < 0 ? <TrendingDown className=\"w-4 h-4\" /> : <TrendingUp className=\"w-4 h-4\" />}\n                    <span className=\"text-sm font-medium\">{Math.abs(report.trend)}%</span>\n                  </div>\n                </div>\n                <div className=\"text-2xl font-bold text-white mb-3\">{report.kpiValue}</div>\n                \n                {/* Mini Chart */}\n                <div className=\"flex items-end space-x-1 h-16\">\n                  {report.chartData.map((value, index) => (\n                    <div\n                      key={index}\n                      className={`flex-1 rounded-t ${report.trend < 0 ? 'bg-red-500/30' : 'bg-emerald-500/30'}`}\n                      style={{ height: `${(value / Math.max(...report.chartData)) * 100}%` }}\n                    />\n                  ))}\n                </div>\n              </div>\n\n              {/* Executive Summary */}\n              <div className=\"bg-slate-800/40 rounded-xl p-4 border border-slate-700/30\">\n                <h3 className=\"text-sm font-medium text-slate-300 mb-3\">Executive Summary</h3>\n                <p className=\"text-slate-400 leading-relaxed text-sm\">{report.summary}</p>\n              </div>\n\n              {/* Actions */}\n              <div className=\"space-y-3\">\n                <button className=\"w-full bg-blue-500/20 hover:bg-blue-500/30 border border-blue-500/30 rounded-xl p-4 text-blue-300 font-medium transition-all duration-200 hover:scale-105\">\n                  View Full Report in Analytics\n                </button>\n                <button className=\"w-full bg-slate-700/40 hover:bg-slate-600/50 border border-slate-600/30 rounded-xl p-4 text-slate-300 font-medium transition-all duration-200 hover:scale-105\">\n                  Schedule Follow-up Analysis\n                </button>\n              </div>\n            </div>\n          </motion.div>\n        </>\n      )}\n    </AnimatePresence>\n  );\n}","size_bytes":5989},"client/src/components/Toast.tsx":{"content":"import { motion, AnimatePresence } from 'framer-motion';\nimport { useState, useEffect } from 'react';\nimport { CheckCircle, AlertCircle, X } from 'lucide-react';\n\ninterface ToastProps {\n  message: string;\n  type: 'success' | 'error' | 'info';\n  duration?: number;\n  onClose: () => void;\n}\n\nexport function Toast({ message, type, duration = 3000, onClose }: ToastProps) {\n  useEffect(() => {\n    const timer = setTimeout(onClose, duration);\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  const icons = {\n    success: CheckCircle,\n    error: AlertCircle,\n    info: AlertCircle\n  };\n\n  const colors = {\n    success: 'bg-green-500/20 border-green-500/30 text-green-300',\n    error: 'bg-red-500/20 border-red-500/30 text-red-300',\n    info: 'bg-blue-500/20 border-blue-500/30 text-blue-300'\n  };\n\n  const Icon = icons[type];\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 50, scale: 0.9 }}\n      animate={{ opacity: 1, y: 0, scale: 1 }}\n      exit={{ opacity: 0, y: 20, scale: 0.9 }}\n      transition={{ duration: 0.2, ease: [0.2, 0.8, 0.2, 1] }}\n      className={`flex items-center space-x-3 p-4 rounded-lg border backdrop-blur-sm shadow-lg ${colors[type]}`}\n    >\n      <Icon className=\"w-5 h-5 flex-shrink-0\" />\n      <span className=\"text-sm font-medium\">{message}</span>\n      <button\n        onClick={onClose}\n        className=\"ml-auto p-1 hover:bg-white/10 rounded transition-colors\"\n      >\n        <X className=\"w-4 h-4\" />\n      </button>\n    </motion.div>\n  );\n}\n\nexport function ToastContainer() {\n  const [toasts, setToasts] = useState<Array<{\n    id: string;\n    message: string;\n    type: 'success' | 'error' | 'info';\n  }>>([]);\n\n  useEffect(() => {\n    const handleToast = (event: CustomEvent) => {\n      const { message, type } = event.detail;\n      const id = Date.now().toString();\n      \n      setToasts(prev => [...prev, { id, message, type }]);\n    };\n\n    window.addEventListener('show-toast', handleToast as EventListener);\n    return () => window.removeEventListener('show-toast', handleToast as EventListener);\n  }, []);\n\n  const removeToast = (id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-[100] space-y-2\">\n      <AnimatePresence>\n        {toasts.map(toast => (\n          <Toast\n            key={toast.id}\n            message={toast.message}\n            type={toast.type}\n            onClose={() => removeToast(toast.id)}\n          />\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n}","size_bytes":2543},"client/src/components/bi-sidebar.tsx":{"content":"import { useState } from \"react\";\nimport { BarChart4, ShieldAlert, TrendingUp, Plus, Trophy, Target, AlertTriangle, Users, Rocket, Clock, DollarSign, Package, LineChart, PieChart, InfoIcon } from \"lucide-react\";\nimport laDonaLogo from \"@assets/Screenshot 2025-05-19 alle 15.08.46.png\";\n\ntype PanelType = 'performance' | 'risks' | 'opportunities' | null;\n\nconst insights = {\n  performance: [\n    { icon: <BarChart4 size={16} />, label: \"Ventas vs Presupuesto (por Cadena)\" },\n    { icon: <Trophy size={16} />, label: \"SKU Más Vendido (Esta Semana)\" },\n    { icon: <Target size={16} />, label: \"Progreso Objetivo Cliente\" }\n  ],\n  risks: [\n    { icon: <AlertTriangle size={16} />, label: \"Pedidos Pendientes Hoy\" },\n    { icon: <ShieldAlert size={16} />, label: \"Productos Agotados (por Tienda)\" },\n    { icon: <Users size={16} />, label: \"Clientes Vencidos (120+ Días)\" }\n  ],\n  opportunities: [\n    { icon: <Target size={16} />, label: \"ROI Promoción (Scanner/Tonga)\" },\n    { icon: <Users size={16} />, label: \"Clientes Inactivos (30+ Días)\" },\n    { icon: <Rocket size={16} />, label: \"Bajo Rendimiento Rep\" }\n  ]\n};\n\n// Simple sparkline chart component\nconst Sparkline = () => (\n  <svg width=\"60\" height=\"20\" className=\"opacity-70\">\n    <polyline\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      points=\"0,15 15,8 30,12 45,5 60,9\"\n    />\n  </svg>\n);\n\n// Mini bar chart component\nconst BarMini = () => (\n  <div className=\"flex items-end gap-1 h-5\">\n    {[60, 80, 45, 90, 70].map((height, i) => (\n      <div\n        key={i}\n        className=\"bg-current rounded-sm flex-1 opacity-70\"\n        style={{ height: `${height}%` }}\n      />\n    ))}\n  </div>\n);\n\n// Radial progress component\nconst RadialProgress = ({ percentage = 71 }: { percentage?: number }) => (\n  <div className=\"relative w-8 h-8\">\n    <svg className=\"w-8 h-8 transform -rotate-90\" viewBox=\"0 0 32 32\">\n      <circle\n        cx=\"16\"\n        cy=\"16\"\n        r=\"12\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        className=\"opacity-20\"\n      />\n      <circle\n        cx=\"16\"\n        cy=\"16\"\n        r=\"12\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        strokeDasharray={`${percentage * 0.75} 75`}\n        className=\"opacity-70\"\n      />\n    </svg>\n  </div>\n);\n\n// Enhanced KPI Block component\nconst KPIBlock = ({ title, stat, icon, chart, color = \"text-gray-600\" }: {\n  title: string;\n  stat: string;\n  icon: React.ReactNode;\n  chart?: React.ReactNode;\n  color?: string;\n}) => (\n  <div className=\"rounded-xl bg-white/90 hover:shadow-md transition-all border border-gray-100 p-4 hover:shadow-[0_0_0_4px_rgba(0,0,0,0.02)]\">\n    <div className=\"flex items-center justify-between text-sm font-medium mb-3\">\n      <div className={`flex items-center gap-2 text-gray-600`}>\n        {icon}\n        <span>{title}</span>\n      </div>\n      <div className={`text-right font-semibold ${color}`}>{stat}</div>\n    </div>\n    {chart && <div className=\"mt-2\">{chart}</div>}\n  </div>\n);\n\n// Enhanced KPI Block with badges and deltas\nconst EnhancedKPIBlock = ({ icon, title, value, delta, badge, accent, chart }: {\n  icon: React.ReactNode;\n  title: string;\n  value: string;\n  delta?: string;\n  badge?: string;\n  accent: string;\n  chart?: React.ReactNode;\n}) => (\n  <div className=\"rounded-xl bg-white border hover:shadow-md p-3 transition space-y-1\">\n    <div className=\"flex justify-between text-sm font-medium text-gray-600\">\n      <div className=\"flex gap-2 items-center\">{icon} {title}</div>\n      {badge && (\n        <span className=\"text-xs bg-yellow-100 text-yellow-700 px-2 py-0.5 rounded-full\">\n          {badge}\n        </span>\n      )}\n    </div>\n    <div className={`text-lg font-bold ${accent}`}>{value}</div>\n    {delta && <div className=\"text-xs text-gray-500\">{delta}</div>}\n    {chart && <div className=\"mt-2\">{chart}</div>}\n  </div>\n);\n\nconst SidebarItem = ({ icon, label, isActive, onClick, hoverColor }: {\n  icon: React.ReactNode;\n  label: string;\n  isActive: boolean;\n  onClick: () => void;\n  hoverColor: string;\n}) => (\n  <div \n    className={`flex flex-col items-center cursor-pointer transition-all duration-200 hover:bg-gray-100 rounded-lg px-1 py-2 text-gray-600 hover:text-black pt-[13px] pb-[13px] ${\n      isActive ? `${hoverColor} bg-white shadow-sm` : ''\n    }`}\n    onClick={onClick}\n  >\n    <div className=\"mb-0.5\">{icon}</div>\n    <span className=\"uppercase text-[8px] tracking-tight font-medium text-gray-500 hover:text-gray-800 transition-colors text-center leading-tight\">\n      {label}\n    </span>\n  </div>\n);\n\nexport function BiSidebar() {\n  const [activePanel, setActivePanel] = useState<PanelType>(null);\n\n  const handlePanelClick = (panel: PanelType) => {\n    setActivePanel(activePanel === panel ? null : panel);\n  };\n\n  return (\n    <>\n      <div className=\"fixed top-0 left-0 h-screen w-20 bg-[#F9FAFB] border-r border-gray-200 flex flex-col items-center py-8 text-gray-600\" style={{ zIndex: 9999 }}>\n        {/* La Doña logo */}\n        <div className=\"flex flex-col items-center mb-8\">\n          <img \n            src={laDonaLogo} \n            alt=\"La Doña\" \n            className=\"h-6 w-auto rounded-sm\" \n          />\n          <span className=\"text-[7px] text-gray-400 mt-1 tracking-wide font-medium\">BI</span>\n        </div>\n\n        {/* Plus Button */}\n        <button className=\"w-8 h-8 rounded-md bg-white hover:bg-gray-50 flex items-center justify-center text-gray-500 hover:text-gray-700 transition-all duration-200 shadow-sm border border-gray-200 mb-8\">\n          <Plus size={14} />\n        </button>\n\n        {/* BI Navigation Items */}\n        <div className=\"flex flex-col gap-y-6\">\n          <SidebarItem \n            icon={<BarChart4 size={24} />}\n            label=\"Rendimiento\"\n            isActive={activePanel === 'performance'}\n            onClick={() => handlePanelClick('performance')}\n            hoverColor=\"text-green-600\"\n          />\n          \n          <SidebarItem \n            icon={<ShieldAlert size={24} />}\n            label=\"Riesgos\"\n            isActive={activePanel === 'risks'}\n            onClick={() => handlePanelClick('risks')}\n            hoverColor=\"text-red-600\"\n          />\n          \n          <SidebarItem \n            icon={<TrendingUp size={24} />}\n            label=\"Oportunidades\"\n            isActive={activePanel === 'opportunities'}\n            onClick={() => handlePanelClick('opportunities')}\n            hoverColor=\"text-yellow-600\"\n          />\n        </div>\n\n        {/* User badge at bottom */}\n        <div className=\"mt-auto mb-4 flex flex-col items-center\">\n          <div className=\"bg-gradient-to-br from-teal-500 to-cyan-500 w-8 h-8 rounded-full flex items-center justify-center text-white font-bold text-xs mb-2\">\n            E\n          </div>\n          <span className=\"text-[8px] font-semibold text-blue-600 tracking-wide\">PRO</span>\n        </div>\n      </div>\n\n      {/* Enhanced Dashboard Panels */}\n      {activePanel === 'performance' && (\n        <div className=\"fixed left-24 top-24 rounded-2xl shadow-lg bg-white p-6 space-y-5 w-[500px] z-50\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-800 flex items-center gap-2\">\n              <span className=\"h-2 w-2 bg-green-500 rounded-full animate-pulse\" />\n              Rendimiento\n            </h2>\n            <span className=\"text-xs text-gray-500\">🔘 65% de Mayo completado</span>\n          </div>\n\n          {/* KPI Cards Grid */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Ventas vs Presupuesto</p>\n                <p className=\"text-lg font-semibold text-green-600\">84%</p>\n              </div>\n              <BarChart4 size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Top SKU (Sem)</p>\n                <p className=\"text-lg font-semibold text-amber-600\">Condimento Super Xtra</p>\n              </div>\n              <Trophy size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Progreso Cliente</p>\n                <p className=\"text-lg font-semibold text-blue-600\">78%</p>\n              </div>\n              <Target size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Última Actualización</p>\n                <p className=\"text-lg font-semibold text-gray-600\">Hoy</p>\n              </div>\n              <Clock size={20} className=\"text-gray-400\" />\n            </div>\n          </div>\n\n          {/* Micro-insight */}\n          <div className=\"text-sm text-green-700 bg-green-100 px-3 py-2 rounded-xl\">\n            ✅ Condimento Super Xtra rastreando +15% sobre promedio cadena\n          </div>\n\n          {/* CTA Button */}\n          <button className=\"w-full bg-rose-500 hover:bg-rose-600 text-white text-sm font-semibold rounded-xl py-3 mt-4 shadow\">\n            Explorar insights de rendimiento\n          </button>\n        </div>\n      )}\n\n      {activePanel === 'risks' && (\n        <div className=\"fixed left-24 top-24 rounded-2xl shadow-lg bg-white p-6 space-y-5 w-[500px] z-50\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-800 flex items-center gap-2\">\n              <span className=\"h-2 w-2 bg-red-500 rounded-full animate-pulse\" />\n              Riesgos\n            </h2>\n            <span className=\"text-xs text-gray-500\">🔘 65% de Mayo completado</span>\n          </div>\n\n          {/* KPI Cards Grid */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Pedidos Pendientes</p>\n                <p className=\"text-lg font-semibold text-red-600\">8 artículos</p>\n              </div>\n              <AlertTriangle size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Agotado</p>\n                <p className=\"text-lg font-semibold text-orange-600\">5 tiendas</p>\n              </div>\n              <Package size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Clientes Vencidos</p>\n                <p className=\"text-lg font-semibold text-red-600\">$67K</p>\n              </div>\n              <DollarSign size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Nivel Prioridad</p>\n                <p className=\"text-lg font-semibold text-yellow-600\">Medio</p>\n              </div>\n              <ShieldAlert size={20} className=\"text-gray-400\" />\n            </div>\n          </div>\n\n          {/* Micro-insight */}\n          <div className=\"text-sm text-red-700 bg-red-100 px-3 py-2 rounded-xl\">\n            ⚠️ Zona Norte necesita reorden inmediato - Vinagre Premium y Mayonesa agotados\n          </div>\n\n          {/* CTA Button */}\n          <button className=\"w-full bg-rose-500 hover:bg-rose-600 text-white text-sm font-semibold rounded-xl py-3 mt-4 shadow\">\n            Resolver problemas de alto riesgo\n          </button>\n        </div>\n      )}\n\n      {activePanel === 'opportunities' && (\n        <div className=\"fixed left-24 top-24 rounded-2xl shadow-lg bg-white p-6 space-y-5 w-[500px] z-50\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-800 flex items-center gap-2\">\n              <span className=\"h-2 w-2 bg-yellow-500 rounded-full animate-pulse\" />\n              Oportunidades\n            </h2>\n            <span className=\"text-xs text-gray-500\">🔘 65% de Mayo completado</span>\n          </div>\n\n          {/* KPI Cards Grid */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">ROI Promoción</p>\n                <p className=\"text-lg font-semibold text-green-600\">240%</p>\n              </div>\n              <LineChart size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Clientes Inactivos</p>\n                <p className=\"text-lg font-semibold text-blue-600\">18 cuentas</p>\n              </div>\n              <Users size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Potencial Upsell</p>\n                <p className=\"text-lg font-semibold text-purple-600\">$45K</p>\n              </div>\n              <TrendingUp size={20} className=\"text-gray-400\" />\n            </div>\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Cuota Mercado</p>\n                <p className=\"text-lg font-semibold text-emerald-500\">+2.4%</p>\n              </div>\n              <PieChart size={20} className=\"text-gray-400\" />\n            </div>\n          </div>\n\n          {/* Micro-insight */}\n          <div className=\"text-sm text-yellow-700 bg-yellow-100 px-3 py-2 rounded-xl\">\n            🔥 Scanner/Tonga mostrando +240% aumento ROI - campaña más exitosa del año\n          </div>\n\n          {/* CTA Button */}\n          <button className=\"w-full bg-rose-500 hover:bg-rose-600 text-white text-sm font-semibold rounded-xl py-3 mt-4 shadow\">\n            Explorar rutas de crecimiento\n          </button>\n        </div>\n      )}\n    </>\n  );\n}","size_bytes":14764},"client/src/components/chat-interface-new.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sidebar } from \"./sidebar\";\nimport { MessageList } from \"./message-list\";\nimport { MessageInput } from \"./message-input\";\nimport { Menu, TrendingUp, AlertTriangle, Star, Mic, Send, BarChart3, User, Phone, Package, MapPin, ArrowRight, Search, Globe, Target, TrendingDown, Check, ArrowDown, Paperclip, MoreHorizontal, Copy, FileText, RotateCcw, Plus, BarChart, Brain, Info, Home, BarChart2, Bell, Settings, LogOut } from \"lucide-react\";\nimport vortexLogo from \"@assets/Screenshot 2025-05-26 alle 13.53.01.png\";\nimport laDonaLogo from \"@assets/Screenshot 2025-05-19 alle 15.08.46.png\";\n\nexport function ChatInterface() {\n  const [inputValue, setInputValue] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVoiceActive, setIsVoiceActive] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isProcessing) return;\n\n    setIsProcessing(true);\n    setIsLoading(true);\n    \n    try {\n      // Simulate message processing\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      setInputValue('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setIsProcessing(false);\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white flex\">\n      \n      {/* Vertical Sidebar Navigation */}\n      <aside className=\"w-16 bg-gray-900 flex flex-col items-center py-6\">\n        {/* La Doña Logo at Top */}\n        <div className=\"mb-8\">\n          <img \n            src={laDonaLogo} \n            alt=\"La Doña\" \n            className=\"h-8 w-8 rounded\"\n          />\n        </div>\n\n        {/* Vertical Icon Stack */}\n        <nav className=\"flex flex-col gap-6 flex-1\">\n          <button \n            className=\"p-3 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-colors\"\n            title=\"Home\"\n          >\n            <Home className=\"w-5 h-5\" />\n          </button>\n          <button \n            className=\"p-3 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-colors\"\n            title=\"Dashboard\"\n          >\n            <BarChart2 className=\"w-5 h-5\" />\n          </button>\n          <button \n            className=\"p-3 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-colors\"\n            title=\"Notifications\"\n          >\n            <Bell className=\"w-5 h-5\" />\n          </button>\n          <button \n            className=\"p-3 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-colors\"\n            title=\"Settings\"\n          >\n            <Settings className=\"w-5 h-5\" />\n          </button>\n        </nav>\n\n        {/* User Profile & Logout at Bottom */}\n        <div className=\"flex flex-col gap-4 mt-auto\">\n          <button \n            className=\"p-3 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-colors\"\n            title=\"Carlos Mendoza\"\n          >\n            <User className=\"w-5 h-5\" />\n          </button>\n          <button \n            className=\"p-3 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-colors\"\n            title=\"Logout\"\n          >\n            <LogOut className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </aside>\n\n      {/* Main Content Area - Chat Centered */}\n      <main className=\"flex-1 flex flex-col items-center justify-center pt-[12vh] pb-[8vh] bg-white\">\n\n        {/* Floating Vorta Logo with Pulse */}\n        <div className=\"vortex-icon animate-pulse mb-4\" style={{ width: '40px', height: '40px' }}>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n        </div>\n\n        {/* Chat Input Container with Focus Expansion */}\n        <div className={`flex items-center w-[640px] max-w-[90%] px-6 py-[14px] rounded-[40px] border border-gray-300 shadow-[0_8px_20px_rgba(0,0,0,0.05)] bg-white gap-3 transition-all duration-300 ${\n          inputValue.trim() ? 'transform scale-105' : ''\n        }`}>\n          \n          {/* Text Input Field */}\n          <input\n            type=\"text\"\n            placeholder=\"Ask about KPIs or performance...\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyDown={handleKeyDown}\n            className=\"flex-1 text-lg border-none outline-none text-gray-600 bg-transparent placeholder:text-gray-400\"\n          />\n\n          {/* Chat Actions - Icons and Ask Button */}\n          <div className=\"flex items-center gap-3\">\n            \n            {/* Icon Buttons */}\n            <button \n              className=\"bg-none border-none text-lg text-gray-400 cursor-pointer transition-transform duration-200 hover:scale-110 hover:text-gray-600\"\n              title=\"Attachment\"\n            >\n              <Paperclip className=\"w-[18px] h-[18px]\" />\n            </button>\n            \n            <button \n              className=\"bg-none border-none text-lg text-gray-400 cursor-pointer transition-transform duration-200 hover:scale-110 hover:text-gray-600\"\n              title=\"Globe\"\n            >\n              <Globe className=\"w-[18px] h-[18px]\" />\n            </button>\n            \n            <button \n              className=\"bg-none border-none text-lg text-gray-400 cursor-pointer transition-transform duration-200 hover:scale-110 hover:text-gray-600\"\n              title=\"Voice\"\n              onClick={() => setIsVoiceActive(!isVoiceActive)}\n            >\n              <Mic className={`w-[18px] h-[18px] ${isVoiceActive ? 'text-rose-400' : ''}`} />\n            </button>\n\n            {/* Ask Button - Dynamic Active State */}\n            <button \n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isProcessing}\n              className={`text-white font-medium border-none rounded-[18px] cursor-pointer transition-all duration-300 ease-in-out disabled:opacity-50 disabled:cursor-not-allowed ${\n                inputValue.trim().length > 0 \n                  ? 'bg-red-500 py-3 px-[26px] shadow-[0_6px_16px_rgba(239,68,68,0.35)] scale-110' \n                  : 'bg-rose-300 py-[10px] px-5 shadow-[0_4px_12px_rgba(249,168,168,0.3)] hover:bg-red-400'\n              }`}\n            >\n              {isProcessing ? 'Processing...' : 'Ask'}\n            </button>\n          </div>\n        </div>\n\n        {/* Loading Indicator */}\n        {isLoading && (\n          <div className=\"mt-4 flex items-center gap-2\">\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-rose-500\"></div>\n            <span className=\"text-sm text-gray-600\">Analyzing your request...</span>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}","size_bytes":7248},"client/src/components/chat-interface.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sidebar } from \"./sidebar\";\nimport { MessageList } from \"./message-list\";\nimport { MessageInput } from \"./message-input\";\nimport {\n  Menu,\n  TrendingUp,\n  AlertTriangle,\n  Star,\n  Mic,\n  Send,\n  BarChart3,\n  User,\n  Phone,\n  Package,\n  MapPin,\n  ArrowRight,\n  Search,\n  Globe,\n  Target,\n  TrendingDown,\n  Check,\n  ArrowDown,\n  Paperclip,\n  MoreHorizontal,\n  Copy,\n  FileText,\n  RotateCcw,\n  Plus,\n  BarChart,\n  Brain,\n  Info,\n  Home,\n  BarChart2,\n  Bell,\n  Settings,\n  LogOut,\n} from \"lucide-react\";\nimport vortexLogo from \"@assets/Screenshot 2025-05-26 alle 13.53.01.png\";\nimport laDonaLogo from \"@assets/Screenshot 2025-05-19 alle 15.08.46.png\";\n\nexport function ChatInterface() {\n  const [selectedConversationId, setSelectedConversationId] = useState<\n    number | null\n  >(null);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [expandedCard, setExpandedCard] = useState<string | null>(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isVoiceActive, setIsVoiceActive] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [currentResponse, setCurrentResponse] = useState(\"\");\n  const [showResponse, setShowResponse] = useState(false);\n  const [attachedFiles, setAttachedFiles] = useState<File[]>([]);\n  const [typingText, setTypingText] = useState(\"\");\n  const [showActions, setShowActions] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [isLoading]);\n\n  const typewriterEffect = (text: string, callback: () => void) => {\n    let index = 0;\n    setTypingText(\"\");\n    const timer = setInterval(() => {\n      if (index < text.length) {\n        setTypingText((prev) => prev + text.charAt(index));\n        index++;\n      } else {\n        clearInterval(timer);\n        callback();\n      }\n    }, 30);\n  };\n\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n    setIsProcessing(true);\n    setShowResponse(true);\n    setShowActions(false);\n\n    // Simulate processing delay\n    setTimeout(() => {\n      const response =\n        \"Based on your La Doña regional performance data, I can see that Colón region is currently at 67% of target with some challenges in vinegar sales and delivery timelines. Would you like me to analyze the specific factors contributing to this performance gap?\";\n\n      typewriterEffect(response, () => {\n        setCurrentResponse(response);\n        setIsProcessing(false);\n        setTimeout(() => setShowActions(true), 500);\n      });\n    }, 2000);\n\n    setInputValue(\"\");\n  };\n\n  const handleVoiceToggle = () => {\n    setIsVoiceActive(!isVoiceActive);\n  };\n\n  const handleFileAttach = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files) {\n      const newFiles = Array.from(files);\n      setAttachedFiles((prev) => [...prev, ...newFiles]);\n    }\n  };\n\n  const removeAttachedFile = (index: number) => {\n    setAttachedFiles((prev) => prev.filter((_, i) => i !== index));\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  const handleSelectConversation = (id: number | null) => {\n    setSelectedConversationId(id);\n    // Close sidebar on mobile when selecting a conversation\n    if (window.innerWidth < 1024) {\n      setSidebarOpen(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Chat Container - Centered Layout */}\n      <main className=\"flex flex-col items-center pt-[10vh] pb-[5vh] bg-white min-h-screen justify-center\">\n        {/* Floating Vorta Logo with Pulse */}\n        {/* <div className=\"vortex-icon animate-pulse mb-4\" style={{ width: '40px', height: '40px' }}>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n        </div> */}\n\n        {/* Chat Input Container */}\n        <div className=\"flex items-center w-[640px] max-w-[90%] px-6 py-[14px] rounded-[40px] border border-gray-300 shadow-[0_8px_20px_rgba(0,0,0,0.05)] bg-white gap-3 pt-[23px] pb-[23px]\">\n          {/* Text Input Field */}\n          <input\n            type=\"text\"\n            placeholder=\"Pregunta sobre KPIs o rendimiento...\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyDown={handleKeyDown}\n            className=\"flex-1 text-lg border-none outline-none text-gray-600 bg-transparent placeholder:text-gray-400\"\n          />\n\n          {/* Chat Actions - Icons and Ask Button */}\n          <div className=\"flex items-center gap-3\">\n            {/* Icon Buttons */}\n            <button\n              className=\"bg-none border-none text-lg text-gray-400 cursor-pointer transition-transform duration-200 hover:scale-110\"\n              title=\"Adjuntar archivo\"\n            >\n              <Paperclip className=\"w-[18px] h-[18px]\" />\n            </button>\n\n            <button\n              className=\"bg-none border-none text-lg text-gray-400 cursor-pointer transition-transform duration-200 hover:scale-110\"\n              title=\"Idioma\"\n            >\n              <Globe className=\"w-[18px] h-[18px]\" />\n            </button>\n\n            <button\n              className=\"bg-none border-none text-lg text-gray-400 cursor-pointer transition-transform duration-200 hover:scale-110\"\n              title=\"Voz\"\n              onClick={() => setIsVoiceActive(!isVoiceActive)}\n            >\n              <Mic\n                className={`w-[18px] h-[18px] ${isVoiceActive ? \"text-rose-400\" : \"\"}`}\n              />\n            </button>\n\n            {/* Ask Button - Dynamic Active State */}\n            <button\n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isProcessing}\n              className={`text-white font-medium border-none rounded-[18px] cursor-pointer transition-all duration-[250ms] ease-in-out disabled:opacity-50 disabled:cursor-not-allowed ${\n                inputValue.trim().length > 0\n                  ? \"bg-red-500 py-3 px-[26px] shadow-[0_6px_16px_rgba(239,68,68,0.35)]\"\n                  : \"bg-rose-300 py-[10px] px-5 shadow-[0_4px_12px_rgba(249,168,168,0.3)] hover:bg-red-400\"\n              }`}\n            >\n              {isProcessing ? \"Procesando...\" : \"Preguntar\"}\n            </button>\n          </div>\n        </div>\n\n        {/* Loading Indicator */}\n        {isLoading && (\n          <div className=\"mt-4 flex items-center gap-2\">\n            <div className=\"vortex-icon active scale-75\">\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n            </div>\n            <p className=\"text-sm text-gray-400 italic animate-pulse\">\n              Preparando insights…\n            </p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n","size_bytes":7474},"client/src/components/confetti-animation.tsx":{"content":"import React, { useEffect, useRef } from 'react';\n\ninterface ConfettiParticle {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  gravity: number;\n  color: string;\n  rotation: number;\n  rotationSpeed: number;\n  size: number;\n  life: number;\n  maxLife: number;\n}\n\ninterface ConfettiAnimationProps {\n  trigger: boolean;\n  onComplete?: () => void;\n  duration?: number;\n  particleCount?: number;\n  colors?: string[];\n}\n\nexport function ConfettiAnimation({ \n  trigger, \n  onComplete, \n  duration = 3000,\n  particleCount = 50,\n  colors = ['#22c55e', '#ef4444', '#3b82f6', '#f59e0b', '#8b5cf6', '#ec4899']\n}: ConfettiAnimationProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number>();\n  const particlesRef = useRef<ConfettiParticle[]>([]);\n  const startTimeRef = useRef<number>(0);\n\n  useEffect(() => {\n    if (!trigger) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size to window size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    \n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Initialize particles\n    particlesRef.current = [];\n    for (let i = 0; i < particleCount; i++) {\n      particlesRef.current.push({\n        x: Math.random() * canvas.width,\n        y: -10,\n        vx: (Math.random() - 0.5) * 8,\n        vy: Math.random() * 3 + 2,\n        gravity: 0.15,\n        color: colors[Math.floor(Math.random() * colors.length)],\n        rotation: Math.random() * 360,\n        rotationSpeed: (Math.random() - 0.5) * 10,\n        size: Math.random() * 8 + 4,\n        life: 0,\n        maxLife: duration\n      });\n    }\n\n    startTimeRef.current = Date.now();\n\n    const animate = () => {\n      const currentTime = Date.now();\n      const elapsed = currentTime - startTimeRef.current;\n\n      if (elapsed >= duration) {\n        window.removeEventListener('resize', resizeCanvas);\n        onComplete?.();\n        return;\n      }\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      particlesRef.current.forEach((particle, index) => {\n        // Update physics\n        particle.vy += particle.gravity;\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n        particle.rotation += particle.rotationSpeed;\n        particle.life = elapsed;\n\n        // Calculate opacity based on life\n        const opacity = Math.max(0, 1 - (particle.life / particle.maxLife));\n\n        // Draw particle\n        ctx.save();\n        ctx.translate(particle.x, particle.y);\n        ctx.rotate((particle.rotation * Math.PI) / 180);\n        ctx.globalAlpha = opacity;\n        \n        // Draw as a small rectangle (confetti piece)\n        ctx.fillStyle = particle.color;\n        ctx.fillRect(-particle.size / 2, -particle.size / 4, particle.size, particle.size / 2);\n        \n        ctx.restore();\n\n        // Remove particles that are off screen or faded\n        if (particle.y > canvas.height + 50 || opacity <= 0) {\n          particlesRef.current.splice(index, 1);\n        }\n      });\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, [trigger, duration, particleCount, colors, onComplete]);\n\n  if (!trigger) return null;\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"fixed inset-0 pointer-events-none z-50\"\n      style={{ background: 'transparent' }}\n    />\n  );\n}\n\n// Hook to trigger confetti when positive metrics are detected\nexport function usePerformanceConfetti() {\n  const [shouldTrigger, setShouldTrigger] = React.useState(false);\n\n  const triggerConfetti = React.useCallback(() => {\n    setShouldTrigger(true);\n    setTimeout(() => setShouldTrigger(false), 100);\n  }, []);\n\n  const resetConfetti = React.useCallback(() => {\n    setShouldTrigger(false);\n  }, []);\n\n  return {\n    shouldTrigger,\n    triggerConfetti,\n    resetConfetti\n  };\n}\n\n// Component to detect positive performance indicators and trigger confetti\nexport function PerformanceConfettiTrigger({ content }: { content: string }) {\n  const { shouldTrigger, triggerConfetti } = usePerformanceConfetti();\n\n  useEffect(() => {\n    // Detect positive performance indicators in the content\n    const positiveIndicators = [\n      'performance-positive',\n      '95.96%',\n      '300% volume increase',\n      'achieves',\n      'recovery',\n      'success',\n      '75% of historical performance',\n      'within 60 days',\n      'positive',\n      'top 5 xtra locations',\n      '$65+ monthly',\n      '45% achievement',\n      'spacial foods',\n      'backup supplier',\n      'reformulate',\n      'daily reporting protocols',\n      'target:',\n      'recovery targets',\n      'success metrics'\n    ];\n\n    const hasPositiveIndicator = positiveIndicators.some(indicator => \n      content.toLowerCase().includes(indicator.toLowerCase())\n    );\n\n    // Also trigger on span elements with positive classes\n    const hasPositiveClass = content.includes('performance-positive') || \n                            content.includes('class=\"performance-positive\"');\n\n    if (hasPositiveIndicator || hasPositiveClass) {\n      // Delay to allow content to render first\n      setTimeout(() => {\n        triggerConfetti();\n      }, 800);\n    }\n  }, [content, triggerConfetti]);\n\n  return (\n    <ConfettiAnimation\n      trigger={shouldTrigger}\n      duration={2500}\n      particleCount={40}\n      colors={['#22c55e', '#10b981', '#059669', '#34d399', '#6ee7b7']}\n    />\n  );\n}","size_bytes":5723},"client/src/components/kpi-dashboard.tsx":{"content":"import { BarChart2, TrendingUp, AlertTriangle, Users, Package, DollarSign, Target, Zap, UserX } from \"lucide-react\";\n\nexport function KPIDashboard() {\n  return (\n    <div className=\"px-6 py-6\">\n      <h2 className=\"text-lg font-semibold text-gray-700 mb-4\">Panel de KPI – La Doña (Top 9 Métricas)</h2>\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {/* Performance Section */}\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <BarChart2 size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-green-600 font-semibold\">Ventas vs Objetivo</h4>\n          </div>\n          <p className=\"text-2xl font-bold text-gray-900\">84%</p>\n          <p className=\"text-xs text-gray-500\">Progreso objetivo mensual</p>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <TrendingUp size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-green-600 font-semibold\">SKU Más Vendido (Esta Semana)</h4>\n          </div>\n          <p className=\"text-base font-semibold text-gray-800\">Condimento Super Xtra</p>\n          <p className=\"text-xs text-gray-500\">Mejor producto por región</p>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <Target size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-green-600 font-semibold\">Progreso Objetivo Cliente</h4>\n          </div>\n          <p className=\"text-base font-semibold text-gray-800\">Chiriquí +8% sobre objetivo</p>\n          <p className=\"text-xs text-gray-500\">Cuentas principales vs sus objetivos</p>\n        </div>\n\n        {/* Risks Section */}\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <AlertTriangle size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-red-600 font-semibold\">Pedidos Pendientes Hoy</h4>\n          </div>\n          <p className=\"text-base font-semibold text-gray-800\">12 órdenes pendientes</p>\n          <p className=\"text-xs text-gray-500\">Más afectado: Super Xtra</p>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <Package size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-red-600 font-semibold\">Productos Agotados</h4>\n          </div>\n          <p className=\"text-base font-semibold text-gray-800\">8 artículos urgentes</p>\n          <p className=\"text-xs text-gray-500\">Brechas críticas de cumplimiento</p>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <DollarSign size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-red-600 font-semibold\">Clientes Vencidos (120+ Días)</h4>\n          </div>\n          <p className=\"text-base font-semibold text-gray-800\">$45,200 sin pagar</p>\n          <p className=\"text-xs text-gray-500\">Cuentas de alto riesgo marcadas</p>\n        </div>\n\n        {/* Opportunities Section */}\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <Zap size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-yellow-500 font-semibold\">ROI Promoción (Scanner/Tonga)</h4>\n          </div>\n          <p className=\"text-base font-semibold text-gray-800\">+240% ROI</p>\n          <p className=\"text-xs text-gray-500\">Efectividad de campaña</p>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <UserX size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-yellow-500 font-semibold\">Clientes Inactivos (30+ Días)</h4>\n          </div>\n          <p className=\"text-base font-semibold text-gray-800\">23 cuentas</p>\n          <p className=\"text-xs text-gray-500\">Listos para reactivación</p>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-md p-4\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <Users size={14} className=\"text-gray-400\" />\n            <h4 className=\"text-sm text-yellow-500 font-semibold\">Bajo Rendimiento Rep</h4>\n          </div>\n          <p className=\"text-base font-semibold text-gray-800\">2 reps bajo 75%</p>\n          <p className=\"text-xs text-gray-500\">Soporte equipo de campo necesario</p>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4755},"client/src/components/message-input.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Send, Paperclip } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface MessageInputProps {\n  conversationId: number | null;\n  onSendMessage: () => void;\n  language?: 'en' | 'es';\n}\n\nexport function MessageInput({ conversationId, onSendMessage, language }: MessageInputProps) {\n  const [message, setMessage] = useState(\"\");\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const queryClient = useQueryClient();\n\n  const sendMessageMutation = useMutation({\n    mutationFn: async (content: string) => {\n      if (!conversationId) {\n        throw new Error(\"No conversation selected\");\n      }\n\n      const response = await apiRequest(\"POST\", `/api/conversations/${conversationId}/messages`, {\n        role: \"user\",\n        content,\n        language,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ \n        queryKey: [\"/api/conversations\", conversationId, \"messages\"] \n      });\n      queryClient.invalidateQueries({ \n        queryKey: [\"/api/conversations\"] \n      });\n      onSendMessage();\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const trimmedMessage = message.trim();\n    if (trimmedMessage && conversationId && !sendMessageMutation.isPending) {\n      sendMessageMutation.mutate(trimmedMessage);\n      setMessage(\"\");\n      if (textareaRef.current) {\n        textareaRef.current.style.height = \"auto\";\n      }\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setMessage(e.target.value);\n    \n    // Auto-resize textarea\n    const textarea = e.target;\n    textarea.style.height = \"auto\";\n    textarea.style.height = `${Math.min(textarea.scrollHeight, 128)}px`;\n  };\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.focus();\n    }\n  }, [conversationId]);\n\n  const isDisabled = !conversationId || sendMessageMutation.isPending || !message.trim();\n\n  return (\n    <div className=\"border-t border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-950\">\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <form onSubmit={handleSubmit} className=\"relative\">\n          <div className=\"flex items-end gap-3 bg-white dark:bg-gray-950 border border-gray-200 dark:border-gray-800 rounded-2xl p-3 shadow-sm focus-within:shadow-md transition-shadow\">\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors flex-shrink-0\"\n              disabled={!conversationId}\n            >\n              <Paperclip className=\"h-4 w-4 text-gray-400\" />\n            </Button>\n            \n            <div className=\"flex-1\">\n              <Textarea\n                ref={textareaRef}\n                value={message}\n                onChange={handleInputChange}\n                onKeyDown={handleKeyDown}\n                placeholder=\"Mensaje a ChatGPT...\"\n                className=\"w-full resize-none bg-transparent border-none outline-none text-sm leading-relaxed min-h-[20px] max-h-32 p-0 focus-visible:ring-0 placeholder:text-gray-500 dark:placeholder:text-gray-400\"\n                rows={1}\n                disabled={!conversationId || sendMessageMutation.isPending}\n              />\n            </div>\n            \n            <Button\n              type=\"submit\"\n              size=\"sm\"\n              disabled={isDisabled}\n              className={cn(\n                \"p-2 bg-la-dona-green hover:bg-la-dona-green/90 text-white rounded-lg transition-colors flex-shrink-0\",\n                isDisabled && \"opacity-50 cursor-not-allowed\"\n              )}\n            >\n              <Send className=\"h-4 w-4\" />\n            </Button>\n          </div>\n          \n          <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center mt-2\">\n            ChatGPT puede cometer errores. Considera verificar información importante.\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4458},"client/src/components/message-list.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Button } from \"@/components/ui/button\";\nimport { formatTimeShort } from \"@/lib/utils\";\nimport { cn } from \"@/lib/utils\";\nimport { Bot, User, ThumbsUp, ThumbsDown, Copy } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { SmartCelebrationTrigger, ConfettiTestButton } from \"./performance-celebration\";\nimport type { Message } from \"@shared/schema\";\n\ninterface MessageListProps {\n  conversationId: number | null;\n}\n\nexport function MessageList({ conversationId }: MessageListProps) {\n  const { toast } = useToast();\n\n  const { data: messages = [], isLoading } = useQuery<Message[]>({\n    queryKey: [\"/api/conversations\", conversationId, \"messages\"],\n    enabled: !!conversationId,\n  });\n\n  const handleCopyMessage = async (content: string) => {\n    try {\n      await navigator.clipboard.writeText(content);\n      toast({\n        title: \"Copied to clipboard\",\n        description: \"Message copied successfully\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to copy\",\n        description: \"Could not copy message to clipboard\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  if (!conversationId) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center\">\n        <div className=\"text-center py-12 px-4\">\n          <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n            <Bot className=\"h-8 w-8 text-white\" />\n          </div>\n          <h2 className=\"heading-secondary mb-2\">\n            How can I help you today?\n          </h2>\n          <p className=\"text-gray-600\">\n            Ask me anything, and I'll do my best to help!\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <ScrollArea className=\"flex-1\">\n        <div className=\"max-w-4xl mx-auto px-4 py-6 space-y-6\">\n          {[...Array(3)].map((_, i) => (\n            <div key={i} className=\"space-y-4\">\n              <div className=\"flex justify-end\">\n                <div className=\"max-w-3xl w-full\">\n                  <div className=\"bg-gray-200 dark:bg-gray-800 rounded-2xl px-4 py-3 ml-12 animate-pulse\">\n                    <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-3/4\"></div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex justify-start\">\n                <div className=\"max-w-3xl w-full\">\n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"w-8 h-8 bg-gray-300 dark:bg-gray-700 rounded-full animate-pulse\"></div>\n                    <div className=\"bg-gray-200 dark:bg-gray-800 rounded-2xl px-4 py-3 mr-12 flex-1 animate-pulse\">\n                      <div className=\"space-y-2\">\n                        <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-full\"></div>\n                        <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-2/3\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </ScrollArea>\n    );\n  }\n\n  return (\n    <ScrollArea className=\"flex-1\">\n      <div className=\"max-w-4xl mx-auto px-4 pb-32 space-y-6\">\n        {messages.length === 0 ? (\n          <div className=\"text-center py-12 px-4\">\n            <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Bot className=\"h-8 w-8 text-white\" />\n            </div>\n            <h2 className=\"heading-secondary mb-2\">\n              Start the conversation\n            </h2>\n            <p className=\"text-gray-600\">\n              Send a message to begin chatting\n            </p>\n          </div>\n        ) : (\n          messages.map((message) => (\n            <div key={message.id}>\n              {message.role === \"user\" ? (\n                <div className=\"flex justify-end\">\n                  <div className=\"max-w-3xl\">\n                    <div className=\"bg-gray-50 rounded-2xl px-4 py-3 ml-12\">\n                      <div className=\"message-content text-body\">\n                        {message.content.split('\\n').map((line, i) => (\n                          <p key={i}>{line || '\\u00A0'}</p>\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-end gap-2 mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                      <span>You</span>\n                      <span>•</span>\n                      <span>{formatTimeShort(message.createdAt)}</span>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex justify-start\">\n                  <div className=\"max-w-3xl\">\n                    <div className=\"flex items-start gap-3\">\n                      <div className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                        <Bot className=\"h-4 w-4 text-white\" />\n                      </div>\n                      <div className=\"bg-white border border-gray-200 rounded-2xl px-4 py-3 mr-12 shadow-enterprise\">\n                        <div className=\"message-content text-body\">\n                          {message.content.split('\\n').map((line, i) => (\n                            <p key={i}>{line || '\\u00A0'}</p>\n                          ))}\n                        </div>\n                        <SmartCelebrationTrigger content={message.content} />\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2 mt-2 ml-11 text-xs text-gray-500 dark:text-gray-400\">\n                      <span>ChatGPT</span>\n                      <span>•</span>\n                      <span>{formatTimeShort(message.createdAt)}</span>\n                      <div className=\"flex gap-1 ml-2\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-6 w-6 p-1 hover:bg-gray-100 dark:hover:bg-gray-800\"\n                        >\n                          <ThumbsUp className=\"h-3 w-3\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-6 w-6 p-1 hover:bg-gray-100 dark:hover:bg-gray-800\"\n                        >\n                          <ThumbsDown className=\"h-3 w-3\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleCopyMessage(message.content)}\n                          className=\"h-6 w-6 p-1 hover:bg-gray-100 dark:hover:bg-gray-800\"\n                        >\n                          <Copy className=\"h-3 w-3\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n      <ConfettiTestButton />\n    </ScrollArea>\n  );\n}\n","size_bytes":7291},"client/src/components/micro-interactions.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { CheckCircle2, AlertCircle, TrendingUp } from \"lucide-react\";\n\ninterface FeedbackToastProps {\n  type: 'success' | 'error' | 'info';\n  message: string;\n  show: boolean;\n  onHide: () => void;\n}\n\nexport function FeedbackToast({ type, message, show, onHide }: FeedbackToastProps) {\n  useEffect(() => {\n    if (show) {\n      const timer = setTimeout(onHide, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [show, onHide]);\n\n  if (!show) return null;\n\n  const icons = {\n    success: <CheckCircle2 size={20} className=\"text-green-600\" />,\n    error: <AlertCircle size={20} className=\"text-red-600\" />,\n    info: <TrendingUp size={20} className=\"text-blue-600\" />\n  };\n\n  const styles = {\n    success: 'bg-green-50 border-green-200 text-green-800',\n    error: 'bg-red-50 border-red-200 text-red-800',\n    info: 'bg-blue-50 border-blue-200 text-blue-800'\n  };\n\n  return (\n    <div className={`fixed top-4 right-4 z-50 flex items-center gap-3 px-4 py-3 rounded-lg border ${styles[type]} animate-slideInRight shadow-lg`}>\n      {icons[type]}\n      <span className=\"text-sm font-medium\">{message}</span>\n    </div>\n  );\n}\n\ninterface AnimatedCounterProps {\n  value: number;\n  duration?: number;\n  suffix?: string;\n}\n\nexport function AnimatedCounter({ value, duration = 1000, suffix = '' }: AnimatedCounterProps) {\n  const [displayValue, setDisplayValue] = useState(0);\n\n  useEffect(() => {\n    let startTime: number | null = null;\n    const startValue = displayValue;\n\n    const animate = (currentTime: number) => {\n      if (startTime === null) startTime = currentTime;\n      const progress = Math.min((currentTime - startTime) / duration, 1);\n      \n      const easeOutCubic = 1 - Math.pow(1 - progress, 3);\n      const currentValue = Math.floor(startValue + (value - startValue) * easeOutCubic);\n      \n      setDisplayValue(currentValue);\n\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    requestAnimationFrame(animate);\n  }, [value, duration]);\n\n  return <span className=\"tabular-nums\">{displayValue}{suffix}</span>;\n}\n\ninterface PulseIndicatorProps {\n  color?: 'green' | 'red' | 'blue' | 'yellow';\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport function PulseIndicator({ color = 'green', size = 'sm' }: PulseIndicatorProps) {\n  const colors = {\n    green: 'bg-green-500',\n    red: 'bg-red-500',\n    blue: 'bg-blue-500',\n    yellow: 'bg-yellow-500'\n  };\n\n  const sizes = {\n    sm: 'w-2 h-2',\n    md: 'w-3 h-3',\n    lg: 'w-4 h-4'\n  };\n\n  return (\n    <div className={`${sizes[size]} ${colors[color]} rounded-full animate-pulse relative`}>\n      <div className={`absolute inset-0 ${colors[color]} rounded-full animate-ping opacity-75`}></div>\n    </div>\n  );\n}\n\ninterface HoverCardProps {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport function HoverCard({ children, className = '', onClick }: HoverCardProps) {\n  const [isPressed, setIsPressed] = useState(false);\n\n  return (\n    <div\n      className={`interactive-hover button-press ripple-effect cursor-pointer ${className} ${\n        isPressed ? 'animate-scaleIn' : ''\n      }`}\n      onClick={onClick}\n      onMouseDown={() => setIsPressed(true)}\n      onMouseUp={() => setIsPressed(false)}\n      onMouseLeave={() => setIsPressed(false)}\n    >\n      {children}\n    </div>\n  );\n}\n\ninterface ProgressBarProps {\n  value: number;\n  max: number;\n  color?: 'green' | 'blue' | 'red' | 'yellow';\n  animated?: boolean;\n}\n\nexport function ProgressBar({ value, max, color = 'green', animated = true }: ProgressBarProps) {\n  const percentage = Math.min((value / max) * 100, 100);\n  \n  const colors = {\n    green: 'bg-green-500',\n    blue: 'bg-blue-500',\n    red: 'bg-red-500',\n    yellow: 'bg-yellow-500'\n  };\n\n  return (\n    <div className=\"w-full bg-gray-200 rounded-full h-2 overflow-hidden\">\n      <div\n        className={`h-full ${colors[color]} ${animated ? 'transition-all duration-700 ease-out' : ''} rounded-full relative`}\n        style={{ width: `${percentage}%` }}\n      >\n        {animated && (\n          <div className=\"absolute inset-0 bg-white/30 animate-pulse rounded-full\"></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface FloatingButtonProps {\n  icon: React.ReactNode;\n  onClick: () => void;\n  tooltip?: string;\n  color?: 'blue' | 'green' | 'red';\n}\n\nexport function FloatingButton({ icon, onClick, tooltip, color = 'blue' }: FloatingButtonProps) {\n  const colors = {\n    blue: 'bg-blue-500 hover:bg-blue-600',\n    green: 'bg-green-500 hover:bg-green-600',\n    red: 'bg-red-500 hover:bg-red-600'\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      title={tooltip}\n      className={`fixed bottom-6 right-6 w-14 h-14 ${colors[color]} text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-200 flex items-center justify-center animate-bounceIn button-press ripple-effect z-50`}\n    >\n      {icon}\n    </button>\n  );\n}","size_bytes":4932},"client/src/components/performance-celebration.tsx":{"content":"import React, { useState } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { ConfettiAnimation } from \"./confetti-animation\";\nimport { Sparkles, TrendingUp } from \"lucide-react\";\n\ninterface PerformanceCelebrationProps {\n  trigger?: boolean;\n  onCelebrate?: () => void;\n}\n\nexport function PerformanceCelebration({ trigger = false, onCelebrate }: PerformanceCelebrationProps) {\n  const [isTriggered, setIsTriggered] = useState(false);\n  const [celebrationCount, setCelebrationCount] = useState(0);\n\n  const handleCelebrate = () => {\n    setIsTriggered(true);\n    setCelebrationCount(prev => prev + 1);\n    onCelebrate?.();\n    \n    // Reset after animation\n    setTimeout(() => {\n      setIsTriggered(false);\n    }, 3000);\n  };\n\n  React.useEffect(() => {\n    if (trigger) {\n      handleCelebrate();\n    }\n  }, [trigger]);\n\n  return (\n    <>\n      <ConfettiAnimation\n        trigger={isTriggered}\n        duration={2500}\n        particleCount={60}\n        colors={['#22c55e', '#10b981', '#059669', '#34d399', '#6ee7b7', '#a7f3d0']}\n        onComplete={() => setIsTriggered(false)}\n      />\n    </>\n  );\n}\n\n// Enhanced performance metrics detector\nexport function detectPositiveMetrics(content: string): boolean {\n  const positivePatterns = [\n    /performance-positive/i,\n    /95\\.96%/,\n    /300% volume increase/i,\n    /spacial foods/i,\n    /success framework/i,\n    /recovery targets/i,\n    /\\$65\\+ monthly/i,\n    /within 60 days/i,\n    /45% achievement/i,\n    /top 5 xtra locations/i,\n    /backup supplier/i,\n    /daily reporting protocols/i,\n    /60% recovery/i,\n    /50\\+ sales performance/i,\n    /\\$3\\.5M\\+ monthly/i,\n    /achieves/i,\n    /success/i,\n    /positive/i,\n    /recovery/i,\n    /target:/i\n  ];\n\n  return positivePatterns.some(pattern => pattern.test(content));\n}\n\n// Smart celebration trigger component\nexport function SmartCelebrationTrigger({ content }: { content: string }) {\n  const [shouldCelebrate, setShouldCelebrate] = useState(false);\n\n  React.useEffect(() => {\n    const hasPositiveMetrics = detectPositiveMetrics(content);\n    \n    if (hasPositiveMetrics) {\n      // Add delay to ensure content is rendered\n      const timer = setTimeout(() => {\n        setShouldCelebrate(true);\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    if (shouldCelebrate) {\n      // Reset after triggering\n      const timer = setTimeout(() => {\n        setShouldCelebrate(false);\n      }, 100);\n\n      return () => clearTimeout(timer);\n    }\n  }, [shouldCelebrate]);\n\n  return <PerformanceCelebration trigger={shouldCelebrate} />;\n}\n\n// Test button for manual confetti triggering\nexport function ConfettiTestButton() {\n  const [trigger, setTrigger] = useState(false);\n\n  const handleTest = () => {\n    setTrigger(true);\n    setTimeout(() => setTrigger(false), 100);\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      <Button\n        onClick={handleTest}\n        className=\"bg-green-500 hover:bg-green-600 text-white shadow-lg\"\n        size=\"sm\"\n      >\n        <Sparkles className=\"h-4 w-4 mr-2\" />\n        Test Confetti\n      </Button>\n      <PerformanceCelebration trigger={trigger} />\n    </div>\n  );\n}","size_bytes":3213},"client/src/components/prompt-generator.tsx":{"content":"import { useState } from \"react\";\nimport { Lightbulb, TrendingUp, Users, Package, DollarSign, AlertTriangle, BarChart3, Target, Zap } from \"lucide-react\";\n\ninterface PromptSuggestion {\n  id: string;\n  text: string;\n  category: string;\n  icon: React.ReactNode;\n  priority: 'high' | 'medium' | 'low';\n}\n\ninterface PromptGeneratorProps {\n  onPromptSelect: (prompt: string) => void;\n  isVisible: boolean;\n  onToggle: () => void;\n}\n\nexport function PromptGenerator({ onPromptSelect, isVisible, onToggle }: PromptGeneratorProps) {\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n\n  const promptSuggestions: PromptSuggestion[] = [\n    // High Priority - Critical Business Questions\n    {\n      id: 'cash-flow',\n      text: \"¿Cuál es nuestra situación actual de flujo de caja y qué clientes representan el mayor riesgo de cobranza?\",\n      category: 'financial',\n      icon: <DollarSign size={14} className=\"text-gray-400\" />,\n      priority: 'high'\n    },\n    {\n      id: 'stock-alerts',\n      text: \"¿Qué productos están experimentando desabastecimiento y cuál es el impacto en los ingresos?\",\n      category: 'inventory',\n      icon: <AlertTriangle size={14} className=\"text-gray-400\" />,\n      priority: 'high'\n    },\n    {\n      id: 'underperforming-regions',\n      text: \"¿Qué regiones tienen bajo rendimiento y qué acciones específicas deberíamos tomar?\",\n      category: 'performance',\n      icon: <TrendingUp size={14} className=\"text-gray-400\" />,\n      priority: 'high'\n    },\n\n    // Medium Priority - Strategic Analysis\n    {\n      id: 'top-performers',\n      text: \"¿Qué representantes de ventas, productos y regiones están generando nuestros mejores resultados?\",\n      category: 'performance',\n      icon: <Target size={14} className=\"text-gray-400\" />,\n      priority: 'medium'\n    },\n    {\n      id: 'client-analysis',\n      text: \"Analiza nuestros top 5 clientes por ingresos e identifica oportunidades de crecimiento\",\n      category: 'clients',\n      icon: <Users size={14} className=\"text-gray-400\" />,\n      priority: 'medium'\n    },\n    {\n      id: 'product-margins',\n      text: \"¿Qué productos tienen los márgenes de ganancia más altos y deberíamos enfocarnos en promocionarlos?\",\n      category: 'products',\n      icon: <Package size={14} className=\"text-gray-400\" />,\n      priority: 'medium'\n    },\n    {\n      id: 'promotion-roi',\n      text: \"¿Cuál es el ROI de nuestras campañas promocionales actuales y cuáles deberíamos expandir?\",\n      category: 'marketing',\n      icon: <BarChart3 size={14} className=\"text-gray-400\" />,\n      priority: 'medium'\n    },\n\n    // Low Priority - Operational Insights\n    {\n      id: 'daily-summary',\n      text: \"Dame un resumen integral del rendimiento empresarial de hoy\",\n      category: 'operations',\n      icon: <Lightbulb size={14} className=\"text-gray-400\" />,\n      priority: 'low'\n    },\n    {\n      id: 'territory-routes',\n      text: \"¿Cómo podemos optimizar las rutas de los representantes de ventas para mejorar la cobertura territorial?\",\n      category: 'operations',\n      icon: <Zap size={14} className=\"text-gray-400\" />,\n      priority: 'low'\n    },\n    {\n      id: 'new-opportunities',\n      text: \"¿Qué nuevas oportunidades de mercado debería considerar La Doña basándose en las tendencias actuales?\",\n      category: 'strategy',\n      icon: <TrendingUp size={14} className=\"text-gray-400\" />,\n      priority: 'low'\n    },\n    {\n      id: 'competitive-analysis',\n      text: \"¿Cómo se compara la posición de mercado de La Doña con nuestros principales competidores?\",\n      category: 'strategy',\n      icon: <BarChart3 size={14} className=\"text-gray-400\" />,\n      priority: 'low'\n    },\n    {\n      id: 'backorder-impact',\n      text: \"¿Cuál es el impacto de los pedidos pendientes actuales en la satisfacción del cliente y los ingresos?\",\n      category: 'inventory',\n      icon: <Package size={14} className=\"text-gray-400\" />,\n      priority: 'medium'\n    }\n  ];\n\n  const categories = [\n    { id: 'all', name: 'Todas las Preguntas', count: promptSuggestions.length },\n    { id: 'financial', name: 'Financiero', count: promptSuggestions.filter(p => p.category === 'financial').length },\n    { id: 'performance', name: 'Rendimiento', count: promptSuggestions.filter(p => p.category === 'performance').length },\n    { id: 'clients', name: 'Clientes', count: promptSuggestions.filter(p => p.category === 'clients').length },\n    { id: 'inventory', name: 'Inventario', count: promptSuggestions.filter(p => p.category === 'inventory').length },\n    { id: 'operations', name: 'Operaciones', count: promptSuggestions.filter(p => p.category === 'operations').length }\n  ];\n\n  const filteredPrompts = selectedCategory === 'all' \n    ? promptSuggestions \n    : promptSuggestions.filter(p => p.category === selectedCategory);\n\n  const priorityOrder = { 'high': 0, 'medium': 1, 'low': 2 };\n  const sortedPrompts = filteredPrompts.sort((a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]);\n\n  const getPriorityBadge = (priority: string) => {\n    switch (priority) {\n      case 'high':\n        return <span className=\"px-2 py-1 text-xs bg-red-100 text-red-700 rounded-full\">Crítico</span>;\n      case 'medium':\n        return <span className=\"px-2 py-1 text-xs bg-blue-100 text-blue-700 rounded-full\">Estratégico</span>;\n      case 'low':\n        return <span className=\"px-2 py-1 text-xs bg-green-100 text-green-700 rounded-full\">Insight</span>;\n      default:\n        return null;\n    }\n  };\n\n  if (!isVisible) {\n    return (\n      <button\n        onClick={onToggle}\n        className=\"fixed bottom-6 left-6 bg-blue-600 hover:bg-blue-700 text-white p-3 rounded-full shadow-lg transition-all duration-200 z-50 group\"\n        title=\"Generador de Preguntas AI\"\n      >\n        <Lightbulb size={20} />\n        <div className=\"absolute -top-2 -right-2 w-6 h-6 bg-red-500 text-white text-xs rounded-full flex items-center justify-center animate-pulse\">\n          {promptSuggestions.filter(p => p.priority === 'high').length}\n        </div>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"fixed bottom-6 left-6 w-96 bg-white rounded-lg shadow-xl border border-gray-200 z-50 animate-slideInLeft\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 bg-gradient-to-r from-blue-50 to-indigo-50\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Lightbulb size={20} className=\"text-blue-600\" />\n            <h3 className=\"font-semibold text-gray-900\">Generador de Preguntas AI</h3>\n          </div>\n          <button\n            onClick={onToggle}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            ×\n          </button>\n        </div>\n        <p className=\"text-sm text-gray-600 mt-1\">Preguntas inteligentes de negocio para La Doña</p>\n      </div>\n\n      {/* Category Filters */}\n      <div className=\"p-3 border-b border-gray-100\">\n        <div className=\"flex flex-wrap gap-2\">\n          {categories.map(category => (\n            <button\n              key={category.id}\n              onClick={() => setSelectedCategory(category.id)}\n              className={`px-3 py-1 text-xs rounded-full transition-all ${\n                selectedCategory === category.id\n                  ? 'bg-blue-100 text-blue-700 border border-blue-200'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              }`}\n            >\n              {category.name} ({category.count})\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Prompt List */}\n      <div className=\"max-h-96 overflow-y-auto\">\n        <div className=\"p-3 space-y-2\">\n          {sortedPrompts.map(prompt => (\n            <button\n              key={prompt.id}\n              onClick={() => {\n                onPromptSelect(prompt.text);\n                onToggle();\n              }}\n              className=\"w-full text-left p-3 rounded-lg border border-gray-200 hover:border-blue-300 hover:bg-blue-50 transition-all duration-200 group\"\n            >\n              <div className=\"flex items-start gap-3\">\n                <div className=\"flex-shrink-0 mt-1\">\n                  {prompt.icon}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    {getPriorityBadge(prompt.priority)}\n                    <span className=\"text-xs text-gray-500 uppercase tracking-wide\">\n                      {prompt.category}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-900 group-hover:text-blue-900 transition-colors\">\n                    {prompt.text}\n                  </p>\n                </div>\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div className=\"p-3 border-t border-gray-100 bg-gray-50\">\n        <p className=\"text-xs text-gray-500 text-center\">\n          Haz clic en cualquier pregunta para consultar a La Doña AI al instante\n        </p>\n      </div>\n    </div>\n  );\n}","size_bytes":9183},"client/src/components/protected-route.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nexport default function ProtectedRoute({ children }: ProtectedRouteProps) {\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    // Check if user is logged in (sessionStorage is cleared on refresh)\n    const isLoggedIn = sessionStorage.getItem(\"isLoggedIn\");\n    if (!isLoggedIn) {\n      setLocation(\"/login\");\n    }\n  }, [setLocation]);\n\n  // Only render children if logged in\n  const isLoggedIn = sessionStorage.getItem(\"isLoggedIn\");\n  if (!isLoggedIn) {\n    return null; // Don't render anything while redirecting\n  }\n\n  return <>{children}</>;\n}","size_bytes":701},"client/src/components/sidebar-layout.tsx":{"content":"import React, { useState, useRef, useEffect } from \"react\";\nimport { ArrowUp, Paperclip, Globe, Mic } from \"lucide-react\";\nimport laDonaLogo from \"@assets/Screenshot 2025-05-19 alle 15.08.46.png\";\nimport { TypingMessage } from \"./typing-message\";\n\nfunction Sidebar() {\n  return (\n    <div className=\"fixed top-0 left-0 h-screen w-[180px] bg-[#2a2a2a] border-r border-[#3a3a3a] flex flex-col items-center py-6\" style={{ zIndex: 9999 }}>\n      {/* La Doña logo */}\n      <img\n        src={laDonaLogo}\n        alt=\"La Doña\"\n        className=\"w-10 h-10 mb-8 filter brightness-0 invert\"\n      />\n\n      {/* Plus Button */}\n      <div className=\"mb-12\">\n        <button className=\"w-12 h-12 rounded-full bg-white/10 hover:bg-white/20 flex items-center justify-center text-white transition-all duration-200\">\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Navigation Items */}\n      <div className=\"flex flex-col space-y-6\">\n        {/* Home */}\n        <button className=\"flex flex-col items-center space-y-2 text-gray-400 hover:text-white transition-colors group\">\n          <div className=\"w-10 h-10 rounded-full flex items-center justify-center group-hover:bg-white/10 transition-all\">\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n            </svg>\n          </div>\n          <span className=\"text-xs\">Home</span>\n        </button>\n\n        {/* Scopri */}\n        <button className=\"flex flex-col items-center space-y-2 text-gray-400 hover:text-white transition-colors group\">\n          <div className=\"w-10 h-10 rounded-full flex items-center justify-center group-hover:bg-white/10 transition-all\">\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9\" />\n            </svg>\n          </div>\n          <span className=\"text-xs\">Scopri</span>\n        </button>\n\n        {/* Spazi */}\n        <button className=\"flex flex-col items-center space-y-2 text-gray-400 hover:text-white transition-colors group\">\n          <div className=\"w-10 h-10 rounded-full flex items-center justify-center group-hover:bg-white/10 transition-all\">\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n            </svg>\n          </div>\n          <span className=\"text-xs\">Spazi</span>\n        </button>\n      </div>\n\n      {/* User badge at bottom */}\n      <div className=\"mt-auto\">\n        <div className=\"relative mb-4\">\n          <div className=\"w-12 h-12 bg-teal-500 rounded-full flex items-center justify-center text-white font-bold text-lg\">\n            E\n          </div>\n          <div className=\"absolute -bottom-1 -right-1 bg-blue-500 text-white text-xs px-1.5 py-0.5 rounded text-[10px] font-bold\">\n            PRO\n          </div>\n        </div>\n        <div className=\"w-3 h-3 rounded-full bg-orange-500 mx-auto\"></div>\n      </div>\n    </div>\n  );\n}\n\ninterface Message {\n  id: string;\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\nfunction ChatLayout() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n\n    const messageContent = inputValue.trim();\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: messageContent,\n      isUser: true,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue(\"\");\n    setIsTyping(true);\n\n    try {\n      // Send message to API\n      const response = await fetch('/api/conversations/1/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          content: messageContent,\n          role: 'user'\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n\n      // Get updated messages including AI response\n      const messagesResponse = await fetch('/api/conversations/1/messages');\n      if (messagesResponse.ok) {\n        const data = await messagesResponse.json();\n        setMessages(data.map((msg: any) => ({\n          id: msg.id.toString(),\n          content: msg.content,\n          isUser: msg.role === 'user',\n          timestamp: new Date(msg.timestamp),\n        })));\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Show error message\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: \"I'm experiencing connection issues. Please check your network and try again.\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  if (messages.length === 0 && !isTyping) {\n    return (\n      <div className=\"ml-[180px] flex flex-col items-center justify-center min-h-screen bg-white px-8\">\n        {/* Vorta Logo */}\n        <div className=\"mb-6\">\n          <div className=\"vortex-icon animate-pulse\" style={{ width: '32px', height: '32px' }}>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n          </div>\n        </div>\n\n        {/* Chat input */}\n        <div className=\"flex items-center justify-between w-full max-w-3xl bg-white border border-gray-300 rounded-full shadow px-6 py-4\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Ask about KPIs or performance...\"\n            className=\"flex-grow bg-transparent outline-none text-gray-600 text-lg placeholder:text-gray-400\"\n          />\n          <div className=\"flex items-center gap-4\">\n            <button className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <Paperclip className=\"w-5 h-5\" />\n            </button>\n            <button className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <Globe className=\"w-5 h-5\" />\n            </button>\n            <button className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <Mic className=\"w-5 h-5\" />\n            </button>\n            <button \n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isTyping}\n              className=\"bg-rose-400 hover:bg-rose-500 disabled:bg-gray-300 transition px-4 py-2 rounded-full text-white font-semibold\"\n            >\n              Ask\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ml-[180px] flex flex-col h-screen bg-white\">\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto px-8 py-6\">\n        {messages.map((message, index) => (\n          <TypingMessage\n            key={message.id}\n            content={message.content}\n            isLatestMessage={index === messages.length - 1}\n            messageId={message.id}\n          />\n        ))}\n        \n        {isTyping && (\n          <div className=\"flex items-center gap-3 mb-4\">\n            <div className=\"bg-gray-100 rounded-2xl px-4 py-3\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"flex space-x-1\">\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                </div>\n                <span className=\"text-gray-500 text-sm ml-2\">La Doña AI is thinking...</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input Area */}\n      <div className=\"border-t border-gray-200 px-8 py-4\">\n        <div className=\"flex items-center justify-between w-full max-w-4xl bg-white border border-gray-300 rounded-full shadow px-6 py-4\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Ask about KPIs or performance...\"\n            className=\"flex-grow bg-transparent outline-none text-gray-600 text-lg placeholder:text-gray-400\"\n            disabled={isTyping}\n          />\n          <div className=\"flex items-center gap-4\">\n            <button className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <Paperclip className=\"w-5 h-5\" />\n            </button>\n            <button className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <Globe className=\"w-5 h-5\" />\n            </button>\n            <button className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <Mic className=\"w-5 h-5\" />\n            </button>\n            <button \n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isTyping}\n              className=\"bg-rose-400 hover:bg-rose-500 disabled:bg-gray-300 transition px-4 py-2 rounded-full text-white font-semibold\"\n            >\n              <ArrowUp className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function SidebarLayout() {\n  return (\n    <div className=\"flex\">\n      <Sidebar />\n      <ChatLayout />\n    </div>\n  );\n}","size_bytes":11153},"client/src/components/sidebar.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { useTheme } from \"./theme-provider\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { formatTime } from \"@/lib/utils\";\nimport { cn } from \"@/lib/utils\";\nimport { Plus, User, Moon, Sun, Trash2, Menu, X } from \"lucide-react\";\nimport type { Conversation } from \"@shared/schema\";\n\ninterface SidebarProps {\n  selectedConversationId: number | null;\n  onSelectConversation: (id: number | null) => void;\n  isOpen: boolean;\n  onToggle: () => void;\n}\n\nexport function Sidebar({ \n  selectedConversationId, \n  onSelectConversation, \n  isOpen, \n  onToggle \n}: SidebarProps) {\n  const { theme, toggleTheme } = useTheme();\n  const queryClient = useQueryClient();\n\n  const { data: conversations = [], isLoading } = useQuery<Conversation[]>({\n    queryKey: [\"/api/conversations\"],\n  });\n\n  const createConversationMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"POST\", \"/api/conversations\", {\n        title: \"New conversation\",\n      });\n      return response.json();\n    },\n    onSuccess: (newConversation) => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/conversations\"] });\n      onSelectConversation(newConversation.id);\n    },\n  });\n\n  const deleteConversationMutation = useMutation({\n    mutationFn: async (id: number) => {\n      await apiRequest(\"DELETE\", `/api/conversations/${id}`);\n    },\n    onSuccess: (_, deletedId) => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/conversations\"] });\n      if (selectedConversationId === deletedId) {\n        onSelectConversation(null);\n      }\n    },\n  });\n\n  const handleNewChat = () => {\n    createConversationMutation.mutate();\n  };\n\n  const handleDeleteConversation = (e: React.MouseEvent, id: number) => {\n    e.stopPropagation();\n    deleteConversationMutation.mutate(id);\n  };\n\n  return (\n    <>\n      {/* Mobile overlay */}\n      {isOpen && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-50 z-20 lg:hidden\"\n          onClick={onToggle}\n        />\n      )}\n\n      {/* Sidebar */}\n      <div className=\"w-full bg-white flex flex-col h-full\">\n        {/* Mobile header */}\n        <div className=\"flex items-center justify-between p-4 lg:hidden\">\n          <h1 className=\"text-lg font-semibold\">ChatGPT</h1>\n          <Button variant=\"ghost\" size=\"sm\" onClick={onToggle}>\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </div>\n\n        {/* Sidebar Header */}\n        <div className=\"p-4 border-b border-gray-200\">\n          <Button \n            onClick={handleNewChat}\n            disabled={createConversationMutation.isPending}\n            className=\"w-full justify-start gap-2 bg-la-dona-green hover:bg-la-dona-green/90 text-white border-0\"\n            variant=\"outline\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            Nuevo chat\n          </Button>\n        </div>\n\n        {/* Conversation History */}\n        <ScrollArea className=\"flex-1 p-2\">\n          <div className=\"space-y-1\">\n            {isLoading ? (\n              <div className=\"space-y-2\">\n                {[...Array(5)].map((_, i) => (\n                  <div key={i} className=\"h-12 bg-gray-200 dark:bg-gray-800 rounded-lg animate-pulse\" />\n                ))}\n              </div>\n            ) : conversations.length === 0 ? (\n              <div className=\"p-4 text-center text-gray-500 dark:text-gray-400 text-sm\">\n                Aún no hay conversaciones. ¡Inicia un nuevo chat para comenzar!\n              </div>\n            ) : (\n              conversations.map((conversation) => (\n                <div\n                  key={conversation.id}\n                  onClick={() => onSelectConversation(conversation.id)}\n                  className={cn(\n                    \"px-3 py-2.5 rounded-lg cursor-pointer transition-colors group hover:bg-gray-50\",\n                    selectedConversationId === conversation.id && \"bg-gray-50\"\n                  )}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm font-medium truncate text-gray-800\">\n                        {conversation.title}\n                      </p>\n                      <p className=\"text-xs text-gray-500 mt-0.5\">\n                        {formatTime(conversation.updatedAt)}\n                      </p>\n                    </div>\n                    <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={(e) => handleDeleteConversation(e, conversation.id)}\n                        disabled={deleteConversationMutation.isPending}\n                        className=\"h-6 w-6 p-1 hover:bg-gray-200\"\n                      >\n                        <Trash2 className=\"h-3 w-3 text-gray-400\" />\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </ScrollArea>\n\n        {/* Sidebar Footer */}\n        <div className=\"p-4 border-t border-gray-200\">\n          <div className=\"flex items-center gap-3 px-3 py-2 hover:bg-gray-50 rounded-lg cursor-pointer transition-colors\">\n            <div className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center\">\n              <User className=\"h-4 w-4 text-white\" />\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium truncate text-gray-800\">\n                Juan Pérez\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                Plan gratuito\n              </p>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={toggleTheme}\n              className=\"h-8 w-8 p-1 hover:bg-gray-200\"\n            >\n              {theme === \"dark\" ? (\n                <Sun className=\"h-4 w-4 text-yellow-400\" />\n              ) : (\n                <Moon className=\"h-4 w-4 text-gray-500\" />\n              )}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","size_bytes":6465},"client/src/components/theme-provider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"dark\" | \"light\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: \"light\",\n  setTheme: () => null,\n  toggleTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"light\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(\"theme\") as Theme) || defaultTheme\n  );\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove(\"light\", \"dark\");\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(\"theme\", theme);\n      setTheme(theme);\n    },\n    toggleTheme: () => {\n      const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n      localStorage.setItem(\"theme\", newTheme);\n      setTheme(newTheme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n\n  return context;\n};\n","size_bytes":1529},"client/src/components/typewriter-message.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface TypewriterMessageProps {\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n  isLatest?: boolean;\n}\n\nexport function TypewriterMessage({ content, isUser, timestamp, isLatest = false }: TypewriterMessageProps) {\n  const [displayedContent, setDisplayedContent] = useState(isLatest && !isUser ? \"\" : content);\n  const [isComplete, setIsComplete] = useState(!isLatest || isUser);\n\n  useEffect(() => {\n    if (isLatest && !isUser && !isComplete) {\n      let i = 0;\n      const typeInterval = setInterval(() => {\n        if (i < content.length) {\n          setDisplayedContent(content.slice(0, i + 1));\n          i++;\n        } else {\n          setIsComplete(true);\n          clearInterval(typeInterval);\n        }\n      }, 15); // Typing speed\n\n      return () => clearInterval(typeInterval);\n    }\n  }, [content, isLatest, isUser, isComplete]);\n\n  return (\n    <div\n      className={cn(\n        \"max-w-[80%] mb-4 animate-fadeInUp\",\n        isUser ? \"ml-auto\" : \"mr-auto\"\n      )}\n    >\n      <div\n        className={cn(\n          \"px-4 py-3 rounded-2xl leading-relaxed shadow-sm\",\n          isUser\n            ? \"bg-gray-100 text-gray-900 rounded-br-sm\"\n            : \"bg-gray-50 text-gray-800 rounded-bl-sm border border-gray-100\"\n        )}\n      >\n        <div className=\"whitespace-pre-wrap break-words\">\n          {displayedContent}\n          {isLatest && !isUser && !isComplete && (\n            <span className=\"inline-block w-2 h-5 bg-gray-400 animate-pulse ml-1\" />\n          )}\n        </div>\n      </div>\n      <div className={cn(\n        \"text-xs text-gray-400 mt-1 px-1\",\n        isUser ? \"text-right\" : \"text-left\"\n      )}>\n        {timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n      </div>\n    </div>\n  );\n}","size_bytes":1843},"client/src/components/typing-message.tsx":{"content":"import { useState, useEffect } from \"react\";\n\ninterface TypingMessageProps {\n  content: string;\n  isLatestMessage: boolean;\n  onComplete?: () => void;\n  messageId?: string;\n}\n\nexport function TypingMessage({ content, isLatestMessage, onComplete, messageId }: TypingMessageProps) {\n  const [displayedContent, setDisplayedContent] = useState(\"\");\n  const [isComplete, setIsComplete] = useState(false);\n\n  useEffect(() => {\n    if (isLatestMessage && !isComplete) {\n      let i = 0;\n      const typingSpeed = 12;\n      \n      const typeInterval = setInterval(() => {\n        if (i < content.length) {\n          setDisplayedContent(content.slice(0, i + 1));\n          i++;\n        } else {\n          setIsComplete(true);\n          clearInterval(typeInterval);\n          onComplete?.();\n        }\n      }, typingSpeed);\n\n      return () => clearInterval(typeInterval);\n    } else if (!isLatestMessage) {\n      setDisplayedContent(content);\n      setIsComplete(true);\n    }\n  }, [content, isLatestMessage, isComplete, onComplete]);\n\n  return (\n    <div className=\"message bot\">\n      <div \n        className=\"leading-relaxed prose prose-gray max-w-none [&>*]:mb-3 [&>*:last-child]:mb-0\"\n        dangerouslySetInnerHTML={{ \n          __html: displayedContent\n            .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n            .replace(/🔎 \\*\\*(.*?)\\*\\*/g, '<h3 class=\"section-header\">🔎 $1</h3>')\n            .replace(/✅ \\*\\*(.*?)\\*\\*/g, '<h3 class=\"section-header\">✅ $1</h3>')\n            .replace(/📊 \\*\\*(.*?)\\*\\*/g, '<h3 class=\"section-header\">📊 $1</h3>')\n            .replace(/⚖️ \\*\\*(.*?)\\*\\*/g, '<h3 class=\"section-header\">⚖️ $1</h3>')\n            .replace(/- 🔸 \\*\\*(.*?)\\*\\*/g, '<div class=\"ml-4 mb-1\">• <strong>$1</strong>')\n            .replace(/\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|([^|]+)\\|/g, '<table><tr><th>$1</th><th>$2</th><th>$3</th><th>$4</th></tr></table>')\n            .replace(/\\n/g, '<br/>')\n        }}\n      />\n      {/* Chart generation removed */}\n    </div>\n  );\n}","size_bytes":2009},"client/src/data/entities.js":{"content":"/**\n * Data Registry - Realistic mock data for La Doña business entities\n * Provides KPIs, Products, Zones, and Reports with authentic business metrics\n */\n\n// Generate realistic time series data\nfunction generateSeries(baseValue, periods = 12, volatility = 0.1) {\n  const series = [];\n  const today = new Date();\n  \n  for (let i = periods; i >= 0; i--) {\n    const date = new Date(today);\n    date.setDate(date.getDate() - (i * 7)); // Weekly data points\n    \n    const variation = (Math.random() - 0.5) * volatility * baseValue;\n    const value = Math.max(0, baseValue + variation);\n    \n    series.push({\n      date: date.toISOString().split('T')[0],\n      value: Math.round(value)\n    });\n  }\n  \n  return series;\n}\n\n// KPI Registry\nexport const kpis = {\n  performanceScore: {\n    id: 'performance-score',\n    title: 'Performance Score',\n    unit: 'points',\n    currentValue: 78.5,\n    target: 85,\n    series: generateSeries(78, 12, 0.08),\n    description: 'Composite performance metric across all business units'\n  },\n  inventoryTurnover: {\n    id: 'inventory-turnover',\n    title: 'Inventory Turnover',\n    unit: 'turns/year',\n    currentValue: 6.2,\n    target: 8.0,\n    series: generateSeries(6.2, 12, 0.15),\n    description: 'Rate at which inventory is sold and replaced over a period'\n  },\n  serviceLevel: {\n    id: 'service-level',\n    title: 'Service Level',\n    unit: '%',\n    currentValue: 94.2,\n    target: 98.0,\n    series: generateSeries(94, 12, 0.03),\n    description: 'Percentage of customer demand met from available inventory'\n  },\n  grossMargin: {\n    id: 'gross-margin',\n    title: 'Gross Margin',\n    unit: '%',\n    currentValue: 35.8,\n    target: 40.0,\n    series: generateSeries(36, 12, 0.05),\n    description: 'Revenue minus cost of goods sold as percentage of revenue'\n  }\n};\n\n// Product Registry\nexport const products = {\n  mangoSalsa: {\n    id: 'mango-salsa',\n    name: 'Mango Salsa Premium',\n    category: 'Condiments',\n    price: 12.50,\n    cogs: 0.65, // 65% cost of goods sold\n    demandSeries: generateSeries(1200, 12, 0.12),\n    series: generateSeries(1200, 12, 0.12), // Alias for compatibility\n    stockOnHand: 4800,\n    leadTime: 14,\n    description: 'Premium mango salsa with authentic tropical flavors',\n    zones: ['chiriqui', 'panama', 'colon']\n  },\n  premiumVinegar: {\n    id: 'premium-vinegar',\n    name: 'Vinagre Artesanal Premium',\n    category: 'Vinegars',\n    price: 8.75,\n    cogs: 0.58,\n    demandSeries: generateSeries(850, 12, 0.15),\n    series: generateSeries(850, 12, 0.15),\n    stockOnHand: 3200,\n    leadTime: 10,\n    description: 'Artisanal vinegar with traditional fermentation process',\n    zones: ['chiriqui', 'panama']\n  },\n  spicyMustard: {\n    id: 'spicy-mustard',\n    name: 'Mostaza Picante Especial',\n    category: 'Condiments',\n    price: 6.25,\n    cogs: 0.52,\n    demandSeries: generateSeries(2100, 12, 0.18),\n    series: generateSeries(2100, 12, 0.18),\n    stockOnHand: 6400,\n    leadTime: 7,\n    description: 'Special spicy mustard blend with local pepper varieties',\n    zones: ['chiriqui', 'panama', 'colon', 'veraguas']\n  }\n};\n\n// Zone Registry\nexport const zones = {\n  chiriqui: {\n    id: 'chiriqui',\n    name: 'Chiriquí Central',\n    region: 'Chiriquí',\n    demandDistribution: {\n      mangoSalsa: 0.35,\n      premiumVinegar: 0.28,\n      spicyMustard: 0.42\n    },\n    series: generateSeries(3200, 12, 0.14),\n    population: 185000,\n    marketPenetration: 0.68,\n    description: 'Primary distribution hub for western Panama'\n  },\n  panama: {\n    id: 'panama',\n    name: 'Panamá Metropolitana',\n    region: 'Panamá',\n    demandDistribution: {\n      mangoSalsa: 0.45,\n      premiumVinegar: 0.38,\n      spicyMustard: 0.52\n    },\n    series: generateSeries(5800, 12, 0.10),\n    population: 1200000,\n    marketPenetration: 0.34,\n    description: 'Metropolitan Panama City market with highest volume potential'\n  },\n  colon: {\n    id: 'colon',\n    name: 'Colón Atlántico',\n    region: 'Colón',\n    demandDistribution: {\n      mangoSalsa: 0.22,\n      premiumVinegar: 0.15,\n      spicyMustard: 0.35\n    },\n    series: generateSeries(1400, 12, 0.20),\n    population: 95000,\n    marketPenetration: 0.45,\n    description: 'Atlantic coast market with growing demand potential'\n  },\n  veraguas: {\n    id: 'veraguas',\n    name: 'Veraguas Interior',\n    region: 'Veraguas',\n    demandDistribution: {\n      mangoSalsa: 0.18,\n      premiumVinegar: 0.12,\n      spicyMustard: 0.28\n    },\n    series: generateSeries(890, 12, 0.25),\n    population: 68000,\n    marketPenetration: 0.52,\n    description: 'Interior market with seasonal demand variations'\n  }\n};\n\n// Report Registry\nexport const reports = {\n  q3Forecast: {\n    id: 'q3-forecast',\n    title: 'Q3 2025 Demand Forecast',\n    type: 'forecast',\n    summary: 'Comprehensive demand projections for Q3 showing 12% growth in premium products with seasonal adjustments for mango salsa and promotional calendar integration.',\n    generatedDate: '2025-08-01',\n    author: 'Sofia Chen',\n    department: 'Analytics',\n    tags: ['forecast', 'demand', 'seasonal', 'growth'],\n    keyMetrics: {\n      totalDemandGrowth: 12.3,\n      premiumCategoryGrowth: 18.7,\n      seasonalityFactor: 1.15,\n      confidenceLevel: 87\n    }\n  },\n  stockoutAnalysis: {\n    id: 'stockout-analysis',\n    title: 'Stockout Risk Analysis - August 2025',\n    type: 'risk-assessment',\n    summary: 'Analysis of current inventory levels versus projected demand identifying critical stockout risks for Mango Salsa in Chiriquí Central and recommended emergency transfers.',\n    generatedDate: '2025-08-10',\n    author: 'Miguel Santos',\n    department: 'Operations',\n    tags: ['inventory', 'stockout', 'risk', 'transfer'],\n    keyMetrics: {\n      criticalItems: 3,\n      stockoutRisk: 23.5,\n      daysOfCoverage: 8.2,\n      emergencyTransferValue: 48500\n    }\n  },\n  performanceReview: {\n    id: 'performance-review',\n    title: 'Monthly Performance Review - July 2025',\n    type: 'performance',\n    summary: 'Comprehensive review of operational performance metrics showing service level improvements and margin optimization opportunities across all product categories.',\n    generatedDate: '2025-08-05',\n    author: 'Elena Rodriguez',\n    department: 'Sales',\n    tags: ['performance', 'kpi', 'optimization', 'monthly'],\n    keyMetrics: {\n      overallPerformance: 78.5,\n      serviceLevel: 94.2,\n      marginImprovement: 2.3,\n      targetAchievement: 87.2\n    }\n  },\n  marketAnalysis: {\n    id: 'market-analysis',\n    title: 'Market Expansion Analysis - Pacific Coast',\n    type: 'market-research',\n    summary: 'Detailed analysis of market expansion opportunities in Pacific coast regions with demographic data, competitive landscape, and revenue projections.',\n    generatedDate: '2025-08-08',\n    author: 'Carlos Mendez',\n    department: 'Business Development',\n    tags: ['market', 'expansion', 'pacific', 'opportunity'],\n    keyMetrics: {\n      marketPotential: 234000,\n      competitorShare: 15.2,\n      projectedRevenue: 156000,\n      investmentRequired: 45000\n    }\n  }\n};\n\n// Utility functions for data access\nexport function getEntityById(type, id) {\n  const registries = { kpis, products, zones, reports };\n  return registries[type]?.[id] || null;\n}\n\nexport function getEntitiesByType(type) {\n  const registries = { kpis, products, zones, reports };\n  return registries[type] || {};\n}\n\nexport function getAllEntities() {\n  return {\n    kpis: Object.values(kpis),\n    products: Object.values(products),\n    zones: Object.values(zones),\n    reports: Object.values(reports)\n  };\n}\n\nexport function searchEntities(query, type = null) {\n  const allEntities = getAllEntities();\n  const searchTargets = type ? [type] : Object.keys(allEntities);\n  \n  const results = [];\n  searchTargets.forEach(entityType => {\n    allEntities[entityType].forEach(entity => {\n      if (\n        entity.name?.toLowerCase().includes(query.toLowerCase()) ||\n        entity.title?.toLowerCase().includes(query.toLowerCase()) ||\n        entity.description?.toLowerCase().includes(query.toLowerCase())\n      ) {\n        results.push({ ...entity, entityType });\n      }\n    });\n  });\n  \n  return results;\n}","size_bytes":8164},"client/src/data/entities.ts":{"content":"// Mock data for entities referenced in collaboration comments\nexport interface EntityData {\n  id: string;\n  title: string;\n  type: 'kpi' | 'zone' | 'product' | 'report';\n  description: string;\n  value?: string;\n  trend?: number[];\n  lastUpdated: string;\n}\n\nexport const entitiesData: Record<string, EntityData> = {\n  'performance-score': {\n    id: 'performance-score',\n    title: 'Performance Score',\n    type: 'kpi',\n    description: 'Overall business performance index based on sales, efficiency, and customer satisfaction metrics.',\n    value: '87.3%',\n    trend: [82, 85, 89, 87, 91, 88, 87],\n    lastUpdated: '2025-08-12T10:30:00Z'\n  },\n  'chiriqui': {\n    id: 'chiriqui',\n    title: 'Chiriquí Central',\n    type: 'zone',\n    description: 'Primary distribution zone covering central Chiriquí province with 15 active retail partners.',\n    value: 'Active',\n    trend: [95, 92, 88, 85, 87, 89, 91],\n    lastUpdated: '2025-08-12T09:15:00Z'\n  },\n  'mango-salsa': {\n    id: 'mango-salsa',\n    title: 'Mango Salsa Verde',\n    type: 'product',\n    description: 'Premium artisanal mango salsa, top performer in condiment category.',\n    value: '$12,450',\n    trend: [8500, 9200, 10100, 11800, 12100, 12800, 12450],\n    lastUpdated: '2025-08-12T08:45:00Z'\n  },\n  'q3-forecast': {\n    id: 'q3-forecast',\n    title: 'Q3 Sales Forecast',\n    type: 'report',\n    description: 'Quarterly sales projection analysis with market trends and growth opportunities.',\n    value: '+15.2%',\n    trend: [100, 105, 108, 112, 115, 118, 115],\n    lastUpdated: '2025-08-12T07:30:00Z'\n  },\n  'inventory-turnover': {\n    id: 'inventory-turnover',\n    title: 'Inventory Turnover',\n    type: 'kpi',\n    description: 'Rate at which inventory is sold and replaced over time period.',\n    value: '6.2x',\n    trend: [5.8, 6.0, 6.1, 5.9, 6.3, 6.4, 6.2],\n    lastUpdated: '2025-08-12T11:00:00Z'\n  }\n};\n\nexport const teamMembers = [\n  { id: 'elena', name: 'Elena Rodriguez', role: 'Sales Director', avatar: 'ER', online: true },\n  { id: 'miguel', name: 'Miguel Santos', role: 'Operations Manager', avatar: 'MS', online: true },\n  { id: 'sofia', name: 'Sofia Chen', role: 'Analytics Lead', avatar: 'SC', online: false },\n  { id: 'carlos', name: 'Carlos Mendez', role: 'Regional Manager', avatar: 'CM', online: true },\n  { id: 'lucia', name: 'Lucia Morales', role: 'Data Scientist', avatar: 'LM', online: false }\n];\n\nexport function getEntityById(id: string): EntityData | undefined {\n  return entitiesData[id];\n}\n\nexport function parseChips(text: string): Array<{type: string, value: string, id: string}> {\n  const chipPattern = /#(kpi|zone|product|report):([^#\\s,]+)/g;\n  const chips: Array<{type: string, value: string, id: string}> = [];\n  let match;\n  \n  while ((match = chipPattern.exec(text)) !== null) {\n    const [, type, value] = match;\n    const id = value.toLowerCase().replace(/\\s+/g, '-');\n    chips.push({ type, value, id });\n  }\n  \n  return chips;\n}","size_bytes":2932},"client/src/data/formulas.js":{"content":"/**\n * Business Intelligence Formulas - Pure, deterministic calculations\n * All functions accept simple inputs and return numbers/series without UI logic\n */\n\n/**\n * Forecasts demand based on historical series and growth percentage\n * @param {Array} baseSeries - Array of {date, value} objects\n * @param {number} growthPct - Growth percentage (e.g., 0.15 for 15% growth)\n * @returns {Array} Forecasted series with future periods multiplied by growth factor\n */\nexport function forecastDemand(baseSeries, growthPct) {\n  if (!baseSeries || baseSeries.length === 0) return [];\n  \n  const growthFactor = 1 + growthPct;\n  return baseSeries.map(point => ({\n    ...point,\n    value: point.value * growthFactor\n  }));\n}\n\n/**\n * Calculates demand impact based on price elasticity\n * @param {number} demand - Base demand value\n * @param {number} priceChangePct - Price change percentage (e.g., 0.10 for 10% increase)\n * @param {number} elasticity - Price elasticity coefficient (default: -1.3)\n * @returns {number} Adjusted demand after price change\n */\nexport function priceElasticity(demand, priceChangePct, elasticity = -1.3) {\n  return demand * (1 + elasticity * priceChangePct);\n}\n\n/**\n * Calculates promotional uplift on demand\n * @param {number} demand - Base demand value\n * @param {number} promoMultiplier - Promotional multiplier (e.g., 1.8 for 80% uplift)\n * @returns {number} Demand after promotional uplift\n */\nexport function promoUplift(demand, promoMultiplier) {\n  return demand * promoMultiplier;\n}\n\n/**\n * Calculates inventory coverage in days/weeks\n * @param {Array} demandSeries - Array of {date, value} demand projections\n * @param {number} stockOnHand - Current stock available\n * @returns {number} Days of coverage based on average demand\n */\nexport function inventoryCoverage(demandSeries, stockOnHand) {\n  if (!demandSeries || demandSeries.length === 0) return 0;\n  \n  const avgDailyDemand = demandSeries.reduce((sum, point) => sum + point.value, 0) / demandSeries.length;\n  return avgDailyDemand > 0 ? stockOnHand / avgDailyDemand : 0;\n}\n\n/**\n * Calculates lead time impact on availability and stockouts\n * @param {Array} demandSeries - Array of {date, value} demand projections\n * @param {number} leadTimeDays - Lead time in days\n * @returns {Object} Impact analysis with stockout risk and availability shifts\n */\nexport function leadTimeImpact(demandSeries, leadTimeDays) {\n  if (!demandSeries || demandSeries.length === 0) {\n    return { stockoutRisk: 0, availabilityShift: 0, impactedPeriods: 0 };\n  }\n  \n  const totalDemand = demandSeries.reduce((sum, point) => sum + point.value, 0);\n  const stockoutRisk = Math.min(leadTimeDays / 30, 1); // Risk increases with lead time\n  const impactedPeriods = Math.ceil(leadTimeDays / 7); // Number of weeks affected\n  \n  return {\n    stockoutRisk: stockoutRisk * 100, // Percentage\n    availabilityShift: leadTimeDays,\n    impactedPeriods,\n    demandAtRisk: totalDemand * stockoutRisk\n  };\n}\n\n/**\n * Calculates revenue from demand series and unit price\n * @param {Array} demandSeries - Array of {date, value} demand values\n * @param {number} unitPrice - Price per unit\n * @returns {number} Total revenue\n */\nexport function revenue(demandSeries, unitPrice) {\n  if (!demandSeries || demandSeries.length === 0) return 0;\n  \n  const totalUnits = demandSeries.reduce((sum, point) => sum + point.value, 0);\n  return totalUnits * unitPrice;\n}\n\n/**\n * Calculates margin from revenue and COGS percentage\n * @param {number} revenue - Total revenue\n * @param {number} cogsPct - Cost of goods sold as percentage (e.g., 0.65 for 65%)\n * @returns {number} Gross margin\n */\nexport function margin(revenue, cogsPct) {\n  return revenue * (1 - cogsPct);\n}\n\n/**\n * Orchestrates scenario simulation by combining all formulas\n * @param {Object} inputs - Scenario inputs\n * @param {Object} inputs.entity - Selected entity (KPI/Product/Zone)\n * @param {number} inputs.demandGrowth - Demand growth percentage\n * @param {number} inputs.priceChange - Price change percentage\n * @param {number} inputs.promoMultiplier - Promotional multiplier\n * @param {number} inputs.leadTime - Lead time in days\n * @param {number} inputs.stockAvailable - Available stock units\n * @returns {Object} Scenario results with current and simulated metrics\n */\nexport function simulateScenario(inputs) {\n  const {\n    entity,\n    demandGrowth = 0,\n    priceChange = 0,\n    promoMultiplier = 1,\n    leadTime = 7,\n    stockAvailable = 1000\n  } = inputs;\n\n  if (!entity || !entity.series) {\n    return {\n      current: { revenue: 0, units: 0, margin: 0, serviceLevel: 100 },\n      simulated: { revenue: 0, units: 0, margin: 0, serviceLevel: 100 }\n    };\n  }\n\n  // Current metrics calculation\n  const currentDemand = entity.series.reduce((sum, point) => sum + point.value, 0);\n  const currentRevenue = revenue(entity.series, entity.price || 12.50);\n  const currentMargin = margin(currentRevenue, entity.cogs || 0.65);\n  const currentCoverage = inventoryCoverage(entity.series, stockAvailable);\n  \n  // Simulated metrics calculation\n  let simulatedSeries = [...entity.series];\n  \n  // Apply demand growth\n  if (demandGrowth !== 0) {\n    simulatedSeries = forecastDemand(simulatedSeries, demandGrowth);\n  }\n  \n  // Apply promotional uplift\n  if (promoMultiplier !== 1) {\n    simulatedSeries = simulatedSeries.map(point => ({\n      ...point,\n      value: promoUplift(point.value, promoMultiplier)\n    }));\n  }\n  \n  // Apply price elasticity\n  let adjustedPrice = entity.price || 12.50;\n  if (priceChange !== 0) {\n    adjustedPrice = adjustedPrice * (1 + priceChange);\n    simulatedSeries = simulatedSeries.map(point => ({\n      ...point,\n      value: priceElasticity(point.value, priceChange)\n    }));\n  }\n  \n  // Calculate simulated metrics\n  const simulatedDemand = simulatedSeries.reduce((sum, point) => sum + point.value, 0);\n  const simulatedRevenue = revenue(simulatedSeries, adjustedPrice);\n  const simulatedMargin = margin(simulatedRevenue, entity.cogs || 0.65);\n  const simulatedCoverage = inventoryCoverage(simulatedSeries, stockAvailable);\n  const leadTimeAnalysis = leadTimeImpact(simulatedSeries, leadTime);\n  \n  // Service level calculation based on coverage and lead time\n  const currentServiceLevel = Math.min(100, currentCoverage * 10);\n  const simulatedServiceLevel = Math.max(0, Math.min(100, simulatedCoverage * 10 - leadTimeAnalysis.stockoutRisk));\n\n  return {\n    current: {\n      revenue: Math.round(currentRevenue),\n      units: Math.round(currentDemand),\n      margin: Math.round(currentMargin),\n      serviceLevel: Math.round(currentServiceLevel),\n      series: entity.series\n    },\n    simulated: {\n      revenue: Math.round(simulatedRevenue),\n      units: Math.round(simulatedDemand),\n      margin: Math.round(simulatedMargin),\n      serviceLevel: Math.round(simulatedServiceLevel),\n      series: simulatedSeries,\n      priceChange: ((adjustedPrice / (entity.price || 12.50)) - 1) * 100,\n      leadTimeImpact: leadTimeAnalysis\n    }\n  };\n}","size_bytes":6974},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/mockData.ts":{"content":"// mockData.ts\n\nexport interface KpiData {\n  title: string;\n  description: string;\n  value: string;\n}\n\nexport interface PromptData {\n  title: string;\n  description: string;\n}\n\nexport const kpiData: KpiData[] = [\n  {\n    title: \"Performance Score\",\n    description: \"82% of sales target achieved\",\n    value: \"88\",\n  },\n  {\n    title: \"Risk Zones\",\n    description: \"Chiriquí, Colón, San Miguelito\",\n    value: \"3 Zones\",\n  },\n  {\n    title: \"Product Opportunity\",\n    description: \"High potential · Weak: Mango Salsa\",\n    value: \"Premium Vinegar\",\n  },\n];\n\nexport const promptData: PromptData[] = [\n  {\n    title: \"Calculate estimated backorder loss\",\n    description: \"Predicted $527K in July - analyze actual vs forecast with recovery plan\",\n  },\n  {\n    title: \"Analyze regional performance\",\n    description: \"Get a breakdown of sales performance by region\",\n  },\n  {\n    title: \"Identify underperforming areas\",\n    description: \"Show KPIs not meeting targets with action plans\",\n  },\n  {\n    title: \"Review slow-moving inventory\",\n    description: \"Analyze products with low turnover rates\",\n  },\n  {\n    title: \"Generate quarterly forecast\",\n    description: \"Predict performance based on current trends\",\n  },\n  {\n    title: \"Budget variance analysis\",\n    description: \"Compare actual vs planned spending across departments\",\n  },\n  {\n    title: \"Channel performance review\",\n    description: \"Evaluate distribution channels and identify opportunities\",\n  },\n];","size_bytes":1474},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey[0] as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1376},"client/src/lib/utils.ts":{"content":"import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatTime(date: Date | string): string {\n  const d = new Date(date);\n  const now = new Date();\n  const diffInMinutes = Math.floor((now.getTime() - d.getTime()) / (1000 * 60));\n  const diffInHours = Math.floor(diffInMinutes / 60);\n  const diffInDays = Math.floor(diffInHours / 24);\n\n  if (diffInMinutes < 1) {\n    return \"Just now\";\n  } else if (diffInMinutes < 60) {\n    return `${diffInMinutes} ${diffInMinutes === 1 ? 'minute' : 'minutes'} ago`;\n  } else if (diffInHours < 24) {\n    return `${diffInHours} ${diffInHours === 1 ? 'hour' : 'hours'} ago`;\n  } else if (diffInDays === 1) {\n    return \"Yesterday\";\n  } else if (diffInDays < 7) {\n    return `${diffInDays} days ago`;\n  } else if (diffInDays < 30) {\n    const weeks = Math.floor(diffInDays / 7);\n    return `${weeks} ${weeks === 1 ? 'week' : 'weeks'} ago`;\n  } else {\n    return d.toLocaleDateString();\n  }\n}\n\nexport function formatTimeShort(date: Date | string): string {\n  const d = new Date(date);\n  return d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n}\n\nexport function truncateText(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text;\n  return text.slice(0, maxLength) + '...';\n}\n","size_bytes":1386},"client/src/pages/BusinessContextPrompts.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useLocation } from 'wouter';\n\ninterface BusinessPrompt {\n  id: number;\n  question: string;\n  tag?: string;\n}\n\nconst suggestedPrompts = [\n  \"What are our top-performing SKUs this quarter?\",\n  \"Which stores are lagging behind in Q2?\", \n  \"Where are we losing margin and why?\",\n  \"Which campaigns drove the highest ROI last month?\",\n  \"Which clients are most profitable?\",\n  \"What changed in Q3 vs Q2?\",\n  \"Which products have declining sales trends?\",\n  \"What are our customer retention rates by segment?\"\n];\n\nconst promptTags = ['Sales', 'Marketing', 'Finance', 'Operations', 'Analytics'];\n\nexport default function BusinessContextPrompts() {\n  const [, setLocation] = useLocation();\n  const [prompts, setPrompts] = useState<BusinessPrompt[]>([\n    { id: 1, question: '', tag: undefined },\n    { id: 2, question: '', tag: undefined },\n    { id: 3, question: '', tag: undefined }\n  ]);\n\n  const addPrompt = () => {\n    if (prompts.length < 5) {\n      setPrompts([...prompts, { id: Date.now(), question: '', tag: undefined }]);\n    }\n  };\n\n  const removePrompt = (id: number) => {\n    if (prompts.length > 1) {\n      setPrompts(prompts.filter(p => p.id !== id));\n    }\n  };\n\n  const updatePrompt = (id: number, field: keyof BusinessPrompt, value: string) => {\n    setPrompts(prompts.map(p => \n      p.id === id ? { ...p, [field]: value } : p\n    ));\n  };\n\n  const generateSuggestions = () => {\n    const shuffled = [...suggestedPrompts].sort(() => 0.5 - Math.random());\n    const newPrompts = prompts.map((p, idx) => ({\n      ...p,\n      question: p.question || shuffled[idx] || ''\n    }));\n    setPrompts(newPrompts);\n  };\n\n  const hasValidPrompts = () => {\n    return prompts.some(p => p.question.trim().length > 0);\n  };\n\n  const handleContinue = () => {\n    // Save prompts to localStorage or send to backend\n    const validPrompts = prompts.filter(p => p.question.trim().length > 0);\n    localStorage.setItem('businessPrompts', JSON.stringify(validPrompts));\n    setLocation('/dashboard');\n  };\n\n  const handleSkip = () => {\n    setLocation('/dashboard');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\n      {/* Background Pattern */}\n      <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_1px_1px,rgba(255,255,255,0.05)_1px,transparent_0)] [background-size:24px_24px]\"></div>\n      \n      <div className=\"relative z-10 min-h-screen flex items-center justify-center p-6\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-4xl\"\n        >\n          {/* Header Section */}\n          <div className=\"text-center mb-12\">\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              className=\"inline-flex items-center space-x-3 mb-6\"\n            >\n              <div className=\"w-12 h-12 bg-gradient-to-br from-slate-600/80 to-slate-700/80 rounded-xl flex items-center justify-center border border-slate-500/30 shadow-lg\">\n                <svg className=\"w-6 h-6 text-slate-200\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-3xl font-bold text-slate-100\">Let VORTA understand your goals</h1>\n                <p className=\"text-slate-400 mt-2\">Define the key business questions you ask most often</p>\n              </div>\n            </motion.div>\n\n            <div className=\"bg-slate-800/40 border border-slate-600/30 rounded-xl p-6 backdrop-blur-sm\">\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"w-8 h-8 bg-blue-500/20 rounded-lg flex items-center justify-center border border-blue-400/30\">\n                  <svg className=\"w-4 h-4 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"text-left\">\n                  <h3 className=\"text-sm font-medium text-slate-200 mb-2\">Why this helps VORTA reason better</h3>\n                  <p className=\"text-xs text-slate-400 leading-relaxed\">\n                    By understanding your common business questions, VORTA learns your language and priorities. \n                    This enables smarter responses, relevant suggestions, and faster insights aligned with your goals.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Content Card */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"bg-gradient-to-br from-slate-800/50 to-slate-800/30 border border-slate-600/30 rounded-xl shadow-2xl backdrop-blur-sm\"\n          >\n            <div className=\"p-8\">\n              {/* Header with suggestion button */}\n              <div className=\"flex items-center justify-between mb-8\">\n                <div>\n                  <h2 className=\"text-xl font-semibold text-slate-100\">Business Context Questions</h2>\n                  <p className=\"text-sm text-slate-400 mt-1\">Enter 3-5 questions you frequently ask about your data</p>\n                </div>\n                <button\n                  onClick={generateSuggestions}\n                  className=\"flex items-center space-x-2 px-4 py-2 bg-slate-700/50 hover:bg-slate-600/50 border border-slate-600/40 rounded-lg text-sm text-slate-300 transition-all duration-200\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span>Generate ideas</span>\n                </button>\n              </div>\n\n              {/* Prompts Input Section */}\n              <div className=\"space-y-6\">\n                {prompts.map((prompt, index) => (\n                  <motion.div\n                    key={prompt.id}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    className=\"group\"\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"flex-shrink-0 w-8 h-8 bg-slate-600/40 border border-slate-500/30 rounded-full flex items-center justify-center mt-2\">\n                        <span className=\"text-sm text-slate-400 font-medium\">{index + 1}</span>\n                      </div>\n                      \n                      <div className=\"flex-1 space-y-3\">\n                        <div className=\"relative\">\n                          <input\n                            value={prompt.question}\n                            onChange={(e) => updatePrompt(prompt.id, 'question', e.target.value)}\n                            placeholder={`e.g., ${suggestedPrompts[index % suggestedPrompts.length]}`}\n                            className=\"w-full px-4 py-3 bg-slate-700/20 border border-slate-600/40 rounded-xl text-sm text-slate-200 placeholder-slate-500 focus:border-slate-500/60 focus:bg-slate-700/30 focus:outline-none focus:ring-2 focus:ring-slate-500/20 transition-all duration-200 group-hover:bg-slate-700/25\"\n                          />\n                        </div>\n                        \n                        {/* Tag Selection */}\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-xs text-slate-500\">Category:</span>\n                          <select\n                            value={prompt.tag || ''}\n                            onChange={(e) => updatePrompt(prompt.id, 'tag', e.target.value)}\n                            className=\"text-xs bg-slate-700/40 border border-slate-600/30 rounded-md px-2 py-1 text-slate-400 focus:outline-none focus:border-slate-500/60\"\n                          >\n                            <option value=\"\">Optional</option>\n                            {promptTags.map(tag => (\n                              <option key={tag} value={tag}>{tag}</option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n\n                      {prompts.length > 1 && (\n                        <button\n                          onClick={() => removePrompt(prompt.id)}\n                          className=\"flex-shrink-0 w-8 h-8 text-slate-500 hover:text-slate-400 hover:bg-slate-700/40 rounded-lg transition-colors mt-2 flex items-center justify-center\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </button>\n                      )}\n                    </div>\n                  </motion.div>\n                ))}\n\n                {/* Add Prompt Button */}\n                {prompts.length < 5 && (\n                  <motion.button\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    onClick={addPrompt}\n                    className=\"flex items-center space-x-2 text-slate-400 hover:text-slate-300 transition-colors p-2\"\n                  >\n                    <div className=\"w-8 h-8 border-2 border-dashed border-slate-600 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                    <span className=\"text-sm\">Add another question</span>\n                  </motion.button>\n                )}\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex items-center justify-between mt-10 pt-6 border-t border-slate-600/20\">\n                <button\n                  onClick={handleSkip}\n                  className=\"px-6 py-2 text-slate-400 hover:text-slate-300 transition-colors text-sm\"\n                >\n                  Skip for now\n                </button>\n                \n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"text-xs text-slate-500\">\n                    {prompts.filter(p => p.question.trim()).length} of {prompts.length} questions added\n                  </div>\n                  <button\n                    onClick={handleContinue}\n                    disabled={!hasValidPrompts()}\n                    className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 ${\n                      hasValidPrompts()\n                        ? 'bg-slate-600 hover:bg-slate-500 text-white shadow-lg'\n                        : 'bg-slate-700/50 text-slate-500 cursor-not-allowed'\n                    }`}\n                  >\n                    Continue to Dashboard\n                  </button>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}","size_bytes":12126},"client/src/pages/MainDashboard.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Card } from \"@/components/ui/card\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { kpiData, promptData, type KpiData, type PromptData } from \"@/lib/mockData\";\n\nfunction TypewriterText({ text, speed = 20 }: { text: string; speed?: number }) {\n  const [displayedText, setDisplayedText] = useState(\"\");\n  \n  useEffect(() => {\n    let i = 0;\n    const interval = setInterval(() => {\n      setDisplayedText(text.slice(0, i));\n      i++;\n      if (i > text.length) clearInterval(interval);\n    }, speed);\n    return () => clearInterval(interval);\n  }, [text, speed]);\n\n  return (\n    <div \n      className=\"text-sm text-white leading-relaxed transition-all duration-500 ease-out\"\n      dangerouslySetInnerHTML={{\n        __html: displayedText\n      }}\n    />\n  );\n}\n\nexport default function MainDashboard() {\n  const [activeTab, setActiveTab] = useState(\"KPIs\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [chatMode, setChatMode] = useState(false);\n  const [messages, setMessages] = useState<Array<{role: 'user' | 'assistant', content: string}>>([]);\n  const [, setLocation] = useLocation();\n\n  const handlePromptClick = (prompt: PromptData) => {\n    const question = `${prompt.title}`;\n    setInputValue(question);\n  };\n\n  const handleSubmit = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    \n    setIsLoading(true);\n    setChatMode(true);\n    \n    // Add user message\n    const userMessage = { role: 'user' as const, content: inputValue };\n    setMessages(prev => [...prev, userMessage]);\n    const currentQuery = inputValue;\n    setInputValue(\"\");\n    \n    // Simulate AI response with specialized content for backorder loss calculation\n    setTimeout(() => {\n      let responseContent = '';\n      \n      if (currentQuery.toLowerCase().includes('backorder') || currentQuery.toLowerCase().includes('527k')) {\n        responseContent = `<div class=\"space-y-6\">\n<h3 class=\"text-xs uppercase tracking-wider font-semibold mb-3\" style=\"color: #a1b9ff;\">1. METRIC DETECTION</h3>\n<div class=\"text-sm text-slate-300 mb-3\">\nBackorder Analysis: Agosto 2025 - La Doña Especias Libras Performance Assessment\n</div>\n<div class=\"bg-slate-800/40 rounded-lg p-4 border border-slate-700/30\">\n<div class=\"grid grid-cols-3 gap-4\">\n<div class=\"bg-slate-900/50 rounded p-3\">\n<div class=\"text-xs text-slate-400 mb-1\">Total Backorder (BO-País)</div>\n<div class=\"text-2xl font-bold\" style=\"color: #dc2626;\">12,684.58</div>\n<div class=\"text-xs text-slate-300\">units pending nationwide</div>\n</div>\n<div class=\"bg-slate-900/50 rounded p-3\">\n<div class=\"text-xs text-slate-400 mb-1\">Stock Available</div>\n<div class=\"text-2xl font-bold\" style=\"color: #22c55e;\">380,491</div>\n<div class=\"text-xs text-slate-300\">units in country inventory</div>\n</div>\n<div class=\"bg-slate-900/50 rounded p-3\">\n<div class=\"text-xs text-slate-400 mb-1\">Forecast Attainment</div>\n<div class=\"text-2xl font-bold\" style=\"color: #dc2626;\">16.3%</div>\n<div class=\"text-xs text-slate-300\">far below target</div>\n</div>\n</div>\n<div class=\"mt-3 text-sm text-slate-300\">\nCritical issue: <strong style=\"color: #dc2626;\">Backorders exist despite high inventory</strong> - indicates allocation/timing problems, not stock shortage\n</div>\n</div>\n\n<h3 class=\"text-xs uppercase tracking-wider font-semibold mb-3\" style=\"color: #a1b9ff;\">2. ANALYSIS</h3>\n<div class=\"bg-gradient-to-r from-slate-800/60 to-slate-800/30 rounded-lg p-4 border border-slate-700/30\">\n<div class=\"grid grid-cols-2 gap-6 mb-4\">\n<div>\n<div class=\"text-xs text-slate-400 mb-2\">Backorder by Product Line</div>\n<div class=\"space-y-2\">\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Sazón sin Sal 30GR/12 UDS</span>\n<span class=\"text-sm font-bold\" style=\"color: #dc2626;\">6.00</span>\n</div>\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Condimento Cebolla Molida 28GR/48 UDS</span>\n<span class=\"text-sm font-bold\" style=\"color: #dc2626;\">4.00</span>\n</div>\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Salsa para Spaghetti 200 GRS/24 UDS</span>\n<span class=\"text-sm font-bold\" style=\"color: #dc2626;\">1.00</span>\n</div>\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Mayonesa 330 GRS Reutilizable/24 UDS</span>\n<span class=\"text-sm font-bold\" style=\"color: #dc2626;\">1.00</span>\n</div>\n</div>\n</div>\n<div>\n<div class=\"text-xs text-slate-400 mb-2\">Regional Stock Distribution</div>\n<div class=\"space-y-2\">\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Panamá depot</span>\n<span class=\"text-sm\" style=\"color: #22c55e;\">291,457.21</span>\n</div>\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">ST depot</span>\n<span class=\"text-sm\" style=\"color: #f59e0b;\">43,010.62</span>\n</div>\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">CH depot</span>\n<span class=\"text-sm\" style=\"color: #f59e0b;\">43,957.40</span>\n</div>\n<div class=\"flex justify-between font-bold\">\n<span class=\"text-sm text-slate-200\">Total country stock</span>\n<span class=\"text-sm\" style=\"color: #22c55e;\">380,491.23</span>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<h3 class=\"text-xs uppercase tracking-wider font-semibold mb-3\" style=\"color: #a1b9ff;\">3. ROOT CAUSE</h3>\n<div class=\"space-y-3 text-sm text-slate-300\">\n<div class=\"flex items-start gap-3\">\n<div class=\"w-2 h-2 rounded-full bg-red-500 mt-2 flex-shrink-0\"></div>\n<div>\n<div class=\"font-medium text-slate-200\">Regional Misallocation:</div>\n<div>Stock concentrated in <strong style=\"color: #22c55e;\">Panamá depot (291K units)</strong> while ST and CH depots have limited inventory causing localized backorders</div>\n</div>\n</div>\n<div class=\"flex items-start gap-3\">\n<div class=\"w-2 h-2 rounded-full bg-orange-500 mt-2 flex-shrink-0\"></div>\n<div>\n<div class=\"font-medium text-slate-200\">Forecast vs Reality Gap:</div>\n<div>Only <strong style=\"color: #dc2626;\">16.3% forecast achievement</strong> indicates massive demand prediction failure for Especias Libras category</div>\n</div>\n</div>\n<div class=\"flex items-start gap-3\">\n<div class=\"w-2 h-2 rounded-full bg-yellow-500 mt-2 flex-shrink-0\"></div>\n<div>\n<div class=\"font-medium text-slate-200\">Distribution Timing Issues:</div>\n<div>Backorders on <strong style=\"color: #dc2626;\">Sazón sin Sal, Condimento Cebolla</strong> despite total stock availability suggests poor depot-level allocation</div>\n</div>\n</div>\n</div>\n\n<h3 class=\"text-xs uppercase tracking-wider font-semibold mb-3\" style=\"color: #a1b9ff;\">4. RECOMMENDED ACTION</h3>\n<div class=\"bg-slate-800/40 rounded-lg p-4 border border-slate-700/30\">\n<div class=\"space-y-4\">\n<div class=\"flex items-start gap-3\">\n<div class=\"w-6 h-6 rounded bg-blue-500/20 flex items-center justify-center flex-shrink-0\">\n<span class=\"text-xs font-bold text-blue-300\">1</span>\n</div>\n<div>\n<div class=\"font-medium text-slate-200 mb-1\">Immediate Redistribution (24hrs)</div>\n<div class=\"text-sm text-slate-300\">Transfer <strong style=\"color: #9bb1ff;\">6 units Sazón sin Sal, 4 units Condimento Cebolla</strong> from Panamá to ST/CH depots</div>\n<div class=\"text-xs text-slate-400 mt-1\">Cost: $280 transport · Prevents: 12,684 unit backorder · Same-day resolution</div>\n</div>\n</div>\n<div class=\"flex items-start gap-3\">\n<div class=\"w-6 h-6 rounded bg-blue-500/20 flex items-center justify-center flex-shrink-0\">\n<span class=\"text-xs font-bold text-blue-300\">2</span>\n</div>\n<div>\n<div class=\"font-medium text-slate-200 mb-1\">Depot-Level Forecasting (7 days)</div>\n<div class=\"text-sm text-slate-300\">Implement regional demand planning for <strong style=\"color: #9bb1ff;\">ST and CH markets</strong> to prevent future misallocation</div>\n<div class=\"text-xs text-slate-400 mt-1\">Investment: $8K system upgrade · Prevents: recurring BO events · Improves forecast accuracy</div>\n</div>\n</div>\n<div class=\"flex items-start gap-3\">\n<div class=\"w-6 h-6 rounded bg-blue-500/20 flex items-center justify-center flex-shrink-0\">\n<span class=\"text-xs font-bold text-blue-300\">3</span>\n</div>\n<div>\n<div class=\"font-medium text-slate-200 mb-1\">BO Alert System (14 days)</div>\n<div class=\"text-sm text-slate-300\">Create <strong style=\"color: #22c55e;\">\"BO with stock elsewhere\"</strong> automatic transfer triggers for same-day response</div>\n<div class=\"text-xs text-slate-400 mt-1\">Implementation cost: $5K automation · Prevents: future allocation delays · Real-time optimization</div>\n</div>\n</div>\n</div>\n</div>\n\n<h3 class=\"text-xs uppercase tracking-wider font-semibold mb-3\" style=\"color: #a1b9ff;\">5. BUSINESS VALUE</h3>\n<div class=\"bg-gradient-to-r from-slate-800/60 to-slate-800/30 rounded-lg p-4 border border-slate-700/30\">\n<div class=\"grid grid-cols-2 gap-6\">\n<div>\n<div class=\"text-xs text-slate-400 mb-3\">Immediate Financial Impact</div>\n<div class=\"space-y-2\">\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Backorder resolution value</span>\n<span class=\"text-sm font-bold\" style=\"color: #22c55e;\">12,684 units</span>\n</div>\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Customer retention protection</span>\n<span class=\"text-sm font-bold\" style=\"color: #22c55e;\">$45K</span>\n</div>\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Inventory optimization savings</span>\n<span class=\"text-sm font-bold\" style=\"color: #22c55e;\">$28K</span>\n</div>\n<div class=\"flex justify-between\">\n<span class=\"text-sm text-slate-300\">Implementation costs</span>\n<span class=\"text-sm\" style=\"color: #f59e0b;\">-$13.3K</span>\n</div>\n<div class=\"border-t border-slate-700/30 pt-2 mt-2\">\n<div class=\"flex justify-between\">\n<span class=\"text-sm font-bold text-slate-200\">Net Value Creation</span>\n<span class=\"text-lg font-bold\" style=\"color: #22c55e;\">+$59.7K</span>\n</div>\n</div>\n</div>\n</div>\n<div>\n<div class=\"text-xs text-slate-400 mb-3\">Operational Improvements</div>\n<div class=\"space-y-2\">\n<div class=\"flex items-center gap-2\">\n<div class=\"w-1.5 h-1.5 rounded-full bg-green-500\"></div>\n<span class=\"text-sm text-slate-300\">Regional allocation efficiency +85%</span>\n</div>\n<div class=\"flex items-center gap-2\">\n<div class=\"w-1.5 h-1.5 rounded-full bg-green-500\"></div>\n<span class=\"text-sm text-slate-300\">Depot-level forecast accuracy improvement</span>\n</div>\n<div class=\"flex items-center gap-2\">\n<div class=\"w-1.5 h-1.5 rounded-full bg-green-500\"></div>\n<span class=\"text-sm text-slate-300\">Same-day BO resolution capability</span>\n</div>\n<div class=\"flex items-center gap-2\">\n<div class=\"w-1.5 h-1.5 rounded-full bg-green-500\"></div>\n<span class=\"text-sm text-slate-300\">Especias Libras category optimization</span>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>`;\n      } else {\n        responseContent = `<div class=\"space-y-6\">\n<h3 class=\"text-xs uppercase tracking-wider font-semibold mb-3\" style=\"color: #a1b9ff;\">1. METRIC DETECTION</h3>\n<div class=\"text-sm text-slate-300 mb-3\">General business analysis response</div>\n<div class=\"bg-slate-800/40 rounded-lg p-4 border border-slate-700/30\">\n<div class=\"text-sm text-slate-300\">Business insights will be displayed here.</div>\n</div>\n</div>`;\n      }\n      \n      const aiResponse = {\n        role: 'assistant' as const,\n        content: responseContent\n      };\n      \n      setMessages(prev => [...prev, aiResponse]);\n      setIsLoading(false);\n    }, 2000);\n  };\n\n  const handleBackToDashboard = () => {\n    setChatMode(false);\n    setMessages([]);\n  };\n\n  if (chatMode) {\n    return (\n      <div className=\"min-h-screen w-full bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e] px-6 py-10 text-white font-sans\">\n        {/* Chat Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <button\n            onClick={handleBackToDashboard}\n            className=\"flex items-center gap-2 text-slate-400 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n            </svg>\n            Back to Dashboard\n          </button>\n          <div className=\"flex flex-col items-center\">\n            <h1 className=\"text-lg font-semibold tracking-wide text-[#CBD5E1]\">VORTA</h1>\n            <p className=\"text-xs text-slate-400 tracking-wide uppercase\">AI Copilot</p>\n          </div>\n          <div className=\"w-20\"></div>\n        </div>\n\n        {/* Chat Messages */}\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"space-y-6 mb-32\">\n            {messages.map((message, idx) => (\n              <motion.div\n                key={idx}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: idx * 0.1 }}\n                className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\n              >\n                <div className={`max-w-3xl ${message.role === 'user' ? 'bg-blue-600/20 ml-16' : 'bg-slate-800/40 mr-16'} rounded-2xl p-6 border ${message.role === 'user' ? 'border-blue-500/30' : 'border-slate-700/30'}`}>\n                  {message.role === 'user' ? (\n                    <div className=\"text-white text-sm\">{message.content}</div>\n                  ) : (\n                    <TypewriterText text={message.content} speed={15} />\n                  )}\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n\n        {/* Chat Input */}\n        <div className=\"fixed bottom-6 left-1/2 transform -translate-x-1/2 w-full max-w-3xl px-4\">\n          <div className=\"bg-gradient-to-r from-slate-800/95 via-slate-800/98 to-slate-800/95 backdrop-blur-xl border border-slate-600/50 rounded-2xl px-6 py-4 flex items-center gap-4 shadow-2xl shadow-black/20\">\n            <input\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && !isLoading && handleSubmit()}\n              placeholder=\"Ask anything about your business...\"\n              className=\"flex-1 bg-transparent outline-none text-white placeholder-slate-400 text-base\"\n              disabled={isLoading}\n            />\n            <button \n              onClick={() => handleSubmit()}\n              disabled={!inputValue.trim() || isLoading}\n              className=\"w-9 h-9 rounded-xl bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-500 hover:to-blue-400 disabled:from-slate-600 disabled:to-slate-600 flex items-center justify-center text-white transition-all duration-200 hover:scale-105 hover:shadow-lg hover:shadow-blue-500/25 disabled:hover:scale-100 disabled:hover:shadow-none\"\n            >\n              {isLoading ? (\n                <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n              ) : (\n                <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen w-full bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e] text-white font-sans flex\">\n      \n      {/* Left Sidebar */}\n      <div className=\"fixed left-4 top-4 bottom-4 w-16 bg-slate-800/40 backdrop-blur-sm border border-slate-700/30 rounded-2xl flex flex-col items-center py-6 z-10\">\n        {/* Top Icon - Dashboard/Home */}\n        <div className=\"w-10 h-10 rounded-xl bg-blue-500/20 border border-blue-500/30 flex items-center justify-center mb-6\">\n          <svg className=\"w-5 h-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        </div>\n\n        {/* Navigation Icons */}\n        <div className=\"flex flex-col space-y-4\">\n          <button className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\">\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n          </button>\n\n          <button \n            onClick={() => setLocation('/collaboration')}\n            className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\"\n          >\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n          </button>\n\n          <button \n            onClick={() => setLocation('/scenario-simulator')}\n            className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-amber-500/50 flex items-center justify-center transition-all duration-200 hover:scale-105\"\n            title=\"AI Scenario Simulator\"\n          >\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-amber-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n            </svg>\n          </button>\n\n          <button className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\">\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n            </svg>\n          </button>\n\n          <button className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\">\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Bottom Icon - User/Profile */}\n        <div className=\"mt-auto\">\n          <button className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\">\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 pl-24 pr-8 py-10\">\n        \n        {/* Logo & Brand */}\n      <div className=\"flex flex-col items-center gap-1 mb-8\">\n        <div\n          className=\"vortex-icon mb-1\"\n          style={\n            {\n              width: \"72px\",\n              height: \"72px\",\n              \"--vortex-size\": \"72px\",\n              animation: \"vortex-slow-rotate 20s linear infinite\",\n              opacity: \"0.7\",\n            } as React.CSSProperties\n          }\n        >\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n          <div className=\"vortex-blade\"></div>\n        </div>\n        <h1 className=\"text-lg font-semibold tracking-wide text-slate-300 opacity-80\">VORTA</h1>\n        <p className=\"text-xs text-slate-400 tracking-wide uppercase\">AI Copilot</p>\n      </div>\n\n      {/* Toggle Buttons */}\n      <div className=\"flex justify-center space-x-4 mb-6\">\n        {[\"KPIs\", \"Try these prompts\"].map((tab) => (\n          <button\n            key={tab}\n            className={`px-4 py-1.5 rounded-full transition-all duration-300 text-sm font-medium ${\n              activeTab === tab\n                ? \"bg-gradient-to-r from-blue-600 to-blue-400 text-white shadow-lg\"\n                : \"bg-slate-700 hover:bg-slate-600 text-slate-300\"\n            }`}\n            onClick={() => setActiveTab(tab)}\n          >\n            {tab}\n          </button>\n        ))}\n      </div>\n\n      {/* Animated Content */}\n      <motion.div\n        key={activeTab}\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"flex flex-wrap justify-center gap-6 max-w-6xl mx-auto mb-32\"\n      >\n        {activeTab === \"KPIs\"\n          ? kpiData.map((card: KpiData, idx: number) => (\n              <motion.div\n                key={idx}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.2, delay: idx * 0.05 }}\n                className=\"w-96\"\n              >\n                <Card className=\"bg-slate-800/60 backdrop-blur-sm border border-slate-700/50 hover:border-slate-600/70 rounded-lg p-4 h-full transition-all duration-200 hover:bg-slate-800/80\">\n                  <div className=\"flex items-center mb-2\">\n                    <div className=\"w-1.5 h-1.5 rounded-full bg-blue-400\" />\n                  </div>\n                  <h3 className=\"text-xs font-medium text-slate-300 mb-1 leading-tight\">{card.title}</h3>\n                  <div className=\"text-lg font-semibold text-white mb-0.5\">{card.value}</div>\n                  <p className=\"text-xs text-slate-400 leading-tight\">{card.description}</p>\n                </Card>\n              </motion.div>\n            ))\n          : promptData.map((prompt: PromptData, idx: number) => {\n              const icons = [\n                // Backorder analysis icon\n                <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                </svg>,\n                // Business chart for regional performance\n                <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>,\n                // Alert triangle for underperforming areas\n                <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                </svg>,\n                // Package for inventory management\n                <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                </svg>,\n                // Trending up for forecasting\n                <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                </svg>,\n                // Document with calculator for budget analysis\n                <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                </svg>,\n                // Global network for channel performance\n                <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9 3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\" />\n                </svg>\n              ];\n              \n              return (\n                <motion.div\n                  key={idx}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.2, delay: idx * 0.05 }}\n                  className=\"cursor-pointer w-[420px]\"\n                  onClick={() => handlePromptClick(prompt)}\n                >\n                  <Card className=\"bg-slate-800/40 backdrop-blur-sm border border-slate-700/30 hover:border-blue-400/40 hover:bg-slate-800/60 rounded-lg p-4 h-24 transition-all duration-200 group\">\n                    <div className=\"flex items-start gap-3 h-full\">\n                      <div className=\"w-7 h-7 rounded-lg bg-blue-500/10 flex items-center justify-center flex-shrink-0 mt-0.5\">\n                        {icons[idx]}\n                      </div>\n                      <div className=\"flex flex-col justify-center flex-1 min-w-0 gap-1\">\n                        <h4 className=\"text-base font-medium text-white group-hover:text-blue-200 transition-colors leading-tight\">{prompt.title}</h4>\n                        <p className=\"text-sm text-slate-400 leading-snug\">{prompt.description}</p>\n                      </div>\n                    </div>\n                  </Card>\n                </motion.div>\n              );\n            })}\n      </motion.div>\n\n      {/* Enhanced Input bar */}\n      <div className=\"fixed bottom-6 left-1/2 transform -translate-x-1/2 w-full max-w-3xl px-4\">\n        <div className=\"bg-gradient-to-r from-slate-800/95 via-slate-800/98 to-slate-800/95 backdrop-blur-xl border border-slate-600/50 rounded-2xl px-6 py-4 flex items-center gap-4 shadow-2xl shadow-black/20 hover:border-blue-400/50 transition-all duration-300\">\n          <input\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && !isLoading && handleSubmit()}\n            placeholder=\"Ask anything about your business...\"\n            className=\"flex-1 bg-transparent outline-none text-white placeholder-slate-400 text-base\"\n            disabled={isLoading}\n          />\n          <div className=\"flex gap-3 items-center\">\n            <button className=\"w-9 h-9 rounded-xl bg-slate-700/50 hover:bg-slate-600/50 flex items-center justify-center text-slate-400 hover:text-slate-300 transition-all duration-200 hover:scale-105\">\n              <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n            <button className=\"w-9 h-9 rounded-xl bg-slate-700/50 hover:bg-slate-600/50 flex items-center justify-center text-slate-400 hover:text-slate-300 transition-all duration-200 hover:scale-105\">\n              <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M7 4a3 3 0 016 0v4a3 3 0 11-6 0V4zm4 10.93A7.001 7.001 0 0017 8a1 1 0 10-2 0A5 5 0 015 8a1 1 0 00-2 0 7.001 7.001 0 006 6.93V17H6a1 1 0 100 2h8a1 1 0 100-2h-3v-2.07z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n            <button \n              onClick={() => handleSubmit()}\n              disabled={!inputValue.trim() || isLoading}\n              className=\"w-9 h-9 rounded-xl bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-500 hover:to-blue-400 disabled:from-slate-600 disabled:to-slate-600 flex items-center justify-center text-white transition-all duration-200 hover:scale-105 hover:shadow-lg hover:shadow-blue-500/25 disabled:hover:scale-100 disabled:hover:shadow-none\"\n            >\n              {isLoading ? (\n                <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n              ) : (\n                <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                </svg>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  );\n}","size_bytes":31417},"client/src/pages/OnboardingDataForm.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Plug, HelpCircle, Brain, Plus, Trash2, Eye, EyeOff, ArrowRight, Save } from \"lucide-react\";\n\ninterface DatabaseConfig {\n  engine: string;\n  host: string;\n  port: string;\n  database: string;\n  username: string;\n  password: string;\n}\n\ninterface SalesQuestion {\n  id: string;\n  text: string;\n}\n\ninterface SchemaConfig {\n  tableDescriptions: string;\n  keyColumns: string;\n  kpiFormulas: string;\n}\n\nexport default function OnboardingDataForm() {\n  const [, setLocation] = useLocation();\n  const [showPassword, setShowPassword] = useState(false);\n  const [currentSection, setCurrentSection] = useState(1);\n  \n  // Database configuration state\n  const [dbConfig, setDbConfig] = useState<DatabaseConfig>({\n    engine: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: ''\n  });\n\n  // Sales questions state\n  const [salesQuestions, setSalesQuestions] = useState<SalesQuestion[]>([\n    { id: '1', text: 'Which customers stopped ordering this month?' },\n    { id: '2', text: 'Where are we behind on targets?' },\n    { id: '3', text: 'What SKUs aren\\'t moving by region?' }\n  ]);\n\n  // Schema configuration state\n  const [schemaConfig, setSchemaConfig] = useState<SchemaConfig>({\n    tableDescriptions: '',\n    keyColumns: '',\n    kpiFormulas: ''\n  });\n\n  const [isPublicAccess, setIsPublicAccess] = useState(true);\n\n  const handleAddQuestion = () => {\n    const newId = (salesQuestions.length + 1).toString();\n    setSalesQuestions([...salesQuestions, { id: newId, text: '' }]);\n  };\n\n  const handleRemoveQuestion = (id: string) => {\n    if (salesQuestions.length > 1) {\n      setSalesQuestions(salesQuestions.filter(q => q.id !== id));\n    }\n  };\n\n  const handleQuestionChange = (id: string, text: string) => {\n    setSalesQuestions(salesQuestions.map(q => \n      q.id === id ? { ...q, text } : q\n    ));\n  };\n\n  const handleContinueToDashboard = () => {\n    // Store all configuration data (in real app, would send to API)\n    console.log('Database Config:', dbConfig);\n    console.log('Sales Questions:', salesQuestions);\n    console.log('Schema Config:', schemaConfig);\n    \n    setLocation(\"/dashboard\");\n  };\n\n  const handleSaveForLater = () => {\n    // Save current progress and redirect\n    console.log('Saving progress...');\n    setLocation(\"/dashboard\");\n  };\n\n  const dbEngines = [\n    'PostgreSQL',\n    'MySQL', \n    'SQL Server',\n    'Oracle',\n    'SQLite',\n    'MariaDB'\n  ];\n\n  return (\n    <motion.section \n      className=\"min-h-screen bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e] text-white overflow-hidden\"\n      initial={{ opacity: 0, x: 50 }}\n      animate={{ opacity: 1, x: 0 }}\n      exit={{ opacity: 0, x: -50 }}\n      transition={{ duration: 0.6, ease: \"easeOut\" }}\n    >\n      {/* Background Pattern */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"absolute inset-0\" style={{\n          backgroundImage: `radial-gradient(circle at 25px 25px, rgba(255,255,255,0.08) 2px, transparent 0)`,\n          backgroundSize: '50px 50px',\n          animation: 'grain 8s steps(10) infinite'\n        }} />\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-8 py-12 relative z-10\">\n        {/* Professional header with dark theme */}\n        <motion.div \n          className=\"mb-8 pb-6 border-b border-blue-500/20\"\n          initial={{ opacity: 0, y: -30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2, duration: 0.6 }}\n        >\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <motion.div\n                className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center shadow-lg\"\n                initial={{ scale: 0, rotate: -90 }}\n                animate={{ scale: 1, rotate: 0 }}\n                transition={{ delay: 0.3, duration: 0.6, type: \"spring\", stiffness: 200 }}\n              >\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 100 100\" className=\"text-white\">\n                  <ellipse cx=\"50\" cy=\"50\" rx=\"28\" ry=\"10\" \n                    fill=\"none\" stroke=\"currentColor\" strokeWidth=\"4\" \n                    transform=\"rotate(0 50 50)\" opacity=\"0.9\" />\n                  <ellipse cx=\"50\" cy=\"50\" rx=\"28\" ry=\"10\" \n                    fill=\"none\" stroke=\"currentColor\" strokeWidth=\"4\" \n                    transform=\"rotate(60 50 50)\" opacity=\"0.9\" />\n                  <ellipse cx=\"50\" cy=\"50\" rx=\"28\" ry=\"10\" \n                    fill=\"none\" stroke=\"currentColor\" strokeWidth=\"4\" \n                    transform=\"rotate(120 50 50)\" opacity=\"0.9\" />\n                  <circle cx=\"50\" cy=\"50\" r=\"3\" fill=\"currentColor\" />\n                </svg>\n              </motion.div>\n\n              <div>\n                <h1 className=\"text-2xl font-semibold text-white\" style={{ \n                  fontFamily: '\"Segoe UI\", system-ui, sans-serif',\n                  fontWeight: 600\n                }}>\n                  Connect your data sources\n                </h1>\n                <p className=\"text-blue-200/70 text-sm mt-1\" style={{ \n                  fontFamily: '\"Segoe UI\", system-ui, sans-serif'\n                }}>\n                  Set up VORTA to work with your business data and processes\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-2 text-sm text-blue-200/60\">\n              <span>Step 2 of 2</span>\n              <div className=\"w-16 h-1 bg-blue-900/40 rounded-full\">\n                <div className=\"w-full h-full bg-blue-400 rounded-full\"></div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Main content grid - Microsoft Copilot layout */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          \n          {/* Left column - Main content */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            \n            {/* Database Connection Card */}\n            <motion.div\n              initial={{ opacity: 0, y: 40 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.4, duration: 0.6 }}\n            >\n              <div className=\"bg-gradient-to-br from-[#1c2340]/80 to-[#2a3b5c]/80 rounded-xl p-6 border border-blue-500/20 backdrop-blur-md\">\n                <div className=\"flex items-center gap-3 mb-5\">\n                  <div className=\"w-8 h-8 bg-blue-500/15 rounded-lg flex items-center justify-center\">\n                    <Plug className=\"w-4 h-4 text-blue-400\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-white\" style={{ \n                      fontFamily: '\"Segoe UI\", system-ui, sans-serif',\n                      fontSize: '16px'\n                    }}>\n                      Database connection\n                    </h3>\n                    <p className=\"text-blue-200/60 text-sm\">\n                      Connect to your data source securely\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {/* Database Engine */}\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      Database type\n                    </label>\n                    <select\n                      value={dbConfig.engine}\n                      onChange={(e) => setDbConfig(prev => ({ ...prev, engine: e.target.value }))}\n                      className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all text-sm\"\n                      style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                    >\n                      <option value=\"\" className=\"bg-blue-900\">Select database type</option>\n                      {dbEngines.map(engine => (\n                        <option key={engine} value={engine} className=\"bg-blue-900\">{engine}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  {/* Host/IP */}\n                  <div>\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      Host\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={dbConfig.host}\n                      onChange={(e) => setDbConfig(prev => ({ ...prev, host: e.target.value }))}\n                      placeholder=\"localhost\"\n                      className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all text-sm\"\n                      style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                    />\n                  </div>\n\n                  {/* Port */}\n                  <div>\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      Port\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={dbConfig.port}\n                      onChange={(e) => setDbConfig(prev => ({ ...prev, port: e.target.value }))}\n                      placeholder=\"5432\"\n                      className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all text-sm\"\n                      style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                    />\n                  </div>\n\n                  {/* Database Name */}\n                  <div>\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      Database name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={dbConfig.database}\n                      onChange={(e) => setDbConfig(prev => ({ ...prev, database: e.target.value }))}\n                      placeholder=\"production_db\"\n                      className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all text-sm\"\n                      style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                    />\n                  </div>\n\n                  {/* Username */}\n                  <div>\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      Username\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={dbConfig.username}\n                      onChange={(e) => setDbConfig(prev => ({ ...prev, username: e.target.value }))}\n                      placeholder=\"readonly_user\"\n                      className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all text-sm\"\n                      style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                    />\n                  </div>\n\n                  {/* Password */}\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      Password\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type={showPassword ? \"text\" : \"password\"}\n                        value={dbConfig.password}\n                        onChange={(e) => setDbConfig(prev => ({ ...prev, password: e.target.value }))}\n                        placeholder=\"Enter secure password\"\n                        className=\"w-full px-3 py-2.5 pr-10 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all text-sm\"\n                        style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-blue-300 hover:text-blue-200 transition-colors\"\n                      >\n                        {showPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Business Questions Card */}\n            <motion.div\n              initial={{ opacity: 0, y: 40 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.6, duration: 0.6 }}\n            >\n              <div className=\"bg-gradient-to-br from-[#1c2340]/80 to-[#2a3b5c]/80 rounded-xl p-6 border border-blue-500/20 backdrop-blur-md\">\n                <div className=\"flex items-center gap-3 mb-5\">\n                  <div className=\"w-8 h-8 bg-blue-500/15 rounded-lg flex items-center justify-center\">\n                    <HelpCircle className=\"w-4 h-4 text-blue-400\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-white\" style={{ \n                      fontFamily: '\"Segoe UI\", system-ui, sans-serif',\n                      fontSize: '16px'\n                    }}>\n                      Common business questions\n                    </h3>\n                    <p className=\"text-blue-200/60 text-sm\">\n                      What do you frequently ask about your business?\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  {salesQuestions.map((question, index) => (\n                    <motion.div\n                      key={question.id}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ delay: 0.1 * index }}\n                      className=\"flex gap-3\"\n                    >\n                      <div className=\"flex-1\">\n                        <textarea\n                          value={question.text}\n                          onChange={(e) => handleQuestionChange(question.id, e.target.value)}\n                          placeholder={`Question ${index + 1}...`}\n                          rows={2}\n                          className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all resize-none text-sm\"\n                          style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                        />\n                      </div>\n                      {salesQuestions.length > 1 && (\n                        <button\n                          onClick={() => handleRemoveQuestion(question.id)}\n                          className=\"p-2 text-blue-300/60 hover:text-red-400 hover:bg-red-500/10 rounded-md transition-all\"\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </button>\n                      )}\n                    </motion.div>\n                  ))}\n                </div>\n\n                <button\n                  onClick={handleAddQuestion}\n                  className=\"mt-4 flex items-center gap-2 px-3 py-2 text-blue-300 hover:text-blue-200 hover:bg-blue-500/10 rounded-md transition-all text-sm font-medium\"\n                  style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                >\n                  <Plus className=\"w-4 h-4\" />\n                  Add question\n                </button>\n              </div>\n            </motion.div>\n\n            {/* Business Context Card */}\n            <motion.div\n              initial={{ opacity: 0, y: 40 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.8, duration: 0.6 }}\n            >\n              <div className=\"bg-gradient-to-br from-[#1c2340]/80 to-[#2a3b5c]/80 rounded-xl p-6 border border-blue-500/20 backdrop-blur-md\">\n                <div className=\"flex items-center gap-3 mb-5\">\n                  <div className=\"w-8 h-8 bg-blue-500/15 rounded-lg flex items-center justify-center\">\n                    <Brain className=\"w-4 h-4 text-blue-400\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      <h3 className=\"font-semibold text-white\" style={{ \n                        fontFamily: '\"Segoe UI\", system-ui, sans-serif',\n                        fontSize: '16px'\n                      }}>\n                        Business context\n                      </h3>\n                      <span className=\"px-2 py-0.5 text-xs bg-blue-500/20 text-blue-300 rounded-full font-medium\">Optional</span>\n                    </div>\n                    <p className=\"text-blue-200/60 text-sm\">\n                      Help VORTA understand your data structure\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  {/* Table Descriptions */}\n                  <div>\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      Table descriptions\n                    </label>\n                    <textarea\n                      value={schemaConfig.tableDescriptions}\n                      onChange={(e) => setSchemaConfig(prev => ({ ...prev, tableDescriptions: e.target.value }))}\n                      placeholder=\"Describe your main tables, e.g., 'sales' table contains transaction records...\"\n                      rows={3}\n                      className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all resize-none text-sm\"\n                      style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                    />\n                  </div>\n\n                  {/* Key Column Definitions */}\n                  <div>\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      Key column definitions\n                    </label>\n                    <textarea\n                      value={schemaConfig.keyColumns}\n                      onChange={(e) => setSchemaConfig(prev => ({ ...prev, keyColumns: e.target.value }))}\n                      placeholder=\"Define important columns, e.g., 'customer_id' links to customers table...\"\n                      rows={3}\n                      className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all resize-none text-sm\"\n                      style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                    />\n                  </div>\n\n                  {/* KPI Formulas */}\n                  <div>\n                    <label className=\"block text-xs font-medium text-blue-200 mb-2 uppercase tracking-wide\">\n                      KPI formulas and filters\n                    </label>\n                    <textarea\n                      value={schemaConfig.kpiFormulas}\n                      onChange={(e) => setSchemaConfig(prev => ({ ...prev, kpiFormulas: e.target.value }))}\n                      placeholder=\"E.g., Active sales = SUM(amount) WHERE status = 'completed'...\"\n                      rows={3}\n                      className=\"w-full px-3 py-2.5 bg-blue-900/20 border border-blue-500/30 rounded-md text-white placeholder-blue-300/60 focus:outline-none focus:ring-1 focus:ring-blue-400 focus:border-blue-400 transition-all resize-none text-sm\"\n                      style={{ fontFamily: '\"Segoe UI\", system-ui, sans-serif' }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n\n          </div>\n\n          {/* Right column - Helper sidebar */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"sticky top-8 space-y-6\">\n              \n              {/* Connection Status */}\n              <div className=\"bg-gradient-to-br from-[#1c2340]/60 to-[#2a3b5c]/60 rounded-xl p-6 border border-blue-500/20 backdrop-blur-md\">\n                <h4 className=\"font-semibold text-white mb-4\" style={{ \n                  fontFamily: '\"Segoe UI\", system-ui, sans-serif',\n                  fontSize: '14px'\n                }}>\n                  Setup progress\n                </h4>\n                \n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-6 h-6 rounded-full bg-blue-500/20 flex items-center justify-center\">\n                      <div className=\"w-2 h-2 bg-blue-400 rounded-full\"></div>\n                    </div>\n                    <span className=\"text-sm text-blue-200\">Database connection</span>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-6 h-6 rounded-full bg-blue-500/20 flex items-center justify-center\">\n                      <div className=\"w-2 h-2 bg-blue-400 rounded-full\"></div>\n                    </div>\n                    <span className=\"text-sm text-blue-200\">Business questions</span>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-6 h-6 rounded-full bg-blue-900/40 flex items-center justify-center\">\n                      <div className=\"w-2 h-2 bg-blue-500/60 rounded-full\"></div>\n                    </div>\n                    <span className=\"text-sm text-blue-300/60\">Business context (optional)</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Tips */}\n              <div className=\"bg-gradient-to-br from-blue-900/30 to-blue-800/20 rounded-xl p-6 border border-blue-500/20 backdrop-blur-sm\">\n                <h4 className=\"font-semibold text-white mb-3\" style={{ \n                  fontFamily: '\"Segoe UI\", system-ui, sans-serif',\n                  fontSize: '14px'\n                }}>\n                  💡 Setup tips\n                </h4>\n                \n                <div className=\"space-y-3 text-sm text-blue-200/70\">\n                  <p>• Use a read-only database connection for security</p>\n                  <p>• Add 3-5 common business questions you ask daily</p>\n                  <p>• Business context helps VORTA give better insights</p>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        </div>\n\n        {/* Dark theme bottom actions bar */}\n        <motion.div \n          className=\"fixed bottom-0 left-0 right-0 bg-gradient-to-r from-[#1a1a2e] to-[#16213e] border-t border-blue-500/20 px-8 py-4 z-50 backdrop-blur-md\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 1.0, duration: 0.6 }}\n        >\n          <div className=\"max-w-6xl mx-auto flex justify-between items-center\">\n            <button\n              onClick={handleSaveForLater}\n              className=\"flex items-center gap-2 px-4 py-2 text-blue-300/70 hover:text-white hover:bg-blue-500/10 rounded-lg transition-all duration-200 font-medium\"\n              style={{ \n                fontFamily: '\"Segoe UI\", \"Inter\", system-ui, sans-serif'\n              }}\n            >\n              <Save className=\"w-4 h-4\" />\n              Save for later\n            </button>\n            \n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={() => setLocation('/onboarding')}\n                className=\"px-6 py-2.5 text-blue-200 hover:text-white hover:bg-blue-500/10 rounded-lg transition-all duration-200 font-medium border border-blue-500/30\"\n                style={{ \n                  fontFamily: '\"Segoe UI\", \"Inter\", system-ui, sans-serif'\n                }}\n              >\n                Back\n              </button>\n              \n              <motion.button\n                onClick={handleContinueToDashboard}\n                className=\"flex items-center gap-2 px-6 py-2.5 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-500 hover:to-blue-600 text-white font-medium rounded-lg transition-all duration-200 shadow-lg\"\n                style={{ \n                  fontFamily: '\"Segoe UI\", \"Inter\", system-ui, sans-serif'\n                }}\n                whileHover={{ \n                  scale: 1.02,\n                  boxShadow: \"0 0 25px rgba(59, 130, 246, 0.25)\",\n                  transition: { duration: 0.2 }\n                }}\n              >\n                <span>Continue</span>\n                <ArrowRight className=\"w-4 h-4\" />\n              </motion.button>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Bottom padding to account for fixed bar */}\n        <div className=\"h-20\"></div>\n      </div>\n    </motion.section>\n  );\n}","size_bytes":25990},"client/src/pages/chat-clean-top.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport {\n  Paperclip,\n  Globe,\n  Mic,\n  Search,\n  BarChart2,\n  ChevronDown,\n  ChevronUp,\n  ArrowUp,\n} from \"lucide-react\";\nimport { TypingMessage } from \"@/components/typing-message\";\nimport {\n  AnimatedCounter,\n  PulseIndicator,\n  HoverCard,\n  ProgressBar,\n  FeedbackToast,\n} from \"@/components/micro-interactions\";\nimport { PromptGenerator } from \"@/components/prompt-generator\";\n\ninterface Message {\n  id: string;\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\nexport default function Chat() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isVoiceActive, setIsVoiceActive] = useState(false);\n  const [expandedCard, setExpandedCard] = useState<string | null>(null);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [interimTranscript, setInterimTranscript] = useState(\"\");\n  const [speechLanguage, setSpeechLanguage] = useState(\"es-ES\");\n  \n  // Language-dependent text content\n  const isEnglish = speechLanguage === \"en-US\";\n  const text = {\n    performanceScore: isEnglish ? \"Performance Score\" : \"Puntuación de Rendimiento\",\n    zonesAtRisk: isEnglish ? \"Zones at Risk\" : \"Zonas en Riesgo\", \n    productOpportunity: isEnglish ? \"Product Opportunity\" : \"Oportunidad de Producto\",\n    salesTarget: isEnglish ? \"of sales target achieved\" : \"del objetivo de ventas cumplido\",\n    clickForDetails: isEnglish ? \"Click for details\" : \"Haz clic para ver detalles\",\n    salesPerformance: isEnglish ? \"Sales Performance\" : \"Rendimiento de Ventas\",\n    of: isEnglish ? \"of\" : \"de\",\n    target: isEnglish ? \"target\" : \"objetivo\",\n    topPerformers: isEnglish ? \"Top Performers\" : \"Mejores Resultados\",\n    regions: isEnglish ? \"Regions\" : \"Regiones\",\n    reps: isEnglish ? \"Reps\" : \"Representantes\",\n    products: isEnglish ? \"Products\" : \"Productos\",\n    criticalAlerts: isEnglish ? \"Critical Alerts\" : \"Alertas Críticas\",\n    stockouts: isEnglish ? \"stockouts reported\" : \"agotamientos reportados\",\n    overdueAccounts: isEnglish ? \"overdue accounts\" : \"cuentas morosas\",\n    lowInventory: isEnglish ? \"low inventory alerts\" : \"alertas de inventario bajo\",\n    opportunities: isEnglish ? \"Opportunities\" : \"Oportunidades\",\n    newClients: isEnglish ? \"new client prospects\" : \"nuevos prospectos de clientes\",\n    productLaunches: isEnglish ? \"product launch opportunities\" : \"oportunidades de lanzamiento\",\n    expansions: isEnglish ? \"expansion territories\" : \"territorios de expansión\",\n    listening: isEnglish ? \"Listening...\" : \"Escuchando...\",\n    askAnything: isEnglish ? \"Ask anything...\" : \"Pregunta lo que quieras…\",\n    sendMessage: isEnglish ? \"Send message\" : \"Enviar mensaje\",\n    language: isEnglish ? \"Switch to Spanish\" : \"Cambiar idioma a Inglés\"\n  };\n  const [inputFeedback, setInputFeedback] = useState<\n    \"success\" | \"error\" | null\n  >(null);\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [showPromptGenerator, setShowPromptGenerator] = useState(false);\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const recognitionRef = useRef<any>(null);\n  const speechTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n\n  // Keyboard shortcuts for voice control\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // Ctrl/Cmd + M to toggle voice\n      if ((e.ctrlKey || e.metaKey) && e.key === \"m\") {\n        e.preventDefault();\n        toggleVoice();\n      }\n      // Ctrl/Cmd + L to toggle language\n      if ((e.ctrlKey || e.metaKey) && e.key === \"l\") {\n        e.preventDefault();\n        toggleLanguage();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [speechSupported, isListening, speechLanguage]);\n\n  // Initialize speech recognition\n  useEffect(() => {\n    if (\"webkitSpeechRecognition\" in window || \"SpeechRecognition\" in window) {\n      setSpeechSupported(true);\n      const SpeechRecognition =\n        (window as any).webkitSpeechRecognition ||\n        (window as any).SpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.lang = speechLanguage;\n      recognitionRef.current.maxAlternatives = 1;\n\n      recognitionRef.current.onstart = () => {\n        setIsListening(true);\n        setInterimTranscript(\"\");\n\n        // Set a timeout to automatically stop listening after 30 seconds\n        speechTimeoutRef.current = setTimeout(() => {\n          if (recognitionRef.current && isListening) {\n            recognitionRef.current.stop();\n          }\n        }, 30000);\n      };\n\n      recognitionRef.current.onresult = (event: any) => {\n        let finalTranscript = \"\";\n        let interimText = \"\";\n\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            finalTranscript += transcript;\n          } else {\n            interimText += transcript;\n          }\n        }\n\n        if (finalTranscript) {\n          setInputValue((prev) => prev + finalTranscript);\n          setInterimTranscript(\"\");\n        } else {\n          setInterimTranscript(interimText);\n        }\n      };\n\n      recognitionRef.current.onerror = (event: any) => {\n        console.error(\"Speech recognition error:\", event.error);\n        setIsListening(false);\n        setInterimTranscript(\"\");\n\n        // Handle specific errors with user-friendly messages\n        if (event.error === \"not-allowed\") {\n          alert(\n            \"Acceso al micrófono denegado. Por favor permite el acceso al micrófono e intenta de nuevo.\",\n          );\n        } else if (event.error === \"no-speech\") {\n          // Restart listening automatically if no speech detected\n          setTimeout(() => {\n            if (recognitionRef.current && isListening) {\n              try {\n                recognitionRef.current.start();\n              } catch (e) {\n                console.log(\"Recognition restart failed:\", e);\n              }\n            }\n          }, 100);\n        } else if (event.error === \"network\") {\n          alert(\"Error de conexión. Verifica tu conexión a internet.\");\n        }\n      };\n\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n        setInterimTranscript(\"\");\n\n        // Clear timeout\n        if (speechTimeoutRef.current) {\n          clearTimeout(speechTimeoutRef.current);\n          speechTimeoutRef.current = null;\n        }\n      };\n    } else {\n      setSpeechSupported(false);\n    }\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n\n    const messageContent = inputValue.trim();\n\n    // Show success feedback\n    setInputFeedback(\"success\");\n    setTimeout(() => setInputFeedback(null), 600);\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: messageContent,\n      isUser: true,\n      timestamp: new Date(),\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    setInputValue(\"\");\n    setIsTyping(true);\n\n    try {\n      // Send message to API\n      const response = await fetch(\"/api/conversations/1/messages\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          content: messageContent,\n          role: \"user\",\n          language: speechLanguage === \"es-ES\" ? \"es\" : \"en\",\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to send message\");\n      }\n\n      // Get only the latest AI response instead of all messages\n      const messagesResponse = await fetch(\"/api/conversations/1/messages\");\n      if (messagesResponse.ok) {\n        const data = await messagesResponse.json();\n        // Find the latest AI response\n        const latestAiMessage = data\n          .filter((msg: any) => msg.role === \"assistant\")\n          .pop();\n        if (latestAiMessage) {\n          const aiMessage: Message = {\n            id: latestAiMessage.id.toString(),\n            content: latestAiMessage.content,\n            isUser: false,\n            timestamp: new Date(latestAiMessage.timestamp),\n          };\n          setMessages((prev) => [...prev, aiMessage]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n\n      // Show error feedback\n      setInputFeedback(\"error\");\n      setToastMessage(\"Error de conexión. Verifica tu red e intenta de nuevo.\");\n      setShowToast(true);\n      setTimeout(() => setInputFeedback(null), 600);\n\n      // Show error message\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content:\n          \"I'm experiencing connection issues. Please check your network and try again.\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const toggleVoice = async () => {\n    if (!speechSupported) {\n      alert(\n        \"Reconocimiento de voz no compatible con este navegador. Prueba con Chrome o Firefox.\",\n      );\n      return;\n    }\n\n    if (!recognitionRef.current) {\n      alert(\n        \"Error al inicializar el reconocimiento de voz. Recarga la página e intenta de nuevo.\",\n      );\n      return;\n    }\n\n    if (isListening) {\n      recognitionRef.current.stop();\n      if (speechTimeoutRef.current) {\n        clearTimeout(speechTimeoutRef.current);\n        speechTimeoutRef.current = null;\n      }\n    } else {\n      try {\n        // Request microphone permission first\n        await navigator.mediaDevices.getUserMedia({ audio: true });\n        // Update language setting before starting\n        recognitionRef.current.lang = speechLanguage;\n        recognitionRef.current.start();\n      } catch (error) {\n        console.error(\"Speech recognition error:\", error);\n        setIsListening(false);\n        alert(\n          \"No se pudo acceder al micrófono. Verifica los permisos del navegador.\",\n        );\n      }\n    }\n  };\n\n  const toggleLanguage = () => {\n    const newLang = speechLanguage === \"es-ES\" ? \"en-US\" : \"es-ES\";\n    setSpeechLanguage(newLang);\n\n    // If currently listening, restart with new language\n    if (isListening && recognitionRef.current) {\n      recognitionRef.current.stop();\n      setTimeout(() => {\n        if (recognitionRef.current) {\n          recognitionRef.current.lang = newLang;\n          recognitionRef.current.start();\n        }\n      }, 100);\n    }\n  };\n\n  const toggleCard = (cardId: string) => {\n    setExpandedCard(expandedCard === cardId ? null : cardId);\n  };\n\n  const handlePromptSelect = (prompt: string) => {\n    setInputValue(prompt);\n    // Automatically send the selected prompt\n    setTimeout(() => {\n      handleSendMessage();\n    }, 100);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e]\">\n      {/* Feedback Toast */}\n      <FeedbackToast\n        type=\"error\"\n        message={toastMessage}\n        show={showToast}\n        onHide={() => setShowToast(false)}\n      />\n      {/* Top KPI Dashboard - Dark Theme */}\n      <div className=\"bg-gradient-to-r from-[#1a1a2e]/80 to-[#16213e]/80 px-6 py-4 backdrop-blur-md border-b border-blue-500/20\">\n        <div className=\"flex flex-col md:flex-row gap-3 justify-between\">\n          {/* Performance Card */}\n          <div\n            onClick={() => toggleCard(\"performance\")}\n            className={`group bg-gradient-to-br from-[#1c2340]/80 to-[#2a3b5c]/80 rounded-lg shadow-lg hover:shadow-xl p-2 cursor-pointer transition-all duration-500 border border-blue-500/20 hover:border-blue-400/30 flex-1 backdrop-blur-sm ${\n              expandedCard === \"performance\"\n                ? \"min-h-[200px] shadow-xl animate-scaleIn\"\n                : \"min-h-[50px]\"\n            }`}\n          >\n            <div className=\"flex items-center justify-between mb-1\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 bg-emerald-400 rounded-full shadow-sm\"></div>\n                <h4 className=\"text-sm font-medium text-white group-hover:text-blue-200 transition\">\n                  {text.performanceScore}\n                </h4>\n              </div>\n              {expandedCard === \"performance\" ? (\n                <ChevronUp size={16} className=\"text-blue-300\" />\n              ) : (\n                <ChevronDown\n                  size={14}\n                  className=\"text-blue-400/70 group-hover:text-blue-300 transition\"\n                />\n              )}\n            </div>\n\n            {expandedCard !== \"performance\" ? (\n              <>\n                <p className=\"text-3xl font-semibold text-white\">\n                  <AnimatedCounter value={88} duration={1500} />\n                </p>\n                <div className=\"flex items-center gap-2 mt-1\">\n                  <p className=\"text-xs text-blue-200/70\">\n                    <AnimatedCounter value={82} duration={1200} suffix=\"%\" /> {text.salesTarget}\n                  </p>\n                  <PulseIndicator color=\"green\" size=\"sm\" />\n                </div>\n                <p className=\"text-xs text-blue-300/60 mt-2 italic\">\n                  Haz clic para ver detalles\n                </p>\n              </>\n            ) : (\n              <div className=\"mt-4 space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div\n                    className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-slate-600\"\n                    onClick={() =>\n                      setInputValue(\n                        \"What is our current sales performance and how close are we to target?\",\n                      )\n                    }\n                  >\n                    <h5 className=\"text-sm font-semibold text-blue-200 mb-2\">\n                      {text.salesPerformance}\n                    </h5>\n                    <p className=\"text-2xl font-bold text-green-400\">\n                      <AnimatedCounter value={82} duration={1300} suffix=\"%\" />\n                    </p>\n                    <p className=\"text-sm text-blue-200\">\n                      $<AnimatedCounter value={369} duration={1500} />K {text.of} $450K {text.target}\n                    </p>\n                    <div className=\"mt-2\">\n                      <ProgressBar value={82} max={100} color=\"green\" />\n                    </div>\n                  </div>\n                  <div\n                    className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-slate-600\"\n                    onClick={() =>\n                      setInputValue(\n                        \"Which region, rep, and SKU are driving the strongest results and why?\",\n                      )\n                    }\n                  >\n                    <h5 className=\"text-sm font-semibold text-blue-200 mb-2\">\n                      {text.topPerformers}\n                    </h5>\n                    <p className=\"text-sm text-blue-200 mb-1\">\n                      <strong>Best SKU:</strong> SKU 183 – Bananas\n                    </p>\n                    <p className=\"text-sm text-blue-200 mb-1\">\n                      <strong>Best Region:</strong> Chiriquí (+8%)\n                    </p>\n                    <p className=\"text-sm text-blue-200\">\n                      <strong>Best Rep:</strong> Carlos Mendez\n                    </p>\n                  </div>\n                </div>\n                <div\n                  className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-slate-600\"\n                  onClick={() =>\n                    setInputValue(\n                      \"Explain this month's key insights and what actions we should take.\",\n                    )\n                  }\n                >\n                  <h5 className=\"text-sm font-semibold text-blue-200 mb-2\">\n                    Key Insights\n                  </h5>\n                  <ul className=\"text-sm text-blue-200 space-y-1\">\n                    <li>• Revenue up 12% vs last month</li>\n                    <li>• 5 new clients acquired this quarter</li>\n                    <li>• Premium products showing 15% growth</li>\n                    <li>• Export sales exceeding expectations by 18%</li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Risk Card */}\n          <div\n            onClick={() => toggleCard(\"risks\")}\n            className={`group bg-gradient-to-br from-[#1c2340]/80 to-[#2a3b5c]/80 rounded-lg shadow-lg hover:shadow-xl p-2 cursor-pointer transition-all duration-500 border border-blue-500/20 hover:border-red-400/30 flex-1 backdrop-blur-sm ${\n              expandedCard === \"risks\"\n                ? \"min-h-[200px] shadow-xl animate-scaleIn\"\n                : \"min-h-[50px]\"\n            }`}\n          >\n            <div className=\"flex items-center justify-between mb-1\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 bg-red-400 rounded-full shadow-sm\"></div>\n                <h4 className=\"text-sm font-medium text-white group-hover:text-blue-200 transition\">\n                  {text.zonesAtRisk}\n                </h4>\n              </div>\n              {expandedCard === \"risks\" ? (\n                <ChevronUp size={16} className=\"text-blue-300\" />\n              ) : (\n                <ChevronDown\n                  size={14}\n                  className=\"text-blue-400/70 group-hover:text-blue-300 transition\"\n                />\n              )}\n            </div>\n\n            {expandedCard !== \"risks\" ? (\n              <>\n                <p className=\"text-2xl font-semibold text-white\">3 {isEnglish ? \"Zones\" : \"Zonas\"}</p>\n                <p className=\"text-xs text-blue-200/70\">\n                  Chiriquí, Colón, San Miguelito\n                </p>\n                <p className=\"text-xs text-blue-300/60 mt-2 italic\">\n                  Haz clic para ver detalles\n                </p>\n              </>\n            ) : (\n              <div className=\"mt-4 space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div\n                    className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-red-500/30\"\n                    onClick={() =>\n                      setInputValue(\n                        \"What are our critical issues and backorders? How can we resolve them?\",\n                      )\n                    }\n                  >\n                    <h5 className=\"text-sm font-semibold text-red-400 mb-2\">\n                      Critical Issues\n                    </h5>\n                    <p className=\"text-xl font-bold text-red-400\">28</p>\n                    <p className=\"text-sm text-red-300\">Total backorders</p>\n                  </div>\n                  <div\n                    className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-orange-500/30\"\n                    onClick={() =>\n                      setInputValue(\n                        \"Which products are out of stock and what's the urgency level?\",\n                      )\n                    }\n                  >\n                    <h5 className=\"text-sm font-semibold text-orange-400 mb-2\">\n                      Out of Stock\n                    </h5>\n                    <p className=\"text-xl font-bold text-orange-400\">14</p>\n                    <p className=\"text-sm text-orange-300\">Urgent items</p>\n                  </div>\n                  <div\n                    className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-yellow-500/30\"\n                    onClick={() =>\n                      setInputValue(\n                        \"Show me details about overdue payments and recovery strategies.\",\n                      )\n                    }\n                  >\n                    <h5 className=\"text-sm font-semibold text-yellow-400 mb-2\">\n                      Overdue\n                    </h5>\n                    <p className=\"text-lg font-bold text-yellow-400\">$24.3K</p>\n                    <p className=\"text-sm text-yellow-300\">120+ days</p>\n                  </div>\n                </div>\n                <div\n                  className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-slate-600\"\n                  onClick={() =>\n                    setInputValue(\n                      \"Analyze risk zones Chiriquí, Colón, and San Miguelito. What actions should we take?\",\n                    )\n                  }\n                >\n                  <h5 className=\"text-sm font-semibold text-blue-200 mb-2\">\n                    Risk Zones Details\n                  </h5>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-blue-200\">Chiriquí</span>\n                      <span className=\"bg-red-500/20 text-red-400 px-2 py-1 rounded-full text-xs border border-red-500/30\">\n                        High Risk\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-blue-200\">Colón</span>\n                      <span className=\"bg-orange-500/20 text-orange-400 px-2 py-1 rounded-full text-xs border border-orange-500/30\">\n                        Medium Risk\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-blue-200\">San Miguelito</span>\n                      <span className=\"bg-yellow-500/20 text-yellow-400 px-2 py-1 rounded-full text-xs border border-yellow-500/30\">\n                        Low Risk\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Opportunity Card */}\n          <div\n            onClick={() => toggleCard(\"opportunities\")}\n            className={`group bg-gradient-to-br from-[#1c2340]/80 to-[#2a3b5c]/80 rounded-lg shadow-lg hover:shadow-xl p-2 cursor-pointer transition-all duration-500 border border-blue-500/20 hover:border-yellow-400/30 flex-1 backdrop-blur-sm ${\n              expandedCard === \"opportunities\"\n                ? \"min-h-[200px] shadow-xl\"\n                : \"min-h-[50px]\"\n            }`}\n          >\n            <div className=\"flex items-center justify-between mb-1\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 bg-yellow-400 rounded-full shadow-sm\"></div>\n                <h4 className=\"text-sm font-medium text-white group-hover:text-blue-200 transition\">\n                  {text.productOpportunity}\n                </h4>\n              </div>\n              {expandedCard === \"opportunities\" ? (\n                <ChevronUp size={16} className=\"text-blue-300\" />\n              ) : (\n                <ChevronDown\n                  size={14}\n                  className=\"text-blue-400/70 group-hover:text-blue-300 transition\"\n                />\n              )}\n            </div>\n\n            {expandedCard !== \"opportunities\" ? (\n              <>\n                <p className=\"text-lg font-semibold text-white\">\n                  Vinagre Premium\n                </p>\n                <p className=\"text-xs text-blue-200/70\">\n                  {isEnglish ? \"High potential • Weak: Mango Salsa\" : \"Alto potencial • Débil: Mango Salsa\"}\n                </p>\n                <p className=\"text-xs text-blue-300/60 mt-2 italic\">\n                  {text.clickForDetails}\n                </p>\n              </>\n            ) : (\n              <div className=\"mt-4 space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div\n                    className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-green-500/30\"\n                    onClick={() =>\n                      setInputValue(\n                        \"Tell me about Vinagre Premium opportunity and how to maximize the $45K potential revenue.\",\n                      )\n                    }\n                  >\n                    <h5 className=\"text-sm font-semibold text-green-400 mb-2\">\n                      {isEnglish ? \"High Opportunity\" : \"Alta Oportunidad\"}\n                    </h5>\n                    <p className=\"text-lg font-bold text-green-400\">\n                      Vinagre Premium\n                    </p>\n                    <p className=\"text-sm text-green-300 mb-2\">\n                      +$45K {isEnglish ? \"potential revenue\" : \"ingresos potenciales\"}\n                    </p>\n                    <div className=\"text-xs text-green-300\">\n                      <p>• {isEnglish ? \"Increase distribution to 15 new stores\" : \"Incrementar distribución a 15 tiendas nuevas\"}</p>\n                      <p>• {isEnglish ? \"Focus on premium market segment\" : \"Enfoque en segmento premium\"}</p>\n                    </div>\n                  </div>\n                  <div\n                    className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-red-500/30\"\n                    onClick={() =>\n                      setInputValue(\n                        \"Analyze Mango Salsa underperformance and suggest solutions or discontinuation strategy.\",\n                      )\n                    }\n                  >\n                    <h5 className=\"text-sm font-semibold text-red-400 mb-2\">\n                      {isEnglish ? \"Underperforming\" : \"Bajo Rendimiento\"}\n                    </h5>\n                    <p className=\"text-lg font-bold text-red-400\">\n                      Mango Salsa\n                    </p>\n                    <p className=\"text-sm text-red-300 mb-2\">\n                      -$12K {isEnglish ? \"revenue impact\" : \"impacto en ingresos\"}\n                    </p>\n                    <div className=\"text-xs text-red-300\">\n                      <p>• {isEnglish ? \"Consider discontinuation\" : \"Considerar descontinuación\"}</p>\n                      <p>• {isEnglish ? \"Low demand across all regions\" : \"Baja demanda en todas las regiones\"}</p>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"bg-slate-800 rounded-lg p-3 intelligence-clickable border border-slate-600\"\n                  onClick={() =>\n                    setInputValue(\n                      \"Detail the strategic actions for Vinagre Premium launch and Aceite de Coco promotion timeline.\",\n                    )\n                  }\n                >\n                  <h5 className=\"text-sm font-semibold text-blue-200 mb-2\">\n                    Strategic Actions\n                  </h5>\n                  <div className=\"space-y-2 text-sm text-blue-200\">\n                    <div\n                      className=\"flex items-center gap-2 animate-slideInLeft\"\n                      style={{ animationDelay: \"0ms\" }}\n                    >\n                      <PulseIndicator color=\"blue\" size=\"sm\" />\n                      <span>\n                        Launch Vinagre Premium in Panamá Centro (+8 stores)\n                      </span>\n                    </div>\n                    <div\n                      className=\"flex items-center gap-2 animate-slideInLeft\"\n                      style={{ animationDelay: \"150ms\" }}\n                    >\n                      <PulseIndicator color=\"green\" size=\"sm\" />\n                      <span>Promotional campaign for Aceite de Coco</span>\n                    </div>\n                    <div\n                      className=\"flex items-center gap-2 animate-slideInLeft\"\n                      style={{ animationDelay: \"300ms\" }}\n                    >\n                      <PulseIndicator color=\"yellow\" size=\"sm\" />\n                      <span>Review Mango Salsa pricing strategy</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      {/* Main Chat Interface */}\n      <div className=\"flex flex-col h-[calc(100vh-120px)]\">\n        <main className=\"flex flex-col items-center p-8 flex-1 relative\">\n          {/* 1. BRAND SECTION (Top Centered) */}\n          {messages.length === 0 && !isTyping && (\n            <>\n              <div className=\"flex flex-col items-center mt-8 mb-4\">\n                <div\n                  className=\"vortex-icon mb-2\"\n                  style={\n                    {\n                      width: \"32px\",\n                      height: \"32px\",\n                      \"--vortex-size\": \"32px\",\n                      animation: \"vortex-slow-rotate 20s linear infinite\",\n                    } as React.CSSProperties\n                  }\n                >\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                </div>\n                <h1 className=\"text-xl font-semibold tracking-wide text-[#CBD5E1]\">VORTA</h1>\n                <p className=\"text-xs tracking-widest text-slate-400 uppercase\">Ainomics</p>\n              </div>\n\n              {/* 2. PAGE TITLE + SUBTITLE */}\n              <div className=\"text-center mt-6\">\n                <h2 className=\"text-3xl font-bold text-white mb-1\">KPIs</h2>\n                <h3 className=\"text-xl font-medium text-slate-300\">Try these prompts</h3>\n              </div>\n\n              {/* 3. PROMPTS SECTION (4-6 tiles, like Copilot) */}\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mt-6 max-w-4xl mx-auto\">\n                <div \n                  className=\"bg-slate-800 rounded-2xl p-4 hover:bg-slate-700 transition cursor-pointer\"\n                  onClick={() => setInputValue(\"What are my top performing regions?\")}\n                >\n                  <p className=\"text-white font-semibold\">💡 What are my top performing regions?</p>\n                  <p className=\"text-slate-400 text-sm\">Get a breakdown by performance</p>\n                </div>\n                <div \n                  className=\"bg-slate-800 rounded-2xl p-4 hover:bg-slate-700 transition cursor-pointer\"\n                  onClick={() => setInputValue(\"Where are we underperforming?\")}\n                >\n                  <p className=\"text-white font-semibold\">📉 Where are we underperforming?</p>\n                  <p className=\"text-slate-400 text-sm\">See KPIs not meeting targets</p>\n                </div>\n                <div \n                  className=\"bg-slate-800 rounded-2xl p-4 hover:bg-slate-700 transition cursor-pointer\"\n                  onClick={() => setInputValue(\"What products aren't moving?\")}\n                >\n                  <p className=\"text-white font-semibold\">📦 What products aren't moving?</p>\n                  <p className=\"text-slate-400 text-sm\">Low SKU turnover detection</p>\n                </div>\n                <div \n                  className=\"bg-slate-800 rounded-2xl p-4 hover:bg-slate-700 transition cursor-pointer\"\n                  onClick={() => setInputValue(\"Forecast next quarter\")}\n                >\n                  <p className=\"text-white font-semibold\">📊 Forecast next quarter</p>\n                  <p className=\"text-slate-400 text-sm\">Predict based on current trend</p>\n                </div>\n                <div \n                  className=\"bg-slate-800 rounded-2xl p-4 hover:bg-slate-700 transition cursor-pointer\"\n                  onClick={() => setInputValue(\"Show me budget variance analysis\")}\n                >\n                  <p className=\"text-white font-semibold\">💰 Budget variance analysis</p>\n                  <p className=\"text-slate-400 text-sm\">Compare actual vs planned spending</p>\n                </div>\n                <div \n                  className=\"bg-slate-800 rounded-2xl p-4 hover:bg-slate-700 transition cursor-pointer\"\n                  onClick={() => setInputValue(\"Which channels need attention?\")}\n                >\n                  <p className=\"text-white font-semibold\">🎯 Channel performance</p>\n                  <p className=\"text-slate-400 text-sm\">Identify improvement opportunities</p>\n                </div>\n              </div>\n\n              {/* 4. KPI CARDS GRID (cleaner spacing) */}\n              <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mt-8 px-6 w-full max-w-4xl\">\n                <div className=\"bg-slate-900 rounded-xl p-4 border border-slate-700 shadow-sm\">\n                  <p className=\"text-slate-400 text-sm\">Puntuación de Rendimiento</p>\n                  <h2 className=\"text-white text-3xl font-bold mt-1\">88</h2>\n                  <p className=\"text-slate-500 text-sm\">82% del objetivo de ventas cumplido</p>\n                </div>\n                <div className=\"bg-slate-900 rounded-xl p-4 border border-slate-700 shadow-sm\">\n                  <p className=\"text-red-400 text-sm\">Zonas en Riesgo</p>\n                  <h2 className=\"text-white text-2xl font-semibold mt-1\">3 Zonas</h2>\n                  <p className=\"text-slate-500 text-sm\">Chiriquí, Colón, San Miguelito</p>\n                </div>\n                <div className=\"bg-slate-900 rounded-xl p-4 border border-slate-700 shadow-sm\">\n                  <p className=\"text-yellow-400 text-sm\">Oportunidad de Producto</p>\n                  <h2 className=\"text-white text-md font-semibold mt-1\">Vinagre Premium</h2>\n                  <p className=\"text-slate-500 text-sm\">Alto potencial · Débil: Mango Salsa</p>\n                </div>\n              </div>\n            </>\n          )}\n\n          {/* Messages Area */}\n          {messages.length > 0 && (\n            <div className=\"flex-1 w-full max-w-4xl overflow-y-auto mb-8 px-8\">\n              <div className=\"space-y-3\">\n                {messages.map((message, index) => (\n                  <div\n                    key={message.id}\n                    className=\"animate-fadeInUp\"\n                    style={{ animationDelay: `${index * 0.1}s` }}\n                  >\n                    {message.isUser ? (\n                      <div className=\"flex justify-end\">\n                        <div className=\"user-bubble bg-gradient-to-br from-blue-600 to-blue-700 text-white px-4 py-2.5 rounded-2xl rounded-bl-md max-w-[70%] animate-slideInRight text-sm font-normal leading-relaxed shadow-sm interactive-hover\">\n                          {message.content}\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center gap-2 text-sm text-blue-200/70\">\n                          <div\n                            className=\"vortex-icon active\"\n                            style={\n                              {\n                                width: \"14px\",\n                                height: \"14px\",\n                                \"--vortex-size\": \"14px\",\n                              } as React.CSSProperties\n                            }\n                          >\n                            <div className=\"vortex-blade\"></div>\n                            <div className=\"vortex-blade\"></div>\n                            <div className=\"vortex-blade\"></div>\n                            <div className=\"vortex-blade\"></div>\n                            <div className=\"vortex-blade\"></div>\n                          </div>\n                          <span>La Doña AI</span>\n                        </div>\n                        <TypingMessage\n                          content={message.content}\n                          isLatestMessage={\n                            messages.indexOf(message) === messages.length - 1 &&\n                            !message.isUser\n                          }\n                          messageId={message.id}\n                        />\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Enhanced Typing Indicator */}\n          {isTyping && (\n            <div className=\"mb-8 animate-bounceIn\">\n              <div className=\"flex items-center gap-2 text-sm text-blue-200/70 mb-3 animate-slideInLeft\">\n                <div\n                  className=\"vortex-icon active animate-glow\"\n                  style={\n                    {\n                      width: \"14px\",\n                      height: \"14px\",\n                      \"--vortex-size\": \"14px\",\n                    } as React.CSSProperties\n                  }\n                >\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                </div>\n                <span className=\"shimmer-loading text-blue-200\">\n                  La Doña AI está analizando...\n                </span>\n              </div>\n              <div className=\"typing-indicator animate-fadeInUp\">\n                <span\n                  className=\"animate-bounce\"\n                  style={{ animationDelay: \"0ms\" }}\n                ></span>\n                <span\n                  className=\"animate-bounce\"\n                  style={{ animationDelay: \"150ms\" }}\n                ></span>\n                <span\n                  className=\"animate-bounce\"\n                  style={{ animationDelay: \"300ms\" }}\n                ></span>\n              </div>\n            </div>\n          )}\n\n          {/* 5. TEXT INPUT SECTION (Copilot-style) */}\n          <div className=\"mt-12 flex justify-center w-full\">\n            <div \n              className={`bg-slate-800 rounded-full flex items-center px-4 py-2 w-[600px] max-w-full shadow-inner transition-all duration-200 ${\n                inputFeedback === \"success\"\n                  ? \"feedback-success border-green-400/50\"\n                  : inputFeedback === \"error\"\n                    ? \"feedback-error border-red-400/50\"\n                    : isListening\n                      ? \"bg-red-500/20 shadow-lg shadow-red-500/20 animate-glow\"\n                      : \"\"\n              }`}\n            >\n              {/* Input field with speech overlay */}\n              <div className=\"flex-1 relative\">\n                <input\n                  type=\"text\"\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder={\n                    isListening ? text.listening : \"Ask anything about your business...\"\n                  }\n                  className=\"flex-grow bg-transparent outline-none text-white placeholder-slate-400 px-2 text-lg\"\n                  disabled={isTyping}\n                />\n\n                {/* Interim speech results overlay */}\n                {isListening && interimTranscript && (\n                  <div className=\"absolute inset-0 px-2 py-2 text-lg text-slate-300 italic pointer-events-none\">\n                    {inputValue}\n                    {interimTranscript}\n                  </div>\n                )}\n\n                {/* Voice recording indicator */}\n                {isListening && (\n                  <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2 flex items-center gap-2\">\n                    <div className=\"flex gap-1\">\n                      <div\n                        className=\"w-1 h-3 bg-red-400 rounded-full animate-pulse\"\n                        style={{ animationDelay: \"0ms\" }}\n                      ></div>\n                      <div\n                        className=\"w-1 h-4 bg-red-500 rounded-full animate-pulse\"\n                        style={{ animationDelay: \"150ms\" }}\n                      ></div>\n                      <div\n                        className=\"w-1 h-2 bg-red-400 rounded-full animate-pulse\"\n                        style={{ animationDelay: \"300ms\" }}\n                      ></div>\n                    </div>\n                    <span className=\"text-xs text-red-500 font-medium\">\n                      REC\n                    </span>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex gap-2\">\n                {/* Language toggle for speech recognition */}\n                {speechSupported && (\n                  <button\n                    onClick={toggleLanguage}\n                    title={text.language}\n                    className=\"px-2 py-1 text-xs font-medium text-slate-400 hover:text-white rounded-md transition-all duration-150 button-press ripple-effect\"\n                  >\n                    {speechLanguage === \"es-ES\" ? \"ES\" : \"EN\"}\n                  </button>\n                )}\n\n                {/* Attachment button */}\n                <button\n                  className=\"text-slate-400 hover:text-white transition-colors\"\n                  title=\"Attach file\"\n                >\n                  <Paperclip className=\"w-5 h-5\" />\n                </button>\n\n                {/* Voice button */}\n                <button\n                  onClick={toggleVoice}\n                  title={\n                    !speechSupported\n                      ? \"Reconocimiento de voz no disponible\"\n                      : isListening\n                        ? \"Hacer clic para detener grabación (Ctrl+M)\"\n                        : \"Hacer clic y hablar (Ctrl+M)\"\n                  }\n                  disabled={!speechSupported}\n                  className={`relative transition-colors ${\n                    !speechSupported\n                      ? \"text-slate-600 cursor-not-allowed\"\n                      : isListening\n                        ? \"text-white bg-red-500 rounded-full p-1 shadow-lg shadow-red-500/50 scale-105 animate-glow\"\n                        : \"text-slate-400 hover:text-white\"\n                  }`}\n                >\n                  <Mic className=\"w-5 h-5\" />\n                  {isListening && (\n                    <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-600 rounded-full animate-ping\"></div>\n                  )}\n                </button>\n\n                {/* Send arrow button */}\n                <button\n                  onClick={handleSendMessage}\n                  title={text.sendMessage}\n                  className={`transition-colors ${\n                    inputValue.trim() && !isTyping\n                      ? \"text-blue-500 hover:text-blue-400\"\n                      : \"text-slate-600 cursor-not-allowed\"\n                  }`}\n                  disabled={!inputValue.trim() || isTyping}\n                >\n                  <ArrowUp className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div ref={messagesEndRef} />\n        </main>\n      </div>\n\n      {/* AI Prompt Generator */}\n      <PromptGenerator\n        onPromptSelect={handlePromptSelect}\n        isVisible={showPromptGenerator}\n        onToggle={() => setShowPromptGenerator(!showPromptGenerator)}\n      />\n    </div>\n  );\n}\n","size_bytes":44067},"client/src/pages/chat-clean.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Paperclip, Globe, Mic, Send, Copy, Expand, Pin, Bell, Home, BarChart2, Settings, LogOut, User, Search, Compass, FileText, ChevronDown } from \"lucide-react\";\nimport laDonaLogo from \"@assets/Screenshot 2025-05-19 alle 15.08.46.png\";\n\ninterface Message {\n  id: string;\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\nexport default function Chat() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isVoiceActive, setIsVoiceActive] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: inputValue,\n      isUser: true,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue(\"\");\n    setIsTyping(true);\n\n    // Simulate AI response\n    setTimeout(() => {\n      const aiResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        content: \"Based on your La Doña sales data, I can see several areas requiring attention. The Colón region shows a 33% gap to target, primarily due to declining vinegar sales and delivery delays. Would you like me to provide a detailed breakdown of the underperforming SKUs or suggest specific action items?\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, aiResponse]);\n      setIsTyping(false);\n    }, 2500);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e]\">\n      \n      {/* Fixed Vertical Sidebar - Perplexity Pro Style */}\n      <aside className=\"fixed left-0 top-0 h-full w-20 bg-[#1E1E1E] border-r border-[#2C2C2C] flex flex-col items-center py-6 z-50\">\n        \n        {/* Top Section - Branding + Navigation */}\n        <div className=\"flex flex-col items-center space-y-6\">\n          {/* La Doña Logo */}\n          <div className=\"w-10 h-10 rounded-full overflow-hidden bg-blue-500/20 flex items-center justify-center\">\n            <img \n              src={laDonaLogo} \n              className=\"w-8 h-8 object-cover rounded-full\" \n              alt=\"La Doña\" \n            />\n          </div>\n          \n          {/* Navigation Icons */}\n          <div className=\"flex flex-col space-y-4\">\n            <button \n              className=\"w-10 h-10 rounded-md bg-transparent hover:bg-blue-500/20 flex items-center justify-center text-blue-200 hover:text-white transition-all duration-200\"\n              title=\"Search\"\n            >\n              <Search className=\"w-5 h-5\" />\n            </button>\n            \n            <button \n              className=\"w-10 h-10 rounded-md bg-transparent hover:bg-blue-500/20 flex items-center justify-center text-blue-200 hover:text-white transition-all duration-200\"\n              title=\"Discover\"\n            >\n              <Compass className=\"w-5 h-5\" />\n            </button>\n            \n            <button \n              className=\"w-10 h-10 rounded-md bg-transparent hover:bg-blue-500/20 flex items-center justify-center text-blue-200 hover:text-white transition-all duration-200\"\n              title=\"Reports\"\n            >\n              <BarChart2 className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Bottom Section - User/Utility */}\n        <div className=\"mt-auto flex flex-col items-center space-y-4\">\n          {/* User Badge */}\n          <div className=\"w-10 h-10 rounded-full bg-teal-500 flex items-center justify-center text-white font-semibold text-sm\">\n            C\n          </div>\n          \n          {/* Dropdown Icon */}\n          <button \n            className=\"w-8 h-8 rounded-md bg-transparent hover:bg-blue-500/20 flex items-center justify-center text-blue-200 hover:text-white transition-all duration-200\"\n            title=\"Settings\"\n          >\n            <ChevronDown className=\"w-4 h-4\" />\n          </button>\n          \n          {/* Version/Status */}\n          <div className=\"w-2 h-2 rounded-full bg-green-400\"></div>\n        </div>\n      </aside>\n\n      {/* Main Content with Left Margin */}\n      <div className=\"flex-1 ml-20\">\n        {/* Main Content */}\n        <main className=\"flex flex-col items-center justify-center p-10 min-h-screen\">\n        \n        {/* Vorta Logo */}\n        {messages.length === 0 && !isTyping && (\n          <div className=\"vortex-icon animate-pulse mb-4\" style={{ width: '32px', height: '32px' }}>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n          </div>\n        )}\n\n        {/* Messages Area */}\n        {messages.length > 0 && (\n          <div className=\"mb-8 space-y-6 max-h-[60vh] overflow-y-auto w-full max-w-3xl\">\n            {messages.map((message) => (\n              <div key={message.id} className=\"animate-[fadeIn_0.3s_ease-out]\">\n                {message.isUser ? (\n                  <div className=\"text-xl text-white font-medium mb-4\">\n                    {message.content}\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-2 text-sm text-blue-200\">\n                      <div className=\"vortex-icon active\" style={{ width: '14px', height: '14px' }}>\n                        <div className=\"vortex-blade\"></div>\n                        <div className=\"vortex-blade\"></div>\n                        <div className=\"vortex-blade\"></div>\n                        <div className=\"vortex-blade\"></div>\n                        <div className=\"vortex-blade\"></div>\n                        <div className=\"vortex-blade\"></div>\n                      </div>\n                      <span>Vorta</span>\n                    </div>\n                    <div className=\"text-white leading-relaxed\">\n                      {message.content}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Typing Indicator */}\n        {isTyping && (\n          <div className=\"mb-8 animate-[fadeIn_0.3s_ease-out]\">\n            <div className=\"flex items-center gap-2 text-sm text-blue-200 mb-2\">\n              <div className=\"vortex-icon active\" style={{ width: '14px', height: '14px' }}>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n              </div>\n              <span>Vorta</span>\n            </div>\n            <div className=\"flex gap-1\">\n              <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\"></div>\n              <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }}></div>\n              <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }}></div>\n            </div>\n          </div>\n        )}\n\n        {/* Chat Input */}\n        <div className=\"w-full max-w-3xl bg-slate-800 border border-blue-500/30 shadow-md rounded-full px-6 py-4 flex items-center space-x-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Ask about KPIs or performance...\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyDown={handleKeyDown}\n            className=\"flex-1 outline-none text-white placeholder-blue-200/50 bg-transparent\"\n          />\n          <button className=\"text-blue-200 hover:text-white transition-colors\">\n            <Globe className=\"w-5 h-5\" />\n          </button>\n          <button className=\"text-blue-200 hover:text-white transition-colors\">\n            <Paperclip className=\"w-5 h-5\" />\n          </button>\n          <button \n            onClick={() => setIsVoiceActive(!isVoiceActive)}\n            className={`transition-colors ${isVoiceActive ? 'text-red-500' : 'text-blue-200 hover:text-white'}`}\n          >\n            <Mic className=\"w-5 h-5\" />\n          </button>\n          <button \n            onClick={handleSendMessage}\n            disabled={!inputValue.trim() || isTyping}\n            className={`ml-2 rounded-full px-4 py-2 transition-colors ${\n              inputValue.trim() \n                ? 'bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-500 hover:to-blue-600 text-white' \n                : 'bg-slate-600 text-slate-400 opacity-50 cursor-not-allowed'\n            }`}\n          >\n            Ask\n          </button>\n        </div>\n\n        <div ref={messagesEndRef} />\n        </main>\n      </div>\n    </div>\n  );\n}","size_bytes":9432},"client/src/pages/chat-perplexity.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Paperclip, Globe, Mic, Search, Compass, BarChart2, ChevronDown, Target, TrendingUp } from \"lucide-react\";\nimport laDonaLogo from \"@assets/Screenshot 2025-05-19 alle 15.08.46.png\";\n\ninterface Message {\n  id: string;\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\nexport default function Chat() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isVoiceActive, setIsVoiceActive] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: inputValue,\n      isUser: true,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue(\"\");\n    setIsTyping(true);\n\n    // Simulate AI response\n    setTimeout(() => {\n      const aiResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        content: \"Based on your La Doña sales data, I can see several areas requiring attention. The Colón region shows a 33% gap to target, primarily due to declining vinegar sales and delivery delays. Would you like me to provide a detailed breakdown of the underperforming SKUs or suggest specific action items?\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, aiResponse]);\n      setIsTyping(false);\n    }, 2500);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-white\">\n      \n      {/* Fixed Vertical Sidebar - Perplexity Style */}\n      <aside className=\"fixed left-0 top-0 h-full w-[180px] bg-[#2a2a2a] border-r border-[#3a3a3a] flex flex-col py-6\" style={{ zIndex: 9999 }}>\n        \n        {/* Logo at Top */}\n        <div className=\"flex justify-center mb-8\">\n          <div className=\"w-12 h-12 flex items-center justify-center\">\n            <img \n              src={laDonaLogo} \n              className=\"w-10 h-10 object-contain filter brightness-0 invert\" \n              alt=\"La Doña\" \n            />\n          </div>\n        </div>\n\n        {/* Plus Button */}\n        <div className=\"flex justify-center mb-12\">\n          <button className=\"w-12 h-12 rounded-full bg-white/10 hover:bg-white/20 flex items-center justify-center text-white transition-all duration-200\">\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n            </svg>\n          </button>\n        </div>\n        \n        {/* Navigation Items */}\n        <div className=\"flex flex-col space-y-6 px-4\">\n          {/* Home */}\n          <button className=\"flex flex-col items-center space-y-2 text-gray-400 hover:text-white transition-colors group\">\n            <div className=\"w-10 h-10 rounded-full flex items-center justify-center group-hover:bg-white/10 transition-all\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n              </svg>\n            </div>\n            <span className=\"text-xs\">Home</span>\n          </button>\n\n          {/* Scopri */}\n          <button className=\"flex flex-col items-center space-y-2 text-gray-400 hover:text-white transition-colors group\">\n            <div className=\"w-10 h-10 rounded-full flex items-center justify-center group-hover:bg-white/10 transition-all\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9\" />\n              </svg>\n            </div>\n            <span className=\"text-xs\">Scopri</span>\n          </button>\n\n          {/* Spazi */}\n          <button className=\"flex flex-col items-center space-y-2 text-gray-400 hover:text-white transition-colors group\">\n            <div className=\"w-10 h-10 rounded-full flex items-center justify-center group-hover:bg-white/10 transition-all\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n            </div>\n            <span className=\"text-xs\">Spazi</span>\n          </button>\n        </div>\n\n        {/* Bottom Section - User */}\n        <div className=\"mt-auto flex flex-col items-center space-y-4\">\n          {/* User Badge with PRO indicator */}\n          <div className=\"relative\">\n            <div className=\"w-12 h-12 rounded-full bg-teal-500 flex items-center justify-center text-white font-semibold text-lg\">\n              E\n            </div>\n            <div className=\"absolute -bottom-1 -right-1 bg-blue-500 text-white text-xs px-1.5 py-0.5 rounded text-[10px] font-bold\">\n              PRO\n            </div>\n          </div>\n          \n          {/* Status Indicator */}\n          <div className=\"w-3 h-3 rounded-full bg-orange-500\"></div>\n        </div>\n      </aside>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Top KPI Dashboard - Always Visible */}\n        <div className=\"bg-gray-50 border-b border-gray-200 px-6 py-4\">\n          <h3 className=\"text-sm font-medium text-gray-600 mb-4\">Most Relevant Insights</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {/* Sales Performance Card */}\n            <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\n                  <BarChart2 size={16} className=\"text-green-600\" />\n                </div>\n                <h4 className=\"text-sm font-medium text-gray-800\">Sales vs Target</h4>\n              </div>\n              <p className=\"text-2xl font-bold text-gray-900 mb-1\">82%</p>\n              <p className=\"text-xs text-gray-500\">Aderezo outperforming +6% above budget</p>\n            </div>\n\n            {/* Risk Alert Card */}\n            <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <div className=\"w-8 h-8 bg-red-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-4 h-4 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 18.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n                <h4 className=\"text-sm font-medium text-gray-800\">Critical Backorders</h4>\n              </div>\n              <p className=\"text-2xl font-bold text-gray-900 mb-1\">28 orders</p>\n              <p className=\"text-xs text-gray-500\">Zona Norte needs immediate reorder</p>\n            </div>\n\n            {/* Opportunity Card */}\n            <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <div className=\"w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center\">\n                  <svg className=\"w-4 h-4 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                  </svg>\n                </div>\n                <h4 className=\"text-sm font-medium text-gray-800\">Growth Opportunity</h4>\n              </div>\n              <p className=\"text-2xl font-bold text-gray-900 mb-1\">+26% ROI</p>\n              <p className=\"text-xs text-gray-500\">Scanner/Tonga campaigns surge this quarter</p>\n            </div>\n          </div>\n        </div>\n\n        <main className=\"flex flex-col items-center justify-center p-10 flex-1\">\n          {/* Vorta Logo */}\n          {messages.length === 0 && !isTyping && (\n            <div className=\"vortex-icon animate-pulse mb-4\" style={{ width: '32px', height: '32px' }}>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n              <div className=\"vortex-blade\"></div>\n            </div>\n          )}\n\n          {/* Messages Area */}\n          {messages.length > 0 && (\n            <div className=\"mb-8 space-y-6 max-h-[60vh] overflow-y-auto w-full max-w-3xl\">\n              {messages.map((message) => (\n                <div key={message.id} className=\"animate-[fadeIn_0.3s_ease-out]\">\n                  {message.isUser ? (\n                    <div className=\"text-xl text-gray-800 font-medium mb-4\">\n                      {message.content}\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center gap-2 text-sm text-gray-500\">\n                        <div className=\"vortex-icon active\" style={{ width: '14px', height: '14px' }}>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                        </div>\n                        <span>Vorta</span>\n                      </div>\n                      <div className=\"text-gray-800 leading-relaxed\">\n                        {message.content}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {/* Typing Indicator */}\n          {isTyping && (\n            <div className=\"mb-8 animate-[fadeIn_0.3s_ease-out]\">\n              <div className=\"flex items-center gap-2 text-sm text-gray-500 mb-2\">\n                <div className=\"vortex-icon active\" style={{ width: '14px', height: '14px' }}>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                  <div className=\"vortex-blade\"></div>\n                </div>\n                <span>Vorta</span>\n              </div>\n              <div className=\"flex gap-1\">\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-pulse\"></div>\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }}></div>\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }}></div>\n              </div>\n            </div>\n          )}\n\n          {/* Chat Input */}\n          <div className=\"w-full max-w-3xl bg-white border border-gray-200 shadow-md rounded-full px-6 py-4 flex items-center space-x-4\">\n            <input\n              type=\"text\"\n              placeholder=\"Ask about KPIs or performance...\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyDown={handleKeyDown}\n              className=\"flex-1 outline-none text-gray-700 placeholder-gray-400\"\n            />\n            <button className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <Globe className=\"w-5 h-5\" />\n            </button>\n            <button className=\"text-gray-500 hover:text-gray-700 transition-colors\">\n              <Paperclip className=\"w-5 h-5\" />\n            </button>\n            <button \n              onClick={() => setIsVoiceActive(!isVoiceActive)}\n              className={`transition-colors ${isVoiceActive ? 'text-red-500' : 'text-gray-500 hover:text-gray-700'}`}\n            >\n              <Mic className=\"w-5 h-5\" />\n            </button>\n            <button \n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isTyping}\n              className={`ml-2 rounded-full px-4 py-2 transition-colors ${\n                inputValue.trim() \n                  ? 'bg-red-500 hover:bg-red-600 text-white' \n                  : 'bg-red-300 text-white opacity-50 cursor-not-allowed'\n              }`}\n            >\n              Ask\n            </button>\n          </div>\n\n          <div ref={messagesEndRef} />\n        </main>\n      </div>\n    </div>\n  );\n}","size_bytes":13608},"client/src/pages/chat-smooth.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Send, Loader2 } from \"lucide-react\";\nimport { TypewriterMessage } from \"@/components/typewriter-message\";\n\ninterface Message {\n  id: string;\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\nexport default function SmoothChat() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n\n    const messageContent = inputValue.trim();\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: messageContent,\n      isUser: true,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue(\"\");\n    setIsTyping(true);\n\n    try {\n      // Send message to API\n      const response = await fetch('/api/conversations/1/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          content: messageContent,\n          role: 'user'\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n\n      // Get updated messages including AI response\n      const messagesResponse = await fetch('/api/conversations/1/messages');\n      if (messagesResponse.ok) {\n        const data = await messagesResponse.json();\n        setMessages(data.map((msg: any) => ({\n          id: msg.id.toString(),\n          content: msg.content,\n          isUser: msg.role === 'user',\n          timestamp: new Date(msg.timestamp),\n        })));\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Show error message\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: \"I'm experiencing connection issues. Please check your network and try again.\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"h-screen bg-white flex flex-col\">\n      {/* Header */}\n      <div className=\"border-b border-gray-100 px-6 py-4 bg-white\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-xl font-semibold text-gray-900\">La Doña AI</h1>\n            <p className=\"text-sm text-gray-500\">Sales Dashboard Assistant</p>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n            <span className=\"text-sm text-gray-600\">Online</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages Container */}\n      <div className=\"flex-1 overflow-y-auto px-6 py-4 smooth-scroll\">\n        {messages.length === 0 && (\n          <div className=\"flex flex-col items-center justify-center h-full text-center animate-fadeInUp\">\n            <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4\">\n              <span className=\"text-2xl\">🤖</span>\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Welcome to La Doña AI</h2>\n            <p className=\"text-gray-500 max-w-md\">\n              I'm your sales dashboard assistant. Ask me about regions, products, performance metrics, \n              or any business data from your dashboard.\n            </p>\n            <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-3 max-w-2xl\">\n              <button \n                onClick={() => setInputValue(\"What regions are at risk?\")}\n                className=\"p-3 text-left bg-gray-50 hover:bg-gray-100 rounded-lg border transition-colors\"\n              >\n                <p className=\"font-medium text-gray-900 text-sm\">What regions are at risk?</p>\n                <p className=\"text-gray-500 text-xs mt-1\">Get insights on underperforming areas</p>\n              </button>\n              <button \n                onClick={() => setInputValue(\"Show me our best performing products\")}\n                className=\"p-3 text-left bg-gray-50 hover:bg-gray-100 rounded-lg border transition-colors\"\n              >\n                <p className=\"font-medium text-gray-900 text-sm\">Show me our best performing products</p>\n                <p className=\"text-gray-500 text-xs mt-1\">Identify top revenue generators</p>\n              </button>\n              <button \n                onClick={() => setInputValue(\"How is Chiriquí performing?\")}\n                className=\"p-3 text-left bg-gray-50 hover:bg-gray-100 rounded-lg border transition-colors\"\n              >\n                <p className=\"font-medium text-gray-900 text-sm\">How is Chiriquí performing?</p>\n                <p className=\"text-gray-500 text-xs mt-1\">Regional performance analysis</p>\n              </button>\n              <button \n                onClick={() => setInputValue(\"What should I focus on today?\")}\n                className=\"p-3 text-left bg-gray-50 hover:bg-gray-100 rounded-lg border transition-colors\"\n              >\n                <p className=\"font-medium text-gray-900 text-sm\">What should I focus on today?</p>\n                <p className=\"text-gray-500 text-xs mt-1\">Get actionable recommendations</p>\n              </button>\n            </div>\n          </div>\n        )}\n\n        {messages.map((message, index) => (\n          <TypewriterMessage\n            key={message.id}\n            content={message.content}\n            isUser={message.isUser}\n            timestamp={message.timestamp}\n            isLatest={index === messages.length - 1}\n          />\n        ))}\n\n        {isTyping && (\n          <div className=\"flex items-center gap-3 mb-4 animate-fadeInUp\">\n            <div className=\"bg-gray-50 border border-gray-100 rounded-2xl rounded-bl-sm px-4 py-3\">\n              <div className=\"flex items-center gap-2\">\n                <Loader2 className=\"w-4 h-4 animate-spin text-gray-500\" />\n                <span className=\"text-gray-500 text-sm\">La Doña AI is thinking...</span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input Area */}\n      <div className=\"border-t border-gray-100 p-4 bg-white\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex items-end gap-3\">\n            <div className=\"flex-1 relative\">\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={inputValue}\n                onChange={(e) => setInputValue(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Ask about sales dashboard, regions, products...\"\n                className=\"w-full px-4 py-3 border border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                disabled={isTyping}\n              />\n            </div>\n            <button\n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isTyping}\n              className=\"px-4 py-3 bg-gray-900 text-white rounded-xl hover:bg-gray-800 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n            >\n              <Send className=\"w-4 h-4\" />\n            </button>\n          </div>\n          <p className=\"text-xs text-gray-400 mt-2 text-center\">\n            La Doña AI can help with sales dashboard questions. Press Enter to send.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8155},"client/src/pages/chat.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Paperclip, Globe, Mic, Send, Copy, Expand, Pin, Bell, Home, BarChart2, Settings, LogOut, User } from \"lucide-react\";\nimport laDonaLogo from \"@assets/Screenshot 2025-05-19 alle 15.08.46.png\";\n\ninterface Message {\n  id: string;\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\nexport default function Chat() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isVoiceActive, setIsVoiceActive] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: inputValue,\n      isUser: true,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue(\"\");\n    setIsTyping(true);\n\n    // Simulate AI response\n    setTimeout(() => {\n      const aiResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        content: \"Based on your La Doña sales data, I can see several areas requiring attention. The Colón region shows a 33% gap to target, primarily due to declining vinegar sales and delivery delays. Would you like me to provide a detailed breakdown of the underperforming SKUs or suggest specific action items?\",\n        isUser: false,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, aiResponse]);\n      setIsTyping(false);\n    }, 2500);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const suggestedPrompts = [\n    \"Which products underperformed last week?\",\n    \"Show me current inventory gaps by region\", \n    \"What are the top-selling SKUs this month?\",\n    \"Analyze delivery performance trends\",\n    \"Compare sales targets vs actual results\",\n    \"Which stores need immediate attention?\",\n    \"Show competitor pricing analysis\",\n    \"What's driving the revenue decline in Colón?\"\n  ];\n\n  return (\n    <div className=\"flex h-screen bg-white\">\n      \n      {/* Sidebar */}\n      <aside className=\"w-60 bg-white border-r border-gray-200 p-4 flex flex-col items-start\">\n        <img \n          src={laDonaLogo} \n          className=\"w-24 mb-2\" \n          alt=\"La Doña logo\" \n        />\n        <h1 className=\"text-lg font-semibold text-gray-800 leading-tight\">\n          La Doña <br /> Business <br /> Intelligence\n        </h1>\n\n        <div className=\"mt-8 text-sm text-gray-600\">\n          <div className=\"font-medium text-gray-900\">Carlos Mendoza</div>\n          <div className=\"text-xs text-gray-500\">General Manager</div>\n        </div>\n\n        <button className=\"mt-auto text-sm text-red-500 hover:text-red-700 transition-colors\">\n          Logout →\n        </button>\n      </aside>\n\n      {/* Main Content */}\n      <main className=\"flex-1 flex flex-col items-center justify-center p-10\">\n        {/* Alert Bell - Top Right */}\n        <div className=\"absolute top-6 right-6 z-20\">\n          <button \n            onClick={() => setShowNotifications(!showNotifications)}\n            className=\"p-2 hover:bg-gray-100 rounded-full transition-colors duration-200 relative\"\n          >\n          <Bell className=\"w-5 h-5 text-gray-600\" />\n          <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full\"></div>\n        </button>\n        \n        {showNotifications && (\n          <div className=\"absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-lg border p-3 animate-[fadeInUp_0.2s_ease-out]\">\n            <div className=\"text-xs text-gray-500 mb-2 font-medium\">Business Alerts</div>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-red-600\">3 Zones Below Target</span>\n                <span className=\"text-xs text-red-500\">●</span>\n              </div>\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-orange-600\">2 SKUs Missing</span>\n                <span className=\"text-xs text-orange-500\">●</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Main Content Container */}\n      <div className=\"w-full max-w-[600px] px-4\">\n        \n        {/* Vorta Logo */}\n        {messages.length === 0 && !isTyping && (\n          <div className=\"vortex-icon animate-pulse mb-4\" style={{ width: '32px', height: '32px' }}>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n            <div className=\"vortex-blade\"></div>\n          </div>\n        )}\n          \n          {/* Messages Area */}\n          {messages.length > 0 && (\n            <div className=\"mb-8 space-y-6 max-h-[60vh] overflow-y-auto\">\n              {messages.map((message) => (\n                <div key={message.id} className=\"animate-[fadeIn_0.3s_ease-out]\">\n                  {message.isUser ? (\n                    /* User Message - Simple Text */\n                    <div className=\"text-xl text-gray-800 font-medium mb-4\">\n                      {message.content}\n                    </div>\n                  ) : (\n                    /* AI Response */\n                    <div className=\"space-y-4\">\n                      {/* Vorta Logo - Only appears with responses */}\n                      <div className=\"flex items-center gap-2 text-sm text-gray-500\">\n                        <div className=\"vortex-icon active\" style={{ width: '14px', height: '14px', filter: 'drop-shadow(0 0 6px rgba(225, 29, 72, 0.3))' }}>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                          <div className=\"vortex-blade\"></div>\n                        </div>\n                        <span>Vorta</span>\n                      </div>\n                      \n                      {/* Response Content */}\n                      <div className=\"text-gray-800 leading-relaxed\">\n                        {message.content}\n                      </div>\n                      \n                      {/* Action Buttons */}\n                      <div className=\"flex gap-3 mt-4\">\n                        <button className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg text-sm text-gray-700 transition-colors\">\n                          View SKU List\n                        </button>\n                        <button className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg text-sm text-gray-700 transition-colors\">\n                          Compare Chains\n                        </button>\n                        <button className=\"px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg text-sm text-gray-700 transition-colors\">\n                          View Dashboard\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n\n        {/* Typing Indicator */}\n        {isTyping && (\n          <div className=\"mb-8 animate-[fadeIn_0.3s_ease-out]\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-500 mb-2\">\n              <div className=\"vortex-icon active\" style={{ width: '14px', height: '14px', filter: 'drop-shadow(0 0 6px rgba(225, 29, 72, 0.3))' }}>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n                <div className=\"vortex-blade\"></div>\n              </div>\n              <span>Vorta</span>\n            </div>\n            <div className=\"flex gap-1\">\n              <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-pulse\"></div>\n              <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }}></div>\n              <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }}></div>\n            </div>\n          </div>\n        )}\n\n        {/* Chat Input Area - Clean White Style */}\n        <div className={`flex items-center gap-3 w-full px-4 py-3 bg-[#f9f9f9] rounded-xl shadow-sm transition-shadow duration-300 ${\n          isFocused ? 'shadow-[0_0_0_2px_#e11d48]' : ''\n        }`}>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyDown={handleKeyDown}\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            placeholder=\"Ask about KPIs or performance...\"\n            className=\"flex-1 bg-transparent border-none outline-none text-gray-800 text-base placeholder-gray-500\"\n          />\n          \n          {/* Icons */}\n          <div className=\"flex items-center gap-2 text-gray-500\">\n            <button \n              className=\"p-1 hover:text-gray-700 transition-colors\" \n              title=\"Attach files\"\n            >\n              <Paperclip className=\"w-4 h-4\" />\n            </button>\n            \n            <button \n              className=\"p-1 hover:text-gray-700 transition-colors\" \n              title=\"Language\"\n            >\n              <Globe className=\"w-4 h-4\" />\n            </button>\n            \n            <button \n              onClick={() => setIsVoiceActive(!isVoiceActive)}\n              className={`p-1 transition-all duration-200 ${\n                isVoiceActive \n                  ? 'text-[#e11d48] shadow-[0_0_8px_rgba(225,29,72,0.4)] animate-pulse' \n                  : 'hover:text-gray-700'\n              }`}\n              title=\"Voice input\"\n            >\n              <Mic className=\"w-4 h-4\" />\n            </button>\n          </div>\n          \n          {/* Ask Button */}\n          <button\n            onClick={handleSendMessage}\n            disabled={!inputValue.trim() || isTyping}\n            className={`bg-[#e11d48] hover:bg-[#d11d47] text-white font-medium px-4 py-2 rounded-lg transition-all duration-200 ${\n              !inputValue.trim() || isTyping ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n          >\n            Ask\n          </button>\n        </div>\n\n        <div ref={messagesEndRef} />\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":11236},"client/src/pages/collaboration.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { Search, Filter, Send, AtSign, Hash } from 'lucide-react';\nimport ContextPanel from '@/components/ContextPanel';\nimport ReportPanel from '@/components/ReportPanel';\nimport KPIDrawer from '@/components/KPIDrawer';\nimport { ToastContainer } from '@/components/Toast';\nimport { parseChips, teamMembers } from '@/data/entities';\n\n// Refined tag component with readable format\nconst EntityTag = ({ type, value, id, onClick }: { type: string; value: string; id: string; onClick: () => void }) => {\n  const typeLabels = {\n    kpi: 'KPI',\n    zone: 'Zone',\n    product: 'Product',\n    report: 'Report'\n  };\n  \n  const typeColors = {\n    kpi: 'bg-blue-500/10 text-blue-300 border-blue-500/20',\n    zone: 'bg-emerald-500/10 text-emerald-300 border-emerald-500/20',\n    product: 'bg-amber-500/10 text-amber-300 border-amber-500/20',\n    report: 'bg-purple-500/10 text-purple-300 border-purple-500/20'\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      className={`inline-flex items-center px-3 py-1.5 text-xs font-medium rounded-full border transition-all duration-200 hover:scale-105 ${typeColors[type as keyof typeof typeColors] || typeColors.kpi}`}\n    >\n      {typeLabels[type as keyof typeof typeLabels] || type}: {value}\n    </button>\n  );\n};\n\n// Refined comment card with luxury styling\nconst CommentCard = ({ comment, openReportPanel, openKpiDrawer }: { \n  comment: any; \n  openReportPanel: (id: string) => void;\n  openKpiDrawer: (id: string) => void;\n}) => {\n  const member = teamMembers.find(m => m.name === comment.author);\n  \n  // Extract entities for clean display\n  const entities = [\n    { type: 'zone', value: 'Chiriquí Central', id: 'chiriqui' },\n    { type: 'product', value: 'Mango Salsa', id: 'mango-salsa' },\n    { type: 'kpi', value: 'Performance Score', id: 'performance-score' },\n    { type: 'report', value: 'Q3 Forecast', id: 'q3-forecast' }\n  ];\n  \n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ y: -4, boxShadow: '0 12px 32px rgba(0,0,0,.4)' }}\n      className=\"bg-slate-800/30 backdrop-blur-md rounded-2xl shadow-lg transition-all duration-300\"\n      style={{\n        background: 'rgba(30,41,59,.4)',\n        backdropFilter: 'blur(12px)',\n        boxShadow: '0 4px 16px rgba(0,0,0,.2)',\n        padding: '28px',\n        minHeight: '200px'\n      }}\n    >\n      {/* Header with avatar and info */}\n      <div className=\"flex items-start space-x-4 mb-6\">\n        <div className=\"relative\">\n          <div className=\"w-12 h-12 bg-slate-700/40 rounded-full flex items-center justify-center shadow-sm\">\n            <span className=\"text-sm font-semibold text-slate-300\">{comment.avatar}</span>\n          </div>\n          {member?.online && (\n            <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-emerald-400 rounded-full border-2 border-slate-800\"></div>\n          )}\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center space-x-3 mb-1\">\n            <h4 className=\"font-medium text-white\">{comment.author}</h4>\n            <span className=\"text-xs text-slate-400 font-medium\">{comment.role}</span>\n          </div>\n          <p className=\"text-xs text-slate-500\">{comment.time}</p>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"space-y-6\">\n        <p className=\"text-slate-300 leading-relaxed text-sm\">\n          {comment.content.replace(/#(kpi|zone|product|report):([^#\\s,]+)/g, '')}\n        </p>\n        \n        {/* Entity tags */}\n        <div className=\"flex flex-wrap gap-2\">\n          {entities.slice(0, comment.id).map((entity, index) => (\n            <EntityTag\n              key={index}\n              type={entity.type}\n              value={entity.value}\n              id={entity.id}\n              onClick={() => {\n                if (entity.type === 'report') openReportPanel(entity.id);\n                else if (entity.type === 'kpi') openKpiDrawer(entity.id);\n              }}\n            />\n          ))}\n        </div>\n\n        {/* Action buttons row */}\n        <div className=\"flex items-center justify-between pt-4 border-t border-slate-700/30\">\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => openReportPanel('q3-forecast')}\n              className=\"text-xs px-4 py-2 bg-slate-700/40 hover:bg-slate-600/50 rounded-lg text-slate-300 hover:text-white transition-all duration-200 hover:scale-105\"\n              onMouseEnter={(e) => {\n                e.currentTarget.style.transform = 'scale(1.02)';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.transform = 'scale(1)';\n              }}\n            >\n              Open Report\n            </button>\n            <button\n              onClick={() => openKpiDrawer('performance-score')}\n              className=\"text-xs px-4 py-2 bg-slate-700/40 hover:bg-slate-600/50 rounded-lg text-slate-300 hover:text-white transition-all duration-200 hover:scale-105\"\n              onMouseEnter={(e) => {\n                e.currentTarget.style.transform = 'scale(1.02)';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.transform = 'scale(1)';\n              }}\n            >\n              Open KPI\n            </button>\n            <button\n              onClick={() => {\n                window.dispatchEvent(new CustomEvent('create-task', { detail: { title: `Follow up on ${comment.author}'s comment` } }));\n                window.dispatchEvent(new CustomEvent('show-toast', { detail: { message: 'Task created', type: 'success' } }));\n              }}\n              className=\"text-xs px-4 py-2 bg-slate-700/40 hover:bg-slate-600/50 rounded-lg text-slate-300 hover:text-white transition-all duration-200\"\n            >\n              Create Task\n            </button>\n          </div>\n          \n          <button\n            onClick={() => {\n              window.location.href = '/scenario-simulator';\n              window.dispatchEvent(new CustomEvent('show-toast', { detail: { message: 'Opening AI Scenario Simulator', type: 'info' } }));\n            }}\n            className=\"text-xs px-4 py-2 bg-amber-500/15 hover:bg-amber-500/25 rounded-lg text-amber-300 hover:text-amber-200 transition-all duration-200 border border-amber-500/25 hover:scale-105\"\n            onMouseEnter={(e) => {\n              e.currentTarget.style.transform = 'scale(1.02)';\n              e.currentTarget.style.boxShadow = '0 0 16px rgba(245,158,11,0.4)';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.transform = 'scale(1)';\n              e.currentTarget.style.boxShadow = '0 0 0 rgba(245,158,11,0)';\n            }}\n          >\n            Simulate\n          </button>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default function Collaboration() {\n  const [, setLocation] = useLocation();\n  const [newComment, setNewComment] = useState('');\n  const [contextPanel, setContextPanel] = useState<{ isOpen: boolean; entityId: string | null; activeTab: string }>({\n    isOpen: false,\n    entityId: null,\n    activeTab: 'overview'\n  });\n\n  const [reportPanel, setReportPanel] = useState({\n    isOpen: false,\n    reportId: null as string | null\n  });\n\n  const [kpiDrawer, setKpiDrawer] = useState({\n    isOpen: false,\n    kpiId: null as string | null\n  });\n  const [showMentions, setShowMentions] = useState(false);\n  const [mentionQuery, setMentionQuery] = useState('');\n  const [activeFilter, setActiveFilter] = useState('All');\n  const [searchQuery, setSearchQuery] = useState('');\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  // Clean sample comments without hashtags\n  const [comments] = useState([\n    {\n      id: 1,\n      author: 'Elena Rodriguez',\n      role: 'Sales Director',\n      time: '2 hours ago',\n      content: 'The performance analysis for Chiriquí Central looks concerning. We need to prioritize emergency transfer for Mango Salsa tomorrow morning. Can we review the Q3 forecast impact?',\n      avatar: 'ER'\n    },\n    {\n      id: 2,\n      author: 'Miguel Santos',\n      role: 'Operations Manager',\n      time: '1 hour ago',\n      content: '@elena The David warehouse has confirmed 4,800 units available. I can coordinate the 6-hour transit route. Should we also review inventory turnover levels for other locations?',\n      avatar: 'MS'\n    },\n    {\n      id: 3,\n      author: 'Sofia Chen',\n      role: 'Analytics Lead',\n      time: '45 minutes ago',\n      content: 'I\\'ve updated the forecasting parameters for Mango Salsa. The 1.8x promotional multiplier has been applied to Chiriquí Central. We should see better predictions for similar seasonal events.',\n      avatar: 'SC'\n    }\n  ]);\n\n  // Panel handler functions\n\n  const openContextPanel = (type: string, id: string, tab = 'overview') => {\n    setContextPanel({ isOpen: true, entityId: id, activeTab: tab });\n  };\n\n  const closeContextPanel = () => {\n    setContextPanel({ isOpen: false, entityId: null, activeTab: 'overview' });\n  };\n\n  const openReportPanel = (reportId: string) => {\n    setReportPanel({ isOpen: true, reportId });\n  };\n\n  const closeReportPanel = () => {\n    setReportPanel({ isOpen: false, reportId: null });\n  };\n\n  const openKpiDrawer = (kpiId: string) => {\n    setKpiDrawer({ isOpen: true, kpiId });\n  };\n\n  const closeKpiDrawer = () => {\n    setKpiDrawer({ isOpen: false, kpiId: null });\n  };\n\n  const handleSendComment = () => {\n    if (!newComment.trim()) return;\n    // Here you would normally add the comment to the list\n    setNewComment('');\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendComment();\n    }\n  };\n\n  const handleInputChange = (value: string) => {\n    setNewComment(value);\n    \n    // Check for mentions\n    const mentionMatch = value.match(/@([a-zA-Z]*)$/);\n    if (mentionMatch) {\n      setMentionQuery(mentionMatch[1]);\n      setShowMentions(true);\n    } else {\n      setShowMentions(false);\n      setMentionQuery('');\n    }\n  };\n\n  const insertMention = (member: any) => {\n    const mentionText = `@${member.name.toLowerCase().replace(' ', '')} `;\n    const beforeMention = newComment.replace(/@[a-zA-Z]*$/, '');\n    setNewComment(beforeMention + mentionText);\n    setShowMentions(false);\n    inputRef.current?.focus();\n  };\n\n  const filteredMembers = teamMembers.filter(member =>\n    member.name.toLowerCase().includes(mentionQuery.toLowerCase())\n  );\n\n  return (\n    <div className=\"min-h-screen w-full bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e] text-white font-sans flex\">\n      \n      {/* Left Sidebar */}\n      <div className=\"fixed left-4 top-4 bottom-4 w-16 bg-slate-800/40 backdrop-blur-sm border border-slate-700/30 rounded-2xl flex flex-col items-center py-6 z-10\">\n        {/* Top Icon - Dashboard/Home */}\n        <div className=\"w-10 h-10 rounded-xl bg-blue-500/20 border border-blue-500/30 flex items-center justify-center mb-6\">\n          <svg className=\"w-5 h-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        </div>\n\n        {/* Navigation Icons */}\n        <div className=\"flex flex-col space-y-4\">\n          <button \n            onClick={() => setLocation('/dashboard')}\n            className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\"\n          >\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n          </button>\n\n          <button className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\">\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </button>\n\n          {/* Collaboration Hub - Highlighted */}\n          <button className=\"w-10 h-10 rounded-xl bg-blue-500/30 border border-blue-500/50 flex items-center justify-center transition-all duration-200\">\n            <svg className=\"w-5 h-5 text-blue-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n          </button>\n\n          <button className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\">\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n            </svg>\n          </button>\n\n          <button \n            onClick={() => setLocation('/scenario-simulator')}\n            className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-amber-500/50 flex items-center justify-center transition-all duration-200 hover:scale-105\"\n            title=\"AI Scenario Simulator\"\n          >\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-amber-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n            </svg>\n          </button>\n\n          <button className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\">\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Bottom Icon - User/Profile */}\n        <div className=\"mt-auto\">\n          <button className=\"w-10 h-10 rounded-xl bg-slate-700/30 hover:bg-slate-600/50 flex items-center justify-center transition-all duration-200 hover:scale-105\">\n            <svg className=\"w-5 h-5 text-slate-400 hover:text-slate-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 ml-24\">\n        <div style={{ maxWidth: '1024px', margin: '0 auto', padding: '32px' }}>\n          {/* Header */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mb-8\"\n          >\n            <h1 className=\"text-3xl font-semibold mb-2 tracking-wide bg-gradient-to-r from-slate-200 to-blue-300 bg-clip-text text-transparent\" style={{ letterSpacing: '1px', fontWeight: 600 }}>\n              Collaboration Hub\n            </h1>\n            <p className=\"text-slate-400\">Connect insights to action through intelligent team collaboration</p>\n          </motion.div>\n\n          {/* Sticky Sub-Header */}\n          <div className=\"sticky top-0 z-20 bg-slate-900/95 backdrop-blur-sm rounded-xl border border-white/10 p-4 mb-8\">\n            <div className=\"flex items-center justify-between gap-4\">\n              {/* Filters */}\n              <div className=\"flex items-center space-x-1\">\n                {['All', 'Mentions', 'Unread'].map((filter) => (\n                  <button\n                    key={filter}\n                    onClick={() => setActiveFilter(filter)}\n                    className={`px-4 py-2 text-sm font-medium transition-all duration-200 relative ${\n                      activeFilter === filter\n                        ? 'text-white'\n                        : 'text-slate-400 hover:text-slate-300'\n                    }`}\n                  >\n                    {filter}\n                    {activeFilter === filter && (\n                      <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-blue-400 rounded-full\"></div>\n                    )}\n                  </button>\n                ))}\n              </div>\n\n              {/* Search */}\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-slate-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search messages...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-10 pr-4 py-2 bg-slate-700/50 border border-slate-600/50 rounded-lg text-white placeholder-slate-400 focus:outline-none focus:border-blue-500/50 focus:ring-1 focus:ring-blue-500/20 w-64\"\n                  />\n                </div>\n\n                {/* Counter */}\n                <div className=\"px-3 py-1.5 bg-blue-500/20 border border-blue-500/30 rounded-lg\">\n                  <span className=\"text-sm font-medium text-blue-300\">3 new</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Comments Section */}\n          <div className=\"space-y-8 mb-12\">\n            {comments.map((comment, index) => (\n              <CommentCard\n                key={comment.id}\n                comment={comment}\n                openReportPanel={openReportPanel}\n                openKpiDrawer={openKpiDrawer}\n              />\n            ))}\n          </div>\n\n          {/* Enhanced Composer */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.4 }}\n            className=\"relative\"\n            style={{\n              background: 'rgba(16,24,43,.68)',\n              backdropFilter: 'blur(8px)',\n              border: '1px solid rgba(255,255,255,.06)',\n              borderRadius: '16px',\n              boxShadow: '0 8px 24px rgba(0,0,0,.35)',\n              padding: '24px'\n            }}\n          >\n            {/* Mention Dropdown */}\n            {showMentions && (\n              <div className=\"absolute bottom-full left-6 mb-2 w-64 bg-slate-800/95 backdrop-blur-sm border border-white/10 rounded-lg shadow-xl z-30\">\n                <div className=\"p-2\">\n                  <div className=\"text-xs text-slate-400 mb-2 px-2\">Mention team member</div>\n                  {filteredMembers.map((member) => (\n                    <button\n                      key={member.id}\n                      onClick={() => insertMention(member)}\n                      className=\"w-full flex items-center space-x-3 p-2 hover:bg-slate-700/50 rounded-lg transition-colors\"\n                    >\n                      <div className=\"w-6 h-6 bg-blue-500/20 rounded-full flex items-center justify-center\">\n                        <span className=\"text-xs font-semibold text-blue-300\">{member.avatar}</span>\n                      </div>\n                      <div className=\"text-left\">\n                        <div className=\"text-sm font-medium text-white\">{member.name}</div>\n                        <div className=\"text-xs text-slate-400\">{member.role}</div>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex gap-4\">\n              {/* Textarea container */}\n              <div className=\"flex-1 relative\">\n                <textarea\n                  ref={inputRef}\n                  value={newComment}\n                  onChange={(e) => handleInputChange(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Share insights, mention @teammates, discuss findings...\"\n                  className=\"w-full bg-slate-700/50 border border-slate-600/50 rounded-xl p-4 pb-12 text-white placeholder-slate-400 resize-none focus:outline-none focus:border-blue-500/50 focus:ring-1 focus:ring-blue-500/20 min-h-[120px]\"\n                />\n                \n                {/* Suggestion chips - positioned properly at bottom */}\n                <div className=\"absolute bottom-4 left-4 flex items-center space-x-4\">\n                  <button className=\"text-xs text-slate-500 hover:text-slate-400 transition-colors flex items-center space-x-1\">\n                    <AtSign className=\"w-3 h-3\" />\n                    <span>@mention</span>\n                  </button>\n                  <button className=\"text-xs text-slate-500 hover:text-slate-400 transition-colors flex items-center space-x-1\">\n                    <Hash className=\"w-3 h-3\" />\n                    <span>#tag</span>\n                  </button>\n                  <button className=\"text-xs text-slate-500 hover:text-slate-400 transition-colors\">\n                    /commands\n                  </button>\n                </div>\n              </div>\n              \n              {/* Send button - aligned with textarea */}\n              <div className=\"flex items-end\">\n                <button\n                  onClick={handleSendComment}\n                  className=\"px-6 py-3 bg-blue-500/20 hover:bg-blue-500/30 border border-blue-500/30 rounded-xl text-blue-300 font-medium transition-all duration-200 hover:scale-105 flex items-center space-x-2\"\n                  style={{\n                    boxShadow: '0 0 0 rgba(77,163,255,0)',\n                    transition: 'all 180ms ease-out'\n                  }}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.boxShadow = '0 0 24px rgba(77,163,255,0.25)';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.boxShadow = '0 0 0 rgba(77,163,255,0)';\n                  }}\n                >\n                  <Send className=\"w-4 h-4\" />\n                  <span>Send</span>\n                </button>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n\n      {/* Context Panel */}\n      <ContextPanel\n        isOpen={contextPanel.isOpen}\n        onClose={closeContextPanel}\n        entityId={contextPanel.entityId}\n        activeTab={contextPanel.activeTab}\n      />\n\n      {/* Report Panel */}\n      <ReportPanel\n        isOpen={reportPanel.isOpen}\n        onClose={closeReportPanel}\n        reportId={reportPanel.reportId || ''}\n      />\n\n      {/* KPI Drawer */}\n      <KPIDrawer\n        isOpen={kpiDrawer.isOpen}\n        onClose={closeKpiDrawer}\n        kpiId={kpiDrawer.kpiId || ''}\n      />\n\n      {/* Toast Container */}\n      <ToastContainer />\n    </div>\n  );\n}","size_bytes":24494},"client/src/pages/dashboard.tsx":{"content":"import MainDashboard from \"@/pages/MainDashboard\";\n\nexport default function Dashboard() {\n  return <MainDashboard />;\n}\n","size_bytes":120},"client/src/pages/login.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Mail, Lock } from \"lucide-react\";\n\nexport default function Login() {\n  const [step, setStep] = useState<\"email\" | \"password\">(\"email\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [, setLocation] = useLocation();\n\n  const handleContinue = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (email.trim() !== \"\") {\n      setError(\"\");\n      setStep(\"password\");\n    } else {\n      setError(\"Please enter your email\");\n    }\n  };\n\n  const handleCreateAccount = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (password.trim() !== \"\") {\n      setError(\"\");\n      // Store login state in sessionStorage (will be cleared on refresh)\n      sessionStorage.setItem(\"isLoggedIn\", \"true\");\n      setTimeout(() => {\n        setLocation(\"/onboarding\");\n      }, 300);\n    } else {\n      setError(\"Please create a password\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e] p-4 text-white gap-2\">\n      {/* LEFT CARD */}\n      <motion.div\n        initial={{ opacity: 0, x: -20 }}\n        animate={{ opacity: 1, x: 0 }}\n        className=\"w-full md:w-1/2 bg-gradient-to-br from-[#1c2340] to-[#2a3b5c] rounded-3xl flex flex-col justify-center px-8 md:px-12 shadow-2xl border border-blue-500/20\"\n      >\n        <div className=\"max-w-md w-full mx-auto\">\n          {/* VORTA Atom Logo */}\n          <div className=\"flex justify-center mb-4\">\n            <svg width=\"70\" height=\"70\" viewBox=\"0 0 100 100\" className=\"text-blue-400\">\n              <defs>\n                <radialGradient id=\"atomBlue\" cx=\"30%\" cy=\"30%\" r=\"70%\">\n                  <stop offset=\"0%\" style={{ stopColor: '#60a5fa', stopOpacity: 1 }} />\n                  <stop offset=\"60%\" style={{ stopColor: '#3b82f6', stopOpacity: 0.8 }} />\n                  <stop offset=\"100%\" style={{ stopColor: '#1e40af', stopOpacity: 0.3 }} />\n                </radialGradient>\n              </defs>\n              \n              {/* First orbital ring */}\n              <ellipse cx=\"50\" cy=\"50\" rx=\"35\" ry=\"15\" \n                fill=\"none\" stroke=\"url(#atomBlue)\" strokeWidth=\"8\" \n                transform=\"rotate(0 50 50)\" opacity=\"0.8\" />\n              \n              {/* Second orbital ring */}\n              <ellipse cx=\"50\" cy=\"50\" rx=\"35\" ry=\"15\" \n                fill=\"none\" stroke=\"url(#atomBlue)\" strokeWidth=\"8\" \n                transform=\"rotate(60 50 50)\" opacity=\"0.8\" />\n              \n              {/* Third orbital ring */}\n              <ellipse cx=\"50\" cy=\"50\" rx=\"35\" ry=\"15\" \n                fill=\"none\" stroke=\"url(#atomBlue)\" strokeWidth=\"8\" \n                transform=\"rotate(120 50 50)\" opacity=\"0.8\" />\n              \n              {/* Central nucleus */}\n              <circle cx=\"50\" cy=\"50\" r=\"8\" fill=\"url(#atomBlue)\" opacity=\"0.9\" />\n              <circle cx=\"50\" cy=\"50\" r=\"4\" fill=\"#60a5fa\" opacity=\"1\" />\n            </svg>\n          </div>\n          \n          <div className=\"mb-8\">\n            <div className=\"text-left\">\n              <p className=\"text-4xl mb-0 bg-gradient-to-r from-blue-100 via-blue-200 to-cyan-100 bg-clip-text text-transparent font-bold leading-tight\" \n                 style={{ \n                   fontFamily: '\"Inter\", \"Helvetica Neue\", \"Segoe UI\", system-ui, sans-serif', \n                   fontWeight: '700', \n                   letterSpacing: '-0.02em',\n                   textShadow: 'none'\n                 }}>\n                Your AI Copilot\n              </p>\n              <p className=\"text-4xl mb-6 bg-gradient-to-r from-blue-100 via-blue-200 to-cyan-100 bg-clip-text text-transparent font-bold leading-tight\" \n                 style={{ \n                   fontFamily: '\"Inter\", \"Helvetica Neue\", \"Segoe UI\", system-ui, sans-serif', \n                   fontWeight: '700', \n                   letterSpacing: '-0.02em',\n                   textShadow: 'none'\n                 }}>\n                For Business Intelligence\n              </p>\n            </div>\n          </div>\n\n          {/* Two-Step Animated Form */}\n          <AnimatePresence mode=\"wait\">\n            {step === \"email\" && (\n              <motion.div\n                key=\"email\"\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -10 }}\n                transition={{ duration: 0.4 }}\n                className=\"space-y-4 mb-4\"\n              >\n                {/* Email Input */}\n                <form onSubmit={handleContinue} className=\"space-y-3\">\n                  <div>\n                    <label className=\"block text-sm text-white/60 mb-2\">Email</label>\n                    <div className=\"flex items-center bg-white/10 border border-white/20 px-4 py-3 rounded-2xl backdrop-blur-sm focus-within:ring-2 focus-within:ring-blue-300/50 focus-within:border-blue-300/50 transition-all duration-300\">\n                      <Mail className=\"w-5 h-5 text-blue-400 mr-3\" />\n                      <input\n                        type=\"email\"\n                        placeholder=\"you@company.com\"\n                        className=\"bg-transparent w-full text-sm text-gray-100 placeholder:text-gray-400 focus:outline-none transition duration-200\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  {error && <p className=\"text-red-300/80 text-sm\">{error}</p>}\n\n                  <button\n                    type=\"submit\"\n                    className=\"w-full py-3 bg-gradient-to-r from-blue-500 to-blue-600 rounded-2xl hover:from-blue-600 hover:to-blue-700 transition-all duration-300 font-medium text-white shadow-lg hover:shadow-xl\"\n                  >\n                    Continue\n                  </button>\n                </form>\n\n                {/* Social Login Buttons - Only show in email step */}\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"flex-1 h-px bg-gradient-to-r from-transparent via-white/20 to-transparent\"></div>\n                  <span className=\"px-6 text-white/60 text-sm font-light\">OR</span>\n                  <div className=\"flex-1 h-px bg-gradient-to-r from-transparent via-white/20 to-transparent\"></div>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-2\">\n                  <button className=\"flex items-center justify-center px-6 py-2.5 bg-blue-500/10 backdrop-blur-sm rounded-lg border border-blue-300/20 hover:bg-blue-500/15 hover:border-blue-300/30 transition-all duration-300 group\">\n                    <svg className=\"w-4 h-4 text-white/80 group-hover:text-white transition-colors\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                      <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                      <path d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                      <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                    </svg>\n                  </button>\n\n                  <button className=\"flex items-center justify-center px-6 py-2.5 bg-blue-500/10 backdrop-blur-sm rounded-lg border border-blue-300/20 hover:bg-blue-500/15 hover:border-blue-300/30 transition-all duration-300 group\">\n                    <svg className=\"w-4 h-4 text-white/80 group-hover:text-white transition-colors\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09z\"/>\n                      <path d=\"M15.53 3.83c.893-1.09 1.472-2.58 1.306-4.089-1.265.056-2.847.875-3.758 1.944-.806.942-1.526 2.486-1.34 3.938 1.421.106 2.88-.717 3.792-1.793z\"/>\n                    </svg>\n                  </button>\n\n                  <button className=\"flex items-center justify-center px-6 py-2.5 bg-blue-500/10 backdrop-blur-sm rounded-lg border border-blue-300/20 hover:bg-blue-500/15 hover:border-blue-300/30 transition-all duration-300 group\">\n                    <svg className=\"w-4 h-4 text-white/80 group-hover:text-white transition-colors\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n                    </svg>\n                  </button>\n\n                  <button className=\"flex items-center justify-center px-6 py-2.5 bg-blue-500/10 backdrop-blur-sm rounded-lg border border-blue-300/20 hover:bg-blue-500/15 hover:border-blue-300/30 transition-all duration-300 group\">\n                    <svg className=\"w-4 h-4 text-white/80 group-hover:text-white transition-colors\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n                    </svg>\n                  </button>\n                </div>\n\n                {/* Skip to Dashboard Button */}\n                <div className=\"mt-6 pt-4 border-t border-white/10\">\n                  <button\n                    onClick={() => {\n                      sessionStorage.setItem(\"isLoggedIn\", \"true\");\n                      setLocation(\"/dashboard\");\n                    }}\n                    className=\"w-full py-3 bg-transparent border border-white/20 rounded-2xl hover:bg-white/5 hover:border-white/30 transition-all duration-300 font-medium text-white/80 hover:text-white\"\n                  >\n                    Skip to Dashboard\n                  </button>\n                </div>\n              </motion.div>\n            )}\n\n            {step === \"password\" && (\n              <motion.div\n                key=\"password\"\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -10 }}\n                transition={{ duration: 0.4 }}\n                className=\"space-y-4 mb-4\"\n              >\n                {/* Password Input */}\n                <form onSubmit={handleCreateAccount} className=\"space-y-3\">\n                  <div>\n                    <label className=\"block text-sm text-white/60 mb-2\">Create Password</label>\n                    <div className=\"flex items-center bg-white/10 border border-white/20 px-4 py-3 rounded-2xl backdrop-blur-sm focus-within:ring-2 focus-within:ring-blue-300/50 focus-within:border-blue-300/50 transition-all duration-300\">\n                      <Lock className=\"w-5 h-5 text-blue-400 mr-3\" />\n                      <input\n                        type=\"password\"\n                        placeholder=\"••••••••\"\n                        className=\"bg-transparent w-full text-sm text-gray-100 placeholder:text-gray-400 focus:outline-none transition duration-200\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  {error && <p className=\"text-red-300/80 text-sm\">{error}</p>}\n\n                  <button\n                    type=\"submit\"\n                    className=\"w-full py-3 bg-gradient-to-r from-blue-500 to-blue-600 rounded-2xl hover:from-blue-600 hover:to-blue-700 transition-all duration-300 font-medium text-white shadow-lg hover:shadow-xl\"\n                  >\n                    Create Account\n                  </button>\n                </form>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Terms and Privacy Policy */}\n          <div className=\"mt-8 text-center\">\n            <p className=\"text-xs text-white/40\">\n              By proceeding, you agree to our{\" \"}\n              <span className=\"underline cursor-pointer hover:text-white/60 transition-colors\">\n                Terms of use\n              </span>\n              .\n            </p>\n            <p className=\"text-xs text-white/40 mt-1\">\n              Read our{\" \"}\n              <span className=\"underline cursor-pointer hover:text-white/60 transition-colors\">\n                Privacy Policy\n              </span>\n            </p>\n          </div>\n          \n        </div>\n      </motion.div>\n      {/* RIGHT CARD */}\n      <motion.div\n        initial={{ opacity: 0, x: 20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ delay: 0.1 }}\n        className=\"hidden md:block md:w-1/2 bg-gradient-to-br from-[#0a0a1a] to-[#1a1a2e] rounded-3xl relative overflow-hidden shadow-2xl border border-blue-500/20\"\n      >\n        {/* Simple Flowing Blue Wave Background */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          {/* Dark navy to black gradient backdrop */}\n          <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-950 to-black\"></div>\n          \n          <svg\n            className=\"absolute inset-0 w-full h-full\"\n            viewBox=\"0 0 1920 1080\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            preserveAspectRatio=\"xMidYMid slice\"\n          >\n            <defs>\n              {/* Simple blue gradient for clean wave effect */}\n              <radialGradient id=\"blueGlow\" cx=\"50%\" cy=\"50%\" r=\"70%\">\n                <stop offset=\"0%\" style={{ stopColor: '#2563eb', stopOpacity: 0.9 }} />\n                <stop offset=\"50%\" style={{ stopColor: '#1e40af', stopOpacity: 0.6 }} />\n                <stop offset=\"100%\" style={{ stopColor: '#0f172a', stopOpacity: 0.2 }} />\n              </radialGradient>\n              \n              <linearGradient id=\"waveGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                <stop offset=\"0%\" style={{ stopColor: '#0c1e3f', stopOpacity: 0.95 }} />\n                <stop offset=\"30%\" style={{ stopColor: '#1e40af', stopOpacity: 0.8 }} />\n                <stop offset=\"70%\" style={{ stopColor: '#2563eb', stopOpacity: 0.6 }} />\n                <stop offset=\"100%\" style={{ stopColor: '#3b82f6', stopOpacity: 0.4 }} />\n              </linearGradient>\n              \n              {/* Simple glow filter */}\n              <filter id=\"blueGlow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n                <feGaussianBlur stdDeviation=\"8\" result=\"glow\"/>\n                <feMerge> \n                  <feMergeNode in=\"glow\"/>\n                  <feMergeNode in=\"SourceGraphic\"/>\n                </feMerge>\n              </filter>\n            </defs>\n            \n            {/* Simple flowing wave shapes matching the reference image */}\n            \n            {/* Main flowing curve from top-left to bottom-right */}\n            <path\n              d=\"M-100,200 Q400,100 800,300 Q1200,500 1600,400 Q1800,350 2100,400 L2100,1200 L-100,1200 Z\"\n              fill=\"url(#waveGradient)\"\n              filter=\"url(#blueGlow)\"\n            />\n            \n            {/* Secondary curve for depth */}\n            <path\n              d=\"M-100,400 Q500,250 900,450 Q1300,650 1700,550 Q1900,500 2100,550 L2100,1200 L-100,1200 Z\"\n              fill=\"url(#waveGradient)\"\n              opacity=\"0.6\"\n            />\n            \n            {/* Subtle glow effect */}\n            <ellipse cx=\"960\" cy=\"540\" rx=\"800\" ry=\"400\" fill=\"url(#blueGlow)\" opacity=\"0.3\" />\n          </svg>\n          \n          {/* Enterprise finish overlay for polished look */}\n          <div \n            className=\"absolute inset-0 bg-gradient-to-t from-black/5 via-transparent to-transparent\" \n            style={{ \n              backdropFilter: 'blur(0.2px)',\n              background: 'radial-gradient(ellipse at center, transparent 0%, rgba(0,0,0,0.03) 100%)'\n            }}\n          ></div>\n        </div>\n\n        {/* Subtle glow effect */}\n        <div className=\"absolute inset-0 bg-gradient-to-tr from-cyan-500/5 via-transparent to-purple-500/5\"></div>\n      </motion.div>\n    </div>\n  );\n}","size_bytes":17336},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e]\">\n      <Card className=\"w-full max-w-md mx-4 bg-gradient-to-br from-[#1c2340] to-[#2a3b5c] border border-blue-500/20\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-400\" />\n            <h1 className=\"text-2xl font-bold text-white\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-blue-200\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":829},"client/src/pages/onboarding-new.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { \n  Database, \n  FileSpreadsheet, \n  Globe2, \n  FileText, \n  Grid3X3, \n  Check,\n  ArrowRight,\n  Upload,\n  Key,\n  Link2,\n  Circle\n} from \"lucide-react\";\n\ninterface DataSource {\n  id: string;\n  name: string;\n  icon: React.ComponentType<any>;\n  type: 'url' | 'key' | 'file';\n  placeholder: string;\n}\n\nconst dataSources: DataSource[] = [\n  {\n    id: 'postgresql',\n    name: 'PostgreSQL',\n    icon: Database,\n    type: 'url',\n    placeholder: 'postgresql://username:password@host:port/database'\n  },\n  {\n    id: 'mysql',\n    name: 'MySQL',\n    icon: Database,\n    type: 'url',\n    placeholder: 'mysql://username:password@host:port/database'\n  },\n  {\n    id: 'sheets',\n    name: 'Google Sheets',\n    icon: FileSpreadsheet,\n    type: 'url',\n    placeholder: 'https://docs.google.com/spreadsheets/d/...'\n  },\n  {\n    id: 'airtable',\n    name: 'Airtable',\n    icon: Grid3X3,\n    type: 'key',\n    placeholder: 'apikey:your-airtable-api-key'\n  },\n  {\n    id: 'excel',\n    name: 'Excel/CSV',\n    icon: FileText,\n    type: 'file',\n    placeholder: 'Upload your file'\n  },\n  {\n    id: 'api',\n    name: 'REST API',\n    icon: Globe2,\n    type: 'key',\n    placeholder: 'apikey:your-rest-api-key'\n  }\n];\n\nexport default function OnboardingNew() {\n  const [selectedSource, setSelectedSource] = useState<string | null>(null);\n  const [connectedSources, setConnectedSources] = useState<Set<string>>(new Set());\n  const [inputValues, setInputValues] = useState<Record<string, string>>({});\n  const [, setLocation] = useLocation();\n\n  const handleSourceClick = (sourceId: string) => {\n    setSelectedSource(selectedSource === sourceId ? null : sourceId);\n  };\n\n  const handleConnect = (sourceId: string) => {\n    const value = inputValues[sourceId];\n    if (value && value.trim()) {\n      setConnectedSources(prev => new Set([...Array.from(prev), sourceId]));\n      setSelectedSource(null);\n      console.log(`Connected to ${sourceId} with:`, value);\n    }\n  };\n\n  const handleSkip = () => {\n    setLocation('/dashboard');\n  };\n\n  const handleContinue = () => {\n    if (connectedSources.size === 0) {\n      // Show micro toast\n      alert(\"You'll be able to connect sources later from your dashboard.\");\n    }\n    setLocation('/onboarding/data');\n  };\n\n  const renderInputField = (source: DataSource) => {\n    const value = inputValues[source.id] || '';\n    \n    if (source.type === 'file') {\n      return (\n        <div className=\"space-y-3\">\n          <label className=\"block text-sm font-medium text-blue-200\">\n            Upload File\n          </label>\n          <div className=\"relative\">\n            <input\n              type=\"file\"\n              accept=\".csv,.xlsx,.xls\"\n              className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n              onChange={(e) => {\n                const file = e.target.files?.[0];\n                if (file) {\n                  setInputValues(prev => ({ ...prev, [source.id]: file.name }));\n                }\n              }}\n            />\n            <div className=\"flex items-center gap-3 p-4 border border-blue-500/30 rounded-xl bg-blue-900/20 backdrop-blur-sm hover:border-blue-400/40 transition-colors\">\n              <Upload className=\"w-5 h-5 text-blue-300\" />\n              <span className=\"text-blue-200\">\n                {value || 'Choose file to upload'}\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"space-y-3\">\n        <label className=\"block text-sm font-medium text-blue-200\">\n          {source.type === 'url' ? 'Connection URL' : 'API Key'}\n        </label>\n        <div className=\"relative\">\n          {source.type === 'key' && (\n            <Key className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-blue-300\" />\n          )}\n          {source.type === 'url' && (\n            <Link2 className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-blue-300\" />\n          )}\n          <input\n            type={source.type === 'key' ? 'password' : 'text'}\n            value={value}\n            onChange={(e) => setInputValues(prev => ({ ...prev, [source.id]: e.target.value }))}\n            placeholder={source.placeholder}\n            className={`w-full ${source.type !== 'url' ? 'pl-12' : 'pl-12'} pr-4 py-4 bg-blue-900/20 backdrop-blur-sm border border-blue-500/30 rounded-xl text-white placeholder-blue-300/60 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition-all`}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <motion.section \n      className=\"min-h-screen bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e] text-white overflow-hidden\"\n      initial={{ opacity: 0, x: 50 }}\n      animate={{ opacity: 1, x: 0 }}\n      exit={{ opacity: 0, x: -50 }}\n      transition={{ duration: 0.6, ease: \"easeOut\" }}\n    >\n      {/* Background Pattern - Seamless across viewport */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"absolute inset-0\" style={{\n          backgroundImage: `radial-gradient(circle at 25px 25px, rgba(255,255,255,0.08) 2px, transparent 0)`,\n          backgroundSize: '50px 50px',\n          animation: 'grain 8s steps(10) infinite'\n        }} />\n      </div>\n\n      <div className=\"max-w-6xl mx-auto px-6 py-20 relative z-10\">\n        {/* Refined Enterprise Header */}\n        <motion.div \n          className=\"mb-20\"\n          initial={{ opacity: 0, x: -30 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.2, duration: 0.6 }}\n        >\n          <div className=\"flex items-center gap-5 mb-4\">\n            {/* VORTA Atom Logo - 20% larger with glow */}\n            <motion.svg \n              width=\"36\" \n              height=\"36\" \n              viewBox=\"0 0 100 100\" \n              className=\"text-cyan-400 cursor-pointer\"\n              initial={{ scale: 0, rotate: -90 }}\n              animate={{ scale: 1, rotate: 0 }}\n              whileHover={{ \n                scale: 1.1,\n                filter: \"drop-shadow(0 0 12px rgba(103, 232, 249, 0.4))\",\n                transition: { duration: 0.3 }\n              }}\n              transition={{ delay: 0.3, duration: 0.6, type: \"spring\", stiffness: 200 }}\n            >\n              <defs>\n                <radialGradient id=\"atomGradientOnboarding\" cx=\"30%\" cy=\"30%\" r=\"70%\">\n                  <stop offset=\"0%\" style={{ stopColor: '#67e8f9', stopOpacity: 1 }} />\n                  <stop offset=\"60%\" style={{ stopColor: '#06b6d4', stopOpacity: 0.9 }} />\n                  <stop offset=\"100%\" style={{ stopColor: '#0891b2', stopOpacity: 0.7 }} />\n                </radialGradient>\n              </defs>\n              \n              {/* Orbital rings */}\n              <ellipse cx=\"50\" cy=\"50\" rx=\"32\" ry=\"12\" \n                fill=\"none\" stroke=\"url(#atomGradientOnboarding)\" strokeWidth=\"3\" \n                transform=\"rotate(0 50 50)\" opacity=\"0.9\" />\n              <ellipse cx=\"50\" cy=\"50\" rx=\"32\" ry=\"12\" \n                fill=\"none\" stroke=\"url(#atomGradientOnboarding)\" strokeWidth=\"3\" \n                transform=\"rotate(60 50 50)\" opacity=\"0.9\" />\n              <ellipse cx=\"50\" cy=\"50\" rx=\"32\" ry=\"12\" \n                fill=\"none\" stroke=\"url(#atomGradientOnboarding)\" strokeWidth=\"3\" \n                transform=\"rotate(120 50 50)\" opacity=\"0.9\" />\n              \n              {/* Central nucleus */}\n              <circle cx=\"50\" cy=\"50\" r=\"4\" fill=\"url(#atomGradientOnboarding)\" opacity=\"1\" />\n            </motion.svg>\n\n            <motion.h1 \n              className=\"text-4xl font-medium text-white\"\n              style={{ \n                fontFamily: '\"Inter\", \"Segoe UI\", system-ui, sans-serif',\n                letterSpacing: '-0.5px'\n              }}\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.4, duration: 0.6 }}\n            >\n              Let's get you set up\n            </motion.h1>\n          </div>\n          \n          <motion.p \n            className=\"text-blue-200/70 max-w-[70%] leading-relaxed\"\n            style={{ \n              fontFamily: '\"Inter\", \"Segoe UI\", system-ui, sans-serif',\n              fontSize: '15px'\n            }}\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.5, duration: 0.6 }}\n          >\n            Choose how to connect your business data below. You can skip and configure this later.\n          </motion.p>\n        </motion.div>\n\n        {/* Refined Connection Cards Grid */}\n        <motion.div \n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-24\"\n          initial={{ opacity: 0, y: 40 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6, duration: 0.6 }}\n        >\n          {dataSources.map((source, index) => {\n            const Icon = source.icon;\n            const isSelected = selectedSource === source.id;\n            const isConnected = connectedSources.has(source.id);\n            \n            return (\n              <motion.div\n                key={source.id}\n                className={`relative group cursor-pointer`}\n                initial={{ opacity: 0, y: 30, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                transition={{ \n                  delay: 0.7 + index * 0.05, \n                  duration: 0.5,\n                  type: \"spring\",\n                  stiffness: 120\n                }}\n                whileHover={{ \n                  scale: isConnected ? 1 : 1.05,\n                  transition: { duration: 0.2 }\n                }}\n                onClick={() => !isConnected && handleSourceClick(source.id)}\n              >\n                {/* Enhanced Glass Card */}\n                <div className={`relative rounded-2xl backdrop-blur-md transition-all duration-300 shadow-[0_0_20px_rgba(0,0,0,0.25)] ${\n                  isConnected \n                    ? 'bg-green-500/10 border border-green-400/30 ring-2 ring-green-400/20' \n                    : isSelected\n                    ? 'bg-gradient-to-br from-[#1c2340] to-[#2a3b5c] border border-blue-400/40 ring-2 ring-blue-400/30'\n                    : 'bg-gradient-to-br from-[#1c2340]/60 to-[#2a3b5c]/60 border border-blue-500/20 hover:from-[#1c2340]/80 hover:to-[#2a3b5c]/80 hover:border-blue-400/30 hover:ring-2 hover:ring-blue-400/20'\n                }}`} \n                style={{ padding: '18px 24px' }}>\n                  \n                  {/* Connected Indicator */}\n                  {isConnected && (\n                    <motion.div \n                      className=\"absolute -top-2 -right-2 bg-green-500 rounded-full p-1.5 shadow-lg\"\n                      initial={{ scale: 0, rotate: -180 }}\n                      animate={{ scale: 1, rotate: 0 }}\n                      transition={{ type: \"spring\", delay: 0.2, stiffness: 200 }}\n                    >\n                      <Check className=\"w-3 h-3 text-white\" />\n                    </motion.div>\n                  )}\n\n                  {/* Enhanced Icon and Title Section */}\n                  <div className=\"flex items-center gap-4 mb-4\">\n                    <div className={`p-3 rounded-xl transition-all duration-300 ${\n                      isConnected\n                        ? 'bg-green-500/15 text-green-400' \n                        : isSelected\n                        ? 'bg-blue-500/20 text-blue-400'\n                        : 'bg-blue-500/10 text-blue-400 group-hover:bg-blue-500/20 group-hover:text-blue-300'\n                    }`}>\n                      <Icon className=\"w-7 h-7\" strokeWidth={1.5} />\n                    </div>\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-lg font-medium text-white mb-1\" style={{ \n                        fontFamily: '\"Inter\", \"Segoe UI\", system-ui, sans-serif'\n                      }}>\n                        {source.name}\n                      </h3>\n                      {/* Refined Status Indicator */}\n                      <div className=\"flex items-center gap-2\">\n                        <div className={`h-2 w-2 rounded-full ${isConnected ? 'bg-green-400' : 'bg-blue-400/60'}`} />\n                        <span className={`text-xs font-medium ${isConnected ? 'text-green-400' : 'text-blue-400/80'}`}>\n                          {isConnected ? 'Connected' : 'Not connected'}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Refined Hover Connect Button */}\n                  {!isConnected && !isSelected && (\n                    <motion.div \n                      className=\"opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                      initial={{ opacity: 0 }}\n                      whileHover={{ opacity: 1 }}\n                    >\n                      <button className=\"w-full py-3 px-4 bg-blue-500/10 hover:bg-blue-500/20 rounded-xl text-sm font-medium text-blue-300 hover:text-blue-200 transition-all duration-200 border border-blue-500/30\">\n                        Connect\n                      </button>\n                    </motion.div>\n                  )}\n\n                  {/* Expanded Form */}\n                  <AnimatePresence>\n                    {isSelected && !isConnected && (\n                      <motion.div\n                        initial={{ opacity: 0, height: 0, marginTop: 0 }}\n                        animate={{ opacity: 1, height: \"auto\", marginTop: 16 }}\n                        exit={{ opacity: 0, height: 0, marginTop: 0 }}\n                        transition={{ duration: 0.3, type: \"spring\", stiffness: 120 }}\n                        className=\"border-t border-blue-500/30 pt-5\"\n                      >\n                        {renderInputField(source)}\n                        \n                        <div className=\"flex justify-end space-x-3 mt-5\">\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              setSelectedSource(null);\n                            }}\n                            className=\"px-4 py-2 text-blue-300/70 hover:text-white transition-all duration-200 font-medium\"\n                            style={{ \n                              fontFamily: '\"Inter\", \"Segoe UI\", system-ui, sans-serif'\n                            }}\n                          >\n                            Cancel\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleConnect(source.id);\n                            }}\n                            disabled={!inputValues[source.id]?.trim()}\n                            className={`px-6 py-2 rounded-xl font-medium transition-all duration-200 shadow-lg ${\n                              inputValues[source.id]?.trim()\n                                ? 'bg-gradient-to-r from-blue-600 to-cyan-500 text-white hover:shadow-xl hover:shadow-blue-500/20'\n                                : 'bg-blue-900/50 text-blue-400/60 cursor-not-allowed'\n                            }`}\n                            style={{ \n                              fontFamily: '\"Inter\", \"Segoe UI\", system-ui, sans-serif'\n                            }}\n                          >\n                            Connect\n                          </button>\n                        </div>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </div>\n              </motion.div>\n            );\n          })}\n        </motion.div>\n\n        {/* Enhanced Footer CTAs */}\n        <motion.div \n          className=\"flex flex-col md:flex-row justify-between items-center gap-4\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 1.2, duration: 0.6 }}\n        >\n          <motion.button\n            onClick={handleSkip}\n            className=\"text-blue-300/70 hover:text-white transition-all duration-200 font-medium opacity-60 hover:opacity-100 order-2 md:order-1\"\n            style={{ \n              fontFamily: '\"Inter\", \"Segoe UI\", system-ui, sans-serif'\n            }}\n            whileHover={{ x: 2 }}\n          >\n            Skip for now\n          </motion.button>\n          \n          <motion.button\n            onClick={handleContinue}\n            className=\"flex items-center space-x-3 px-8 py-4 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-500 hover:to-blue-600 text-white font-medium rounded-xl shadow-lg hover:shadow-xl transition-all duration-200 border border-blue-500/50 order-1 md:order-2 w-full md:w-auto\"\n            style={{ \n              fontFamily: '\"Inter\", \"Segoe UI\", system-ui, sans-serif'\n            }}\n            whileHover={{ \n              x: 3,\n              boxShadow: \"0 0 25px rgba(6, 182, 212, 0.15)\",\n              transition: { duration: 0.2 }\n            }}\n          >\n            <span>Connect & Continue</span>\n            <ArrowRight className=\"w-5 h-5\" />\n          </motion.button>\n        </motion.div>\n      </div>\n    </motion.section>\n  );\n}","size_bytes":17375},"client/src/pages/onboarding.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { ArrowRight, ArrowLeft, Database, Building, Target, FileSpreadsheet, Globe, FileText } from \"lucide-react\";\n\ninterface OnboardingStep {\n  id: number;\n  title: string;\n  description: string;\n}\n\nconst steps: OnboardingStep[] = [\n  {\n    id: 1,\n    title: \"Welcome to VORTA\",\n    description: \"Enterprise Business Intelligence Platform\"\n  },\n  {\n    id: 2,\n    title: \"Use Case Configuration\",\n    description: \"Define your primary analytical requirements and objectives\"\n  },\n  {\n    id: 3,\n    title: \"Data Source Selection\",\n    description: \"Connect your enterprise database systems\"\n  },\n  {\n    id: 4,\n    title: \"Database Configuration\",\n    description: \"Establish secure connection to your data infrastructure\"\n  },\n  {\n    id: 5,\n    title: \"Schema Configuration\",\n    description: \"Map your database structure for optimal performance\"\n  },\n  {\n    id: 6,\n    title: \"Business Intelligence Setup\",\n    description: \"Configure critical business metrics and KPIs\"\n  }\n];\n\nconst industries = [\n  \"Food & Beverage\",\n  \"Retail\",\n  \"Manufacturing\",\n  \"Technology\",\n  \"Healthcare\",\n  \"Finance\",\n  \"Other\"\n];\n\nconst useCases = [\n  \"Sales Performance Tracking\",\n  \"Financial Analytics\",\n  \"Inventory Management\",\n  \"Customer Intelligence\",\n  \"Operations Dashboard\",\n  \"Executive Reporting\"\n];\n\nconst databases = [\n  { \n    name: \"PostgreSQL\", \n    icon: Database, \n    defaultPort: \"5432\",\n    description: \"Open source relational database\"\n  },\n  { \n    name: \"MySQL\", \n    icon: Database, \n    defaultPort: \"3306\",\n    description: \"Popular relational database system\"\n  },\n  { \n    name: \"Microsoft SQL Server\", \n    icon: Database, \n    defaultPort: \"1433\",\n    description: \"Enterprise database platform\"\n  },\n  { \n    name: \"Oracle\", \n    icon: Database, \n    defaultPort: \"1521\",\n    description: \"Enterprise-grade database system\"\n  },\n  { \n    name: \"MongoDB\", \n    icon: Database, \n    defaultPort: \"27017\",\n    description: \"NoSQL document database\"\n  },\n  { \n    name: \"Redis\", \n    icon: Database, \n    defaultPort: \"6379\",\n    description: \"In-memory data store\"\n  }\n];\n\nconst dataSources = [\n  { name: \"Google Sheets\", icon: FileSpreadsheet },\n  { name: \"Custom API\", icon: Globe },\n  { name: \"Excel / CSV\", icon: FileText }\n];\n\nexport default function Onboarding() {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selectedIndustry, setSelectedIndustry] = useState(\"\");\n  const [selectedUseCases, setSelectedUseCases] = useState<string[]>([]);\n  const [selectedDB, setSelectedDB] = useState<string | null>(null);\n  const [credentials, setCredentials] = useState({\n    host: '',\n    port: '',\n    username: '',\n    password: '',\n    database: ''\n  });\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [dbConnectionSuccess, setDbConnectionSuccess] = useState(false);\n  const [showCredentialsForm, setShowCredentialsForm] = useState(false);\n  const [autoConnecting, setAutoConnecting] = useState(false);\n  const [selectedTables, setSelectedTables] = useState<string[]>([]);\n  const [tableConfigs, setTableConfigs] = useState<Record<string, {\n    displayName: string;\n    columnDescriptions: Record<string, string>;\n    businessQuestions: string[];\n  }>>({});\n  const [businessPrompts, setBusinessPrompts] = useState([\n    { id: 1, question: '', tag: '' },\n    { id: 2, question: '', tag: '' },\n    { id: 3, question: '', tag: '' }\n  ]);\n  const [, setLocation] = useLocation();\n\n  const mockTables = [\n    { \n      name: \"customers\", \n      columns: [\"customer_id\", \"company_name\", \"contact_email\", \"territory_id\", \"created_date\", \"status\"],\n      description: \"Customer information and contact details\" \n    },\n    { \n      name: \"orders\", \n      columns: [\"order_id\", \"customer_id\", \"product_id\", \"quantity\", \"order_date\", \"total_amount\", \"status\"],\n      description: \"Order history and transaction data\" \n    },\n    { \n      name: \"products\", \n      columns: [\"product_id\", \"product_name\", \"category\", \"price\", \"stock_quantity\", \"supplier_id\"],\n      description: \"Product catalog and inventory\" \n    },\n    { \n      name: \"sales_reps\", \n      columns: [\"rep_id\", \"full_name\", \"territory_id\", \"hire_date\", \"commission_rate\", \"status\"],\n      description: \"Sales team member information\" \n    },\n    { \n      name: \"territories\", \n      columns: [\"territory_id\", \"territory_name\", \"region\", \"manager_id\", \"target_revenue\"],\n      description: \"Regional sales territories\" \n    },\n    { \n      name: \"invoices\", \n      columns: [\"invoice_id\", \"order_id\", \"amount\", \"tax\", \"invoice_date\", \"due_date\", \"payment_status\"],\n      description: \"Billing and payment records\" \n    }\n  ];\n\n  const handleUseCaseToggle = (useCase: string) => {\n    setSelectedUseCases(prev => {\n      if (prev.includes(useCase)) {\n        // Remove if already selected\n        return prev.filter(item => item !== useCase);\n      } else if (prev.length < 3) {\n        // Add if less than 3 selected\n        return [...prev, useCase];\n      } else {\n        // Already have 3, don't add more\n        return prev;\n      }\n    });\n  };\n\n  const handleNext = () => {\n    if (currentStep < steps.length) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      // Complete onboarding\n      setLocation(\"/dashboard\");\n    }\n  };\n\n  const handleBack = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const canProceed = () => {\n    switch (currentStep) {\n      case 1:\n        return true;\n      case 2:\n        return selectedUseCases.length > 0;\n      case 3:\n        return selectedDB !== null;\n      case 4:\n        return credentials.host && credentials.port && credentials.username && credentials.database;\n      case 5:\n        return selectedTables.length > 0;\n      case 6:\n        return businessPrompts.some(p => p.question.trim().length > 0);\n      default:\n        return false;\n    }\n  };\n\n  const toggleTable = (tableName: string) => {\n    setSelectedTables(prev => {\n      const isCurrentlySelected = prev.includes(tableName);\n      \n      if (isCurrentlySelected) {\n        // Remove table and its config\n        const newTableConfigs = { ...tableConfigs };\n        delete newTableConfigs[tableName];\n        setTableConfigs(newTableConfigs);\n        return prev.filter(t => t !== tableName);\n      } else {\n        // Add table and initialize its config\n        const table = mockTables.find(t => t.name === tableName);\n        if (table) {\n          const displayName = formatTableName(tableName);\n          const columnDescriptions: Record<string, string> = {};\n          table.columns.forEach(col => {\n            columnDescriptions[col] = formatColumnName(col);\n          });\n          \n          setTableConfigs(prev => ({\n            ...prev,\n            [tableName]: {\n              displayName,\n              columnDescriptions,\n              businessQuestions: [\"\", \"\", \"\"]\n            }\n          }));\n        }\n        return [...prev, tableName];\n      }\n    });\n  };\n\n  const formatTableName = (tableName: string): string => {\n    return tableName\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  const formatColumnName = (columnName: string): string => {\n    return columnName\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  const updateTableConfig = (tableName: string, field: keyof typeof tableConfigs[string], value: any) => {\n    setTableConfigs(prev => ({\n      ...prev,\n      [tableName]: {\n        ...prev[tableName],\n        [field]: value\n      }\n    }));\n  };\n\n  const updateBusinessQuestion = (tableName: string, questionIndex: number, question: string) => {\n    const config = tableConfigs[tableName];\n    if (config) {\n      const newQuestions = [...config.businessQuestions];\n      newQuestions[questionIndex] = question;\n      updateTableConfig(tableName, 'businessQuestions', newQuestions);\n    }\n  };\n\n  const handleDatabaseSelect = (dbName: string) => {\n    setSelectedDB(dbName);\n    const selectedDatabase = databases.find(db => db.name === dbName);\n    if (selectedDatabase) {\n      setCredentials({\n        ...credentials,\n        port: selectedDatabase.defaultPort\n      });\n    }\n  };\n\n  const handleContinueToCredentials = () => {\n    setShowCredentialsForm(true);\n    setCurrentStep(4);\n  };\n\n  const connectToDatabase = async () => {\n    setIsConnecting(true);\n    // Mock API call\n    setTimeout(() => {\n      setDbConnectionSuccess(true);\n      setIsConnecting(false);\n      console.log('Database Config:', {\n        engine: selectedDB,\n        host: credentials.host,\n        port: credentials.port,\n        database: credentials.database,\n        username: credentials.username,\n        password: credentials.password\n      });\n      \n      // Auto-proceed to next step after successful connection\n      setTimeout(() => {\n        setCurrentStep(5); // Move to Table Schema Cards\n      }, 1000);\n    }, 2000);\n  };\n\n  const handleCredentialsSubmit = () => {\n    setAutoConnecting(true);\n    connectToDatabase();\n  };\n\n  // Business prompts helper functions\n  const updateBusinessPrompt = (id: number, field: 'question' | 'tag', value: string) => {\n    setBusinessPrompts(prev => \n      prev.map(p => p.id === id ? { ...p, [field]: value } : p)\n    );\n  };\n\n  const addBusinessPrompt = () => {\n    if (businessPrompts.length < 5) {\n      const newId = Math.max(...businessPrompts.map(p => p.id)) + 1;\n      setBusinessPrompts(prev => [...prev, { id: newId, question: '', tag: '' }]);\n    }\n  };\n\n  const removeBusinessPrompt = (id: number) => {\n    if (businessPrompts.length > 1) {\n      setBusinessPrompts(prev => prev.filter(p => p.id !== id));\n    }\n  };\n\n  const generateBusinessSuggestions = () => {\n    const suggestions = [\n      \"What are our top-performing SKUs this quarter?\",\n      \"Which stores are lagging behind in Q2?\",\n      \"Where are we losing margin and why?\",\n      \"Which campaigns drove the highest ROI last month?\",\n      \"Which customers stopped ordering this month?\",\n      \"What SKUs aren't moving by region?\"\n    ];\n    \n    const shuffled = [...suggestions].sort(() => 0.5 - Math.random());\n    setBusinessPrompts(prev => \n      prev.map((p, idx) => ({\n        ...p,\n        question: p.question || shuffled[idx] || ''\n      }))\n    );\n  };\n\n  const hasValidBusinessQuestions = () => {\n    return selectedTables.some(tableName => {\n      const config = tableConfigs[tableName];\n      return config && config.businessQuestions.some(q => q.trim().length > 0);\n    });\n  };\n\n  const renderStepContent = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <div className=\"space-y-8\">\n            {/* Welcome Content - Left Aligned */}\n            <div className=\"space-y-6\">\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2, duration: 0.6 }}\n              >\n                <h1 \n                  className=\"text-3xl font-bold text-white mb-2\"\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Welcome to VORTA\n                </h1>\n                <p \n                  className=\"text-slate-400 text-lg leading-relaxed\"\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Your AI-powered business intelligence platform is ready to transform how you make decisions.\n                </p>\n              </motion.div>\n\n              {/* Trust Badge */}\n              <motion.div \n                className=\"flex items-center space-x-2 py-3\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.4, duration: 0.6 }}\n              >\n                <svg className=\"w-4 h-4 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n                <span \n                  className=\"text-slate-300 text-sm font-medium\"\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Enterprise-Ready Intelligence\n                </span>\n              </motion.div>\n\n              {/* CTA Buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <motion.button\n                  onClick={handleNext}\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg text-base font-medium transition-all duration-200 shadow-lg hover:shadow-xl\"\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.6, duration: 0.6 }}\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Get Started\n                </motion.button>\n                \n                <motion.button\n                  onClick={() => {\n                    sessionStorage.setItem(\"isLoggedIn\", \"true\");\n                    setLocation(\"/dashboard\");\n                  }}\n                  className=\"border border-slate-600 hover:border-slate-500 text-slate-300 hover:text-white px-8 py-3 rounded-lg text-base font-medium transition-all duration-200 hover:bg-slate-700/30\"\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.7, duration: 0.6 }}\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Skip to Dashboard\n                </motion.button>\n              </div>\n\n              {/* Footer Microcopy */}\n              <motion.p \n                className=\"text-slate-500 text-sm mt-8\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.8, duration: 0.6 }}\n                style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n              >\n                Your data remains secure — VORTA never stores credentials.\n              </motion.p>\n            </div>\n          </div>\n        );\n\n      case 2:\n        return (\n          <div className=\"space-y-6\">\n            {/* Selection Counter */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-sm text-slate-400\" style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}>\n                Select up to 3 primary use cases\n              </div>\n              <div className=\"text-sm text-slate-300 font-medium\" style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}>\n                {selectedUseCases.length} of 3 selected\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 gap-3\">\n              {useCases.map((useCase) => {\n                const isSelected = selectedUseCases.includes(useCase);\n                const isDisabled = !isSelected && selectedUseCases.length >= 3;\n                \n                return (\n                  <button\n                    key={useCase}\n                    onClick={() => handleUseCaseToggle(useCase)}\n                    disabled={isDisabled}\n                    className={`p-4 rounded-xl border-2 transition-all duration-200 text-left relative ${\n                      isSelected\n                        ? \"border-blue-500 bg-blue-500/20 text-white shadow-lg shadow-blue-500/25\"\n                        : isDisabled\n                        ? \"border-slate-700 bg-slate-800/50 text-slate-500 cursor-not-allowed\"\n                        : \"border-slate-600 hover:border-blue-400 text-blue-200 hover:bg-slate-700/30 hover:shadow-md hover:-translate-y-0.5\"\n                    }`}\n                    style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"font-medium\">{useCase}</span>\n                      {isSelected && (\n                        <div className=\"w-5 h-5 rounded-full bg-blue-500 flex items-center justify-center flex-shrink-0\">\n                          <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        );\n\n      case 3:\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {databases.map((database) => {\n                const Icon = database.icon;\n                const isSelected = selectedDB === database.name;\n                return (\n                  <motion.div\n                    key={database.name}\n                    className={`p-6 rounded-2xl border-2 transition-all cursor-pointer group ${\n                      isSelected\n                        ? \"border-blue-500 bg-blue-500/20\"\n                        : \"border-slate-600 hover:border-blue-400 hover:bg-slate-700/50\"\n                    }`}\n                    onClick={() => handleDatabaseSelect(database.name)}\n                    whileHover={{ scale: 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                  >\n                    <div className=\"flex items-start space-x-4\">\n                      <div className={`p-3 rounded-xl flex-shrink-0 ${\n                        isSelected \n                          ? \"bg-blue-500 text-white\" \n                          : \"bg-slate-700 text-blue-200 group-hover:bg-slate-600\"\n                      }`}>\n                        <Icon className=\"w-6 h-6\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className={`font-medium mb-1 ${\n                          isSelected ? \"text-blue-400\" : \"text-blue-200\"\n                        }`}>\n                          {database.name}\n                        </h3>\n                        <p className=\"text-sm text-slate-400\">\n                          {database.description}\n                        </p>\n                      </div>\n                      <div className={`w-5 h-5 rounded-full border-2 flex items-center justify-center flex-shrink-0 ${\n                        isSelected \n                          ? \"border-blue-500 bg-blue-500\" \n                          : \"border-slate-500 bg-slate-700\"\n                      }`}>\n                        {isSelected && (\n                          <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        )}\n                      </div>\n                    </div>\n                  </motion.div>\n                );\n              })}\n            </div>\n          </div>\n        );\n\n      case 5:\n        return (\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n              className=\"space-y-6\"\n            >\n              {selectedDB && (\n                <div className=\"flex items-center space-x-3 mb-6\">\n                  <div className=\"p-2 bg-blue-500 rounded-lg\">\n                    <Database className=\"w-5 h-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-blue-200 font-medium\">{selectedDB}</h3>\n                    <p className=\"text-sm text-slate-400\">Database Connection</p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Host</label>\n                  <input\n                    type=\"text\"\n                    value={credentials.host}\n                    onChange={(e) => setCredentials({...credentials, host: e.target.value})}\n                    placeholder=\"localhost\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Port</label>\n                  <input\n                    type=\"text\"\n                    value={credentials.port}\n                    onChange={(e) => setCredentials({...credentials, port: e.target.value})}\n                    placeholder=\"5432\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Username</label>\n                  <input\n                    type=\"text\"\n                    value={credentials.username}\n                    onChange={(e) => setCredentials({...credentials, username: e.target.value})}\n                    placeholder=\"admin\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Password</label>\n                  <input\n                    type=\"password\"\n                    value={credentials.password}\n                    onChange={(e) => setCredentials({...credentials, password: e.target.value})}\n                    placeholder=\"••••••••\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n                <div className=\"md:col-span-2\">\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Database Name</label>\n                  <input\n                    type=\"text\"\n                    value={credentials.database}\n                    onChange={(e) => setCredentials({...credentials, database: e.target.value})}\n                    placeholder=\"my_database\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n              </div>\n\n              {dbConnectionSuccess && (\n                <motion.div\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"flex items-center space-x-3 p-4 bg-green-500/20 border border-green-500/50 rounded-xl\"\n                >\n                  <div className=\"w-5 h-5 bg-green-500 rounded-full flex items-center justify-center\">\n                    <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 12 12\">\n                      <path d=\"M10 3L4.5 8.5 2 6\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>\n                  </div>\n                  <span className=\"text-green-400 font-medium\">Connection successful!</span>\n                </motion.div>\n              )}\n            </motion.div>\n          </AnimatePresence>\n        );\n\n      case 4:\n        return (\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key={`credentials-${autoConnecting}`}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n              className=\"space-y-6\"\n            >\n              {selectedDB && (\n                <div className=\"flex items-center space-x-4 p-4 bg-slate-800/50 border border-slate-700 rounded-xl\">\n                  <Database className=\"w-8 h-8 text-blue-400\" />\n                  <div>\n                    <h3 className=\"text-blue-200 font-medium\">{selectedDB}</h3>\n                    <p className=\"text-sm text-slate-400\">Database Connection</p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Host</label>\n                  <input\n                    type=\"text\"\n                    value={credentials.host}\n                    onChange={(e) => setCredentials({...credentials, host: e.target.value})}\n                    placeholder=\"localhost\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Port</label>\n                  <input\n                    type=\"text\"\n                    value={credentials.port}\n                    onChange={(e) => setCredentials({...credentials, port: e.target.value})}\n                    placeholder=\"5432\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Username</label>\n                  <input\n                    type=\"text\"\n                    value={credentials.username}\n                    onChange={(e) => setCredentials({...credentials, username: e.target.value})}\n                    placeholder=\"admin\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Password</label>\n                  <input\n                    type=\"password\"\n                    value={credentials.password}\n                    onChange={(e) => setCredentials({...credentials, password: e.target.value})}\n                    placeholder=\"••••••••\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n                <div className=\"md:col-span-2\">\n                  <label className=\"block text-sm font-medium text-blue-200 mb-2\">Database Name</label>\n                  <input\n                    type=\"text\"\n                    value={credentials.database}\n                    onChange={(e) => setCredentials({...credentials, database: e.target.value})}\n                    placeholder=\"my_database\"\n                    className=\"w-full px-4 py-3 bg-slate-800/50 border border-slate-600 rounded-xl text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none\"\n                  />\n                </div>\n              </div>\n\n              {dbConnectionSuccess && (\n                <motion.div\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"flex items-center space-x-3 p-4 bg-green-500/20 border border-green-500/50 rounded-xl\"\n                >\n                  <div className=\"w-5 h-5 bg-green-500 rounded-full flex items-center justify-center\">\n                    <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 12 12\">\n                      <path d=\"M10 3L4.5 8.5 2 6\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    </svg>\n                  </div>\n                  <span className=\"text-green-400 font-medium\">Connection successful!</span>\n                </motion.div>\n              )}\n            </motion.div>\n          </AnimatePresence>\n        );\n\n      case 5:\n        return (\n          <div className=\"space-y-8\">\n            <div className=\"mb-8\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <div>\n                  <h2 className=\"text-xl font-semibold text-slate-100 mb-2\">Database Schema Configuration</h2>\n                  <p className=\"text-slate-400 text-sm leading-relaxed max-w-2xl\">\n                    Configure your database tables to help VORTA understand your business context and provide more accurate insights.\n                  </p>\n                </div>\n                <div className=\"flex items-center space-x-3 px-4 py-2 bg-slate-800/60 border border-slate-700/40 rounded-lg\">\n                  <div className=\"w-2 h-2 bg-emerald-400 rounded-full\"></div>\n                  <span className=\"text-slate-300 text-sm font-medium\">{selectedDB} Connected</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Table Selection Section */}\n            <div className=\"mb-8\">\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <svg className=\"w-4 h-4 text-slate-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm0 4a1 1 0 011-1h12a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1V8z\" clipRule=\"evenodd\" />\n                </svg>\n                <h3 className=\"text-lg font-medium text-slate-200\">Available Tables</h3>\n              </div>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n                {mockTables.map((table) => {\n                  const isSelected = selectedTables.includes(table.name);\n                  return (\n                    <motion.button\n                      key={table.name}\n                      className={`p-4 rounded-lg border text-left transition-all group focus:outline-none focus:ring-2 focus:ring-slate-600 ${\n                        isSelected\n                          ? \"border-slate-600 bg-slate-800/60\"\n                          : \"border-slate-700/60 hover:border-slate-600 hover:bg-slate-800/40\"\n                      }`}\n                      onClick={() => toggleTable(table.name)}\n                      whileHover={{ scale: 1.005 }}\n                      whileTap={{ scale: 0.995 }}\n                    >\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className={`w-5 h-5 rounded border-2 flex items-center justify-center ${\n                            isSelected \n                              ? \"border-slate-500 bg-slate-600\" \n                              : \"border-slate-600 bg-slate-700/60\"\n                          }`}>\n                            {isSelected && (\n                              <svg className=\"w-3 h-3 text-slate-200\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                              </svg>\n                            )}\n                          </div>\n                          <span className=\"text-sm font-medium text-slate-200\">\n                            {formatTableName(table.name)}\n                          </span>\n                        </div>\n                      </div>\n                      <p className=\"text-xs text-slate-500 leading-relaxed\">\n                        {table.description}\n                      </p>\n                    </motion.button>\n                  );\n                })}\n              </div>\n            </div>\n\n            {/* Selected Tables Configuration */}\n            {selectedTables.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"space-y-4\"\n              >\n                <div className=\"flex items-center justify-between mb-6\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 bg-slate-600/50 rounded-lg flex items-center justify-center border border-slate-500/30\">\n                      <svg className=\"w-4 h-4 text-slate-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1.5}>\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0-2.278-3.694-4.125-8.25-4.125s-8.25 1.847-8.25 4.125\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-medium text-slate-200\">Table Configuration</h3>\n                      <p className=\"text-xs text-slate-500 mt-0.5\">{selectedTables.length} tables selected for AI training</p>\n                    </div>\n                  </div>\n                  <div className={`px-3 py-1.5 rounded-full text-xs font-medium border ${\n                    hasValidBusinessQuestions() \n                      ? \"bg-emerald-400/10 border-emerald-400/30 text-emerald-400\" \n                      : \"bg-amber-400/10 border-amber-400/30 text-amber-400\"\n                  }`}>\n                    {hasValidBusinessQuestions() ? \"✓ Complete\" : \"⚠ Questions Required\"}\n                  </div>\n                </div>\n\n                {selectedTables.map((tableName) => {\n                  const table = mockTables.find(t => t.name === tableName);\n                  const config = tableConfigs[tableName];\n                  \n                  if (!table || !config) return null;\n\n                  return (\n                    <motion.div\n                      key={tableName}\n                      initial={{ opacity: 0, y: 10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"bg-gradient-to-br from-slate-800/50 to-slate-800/30 border border-slate-600/30 rounded-xl p-6 shadow-lg backdrop-blur-sm\"\n                    >\n                      {/* Table Header */}\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-8 h-8 bg-gradient-to-br from-slate-600/80 to-slate-700/80 rounded-lg flex items-center justify-center border border-slate-500/30\">\n                            <svg className=\"w-5 h-5 text-slate-200\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1.5}>\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0-2.278-3.694-4.125-8.25-4.125s-8.25 1.847-8.25 4.125\" />\n                            </svg>\n                          </div>\n                          <div>\n                            <input\n                              value={config.displayName}\n                              onChange={(e) => updateTableConfig(tableName, 'displayName', e.target.value)}\n                              className=\"text-lg font-semibold text-white bg-transparent border-none outline-none focus:bg-slate-700/50 rounded px-2 py-1\"\n                            />\n                            <p className=\"text-xs text-slate-400\">{tableName} • {table.columns.length} columns</p>\n                          </div>\n                        </div>\n                        <button\n                          onClick={() => toggleTable(tableName)}\n                          className=\"text-slate-400 hover:text-red-400 transition-all duration-200 hover:scale-110 hover:bg-red-400/10 rounded p-1\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </button>\n                      </div>\n\n                      {/* Business Questions Section */}\n                      <div className=\"mb-4\">\n                        <div className=\"flex items-center space-x-2 mb-3\">\n                          <svg className=\"w-4 h-4 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"text-sm font-medium text-blue-300\">Common Business Questions</span>\n                          <div className=\"group relative\">\n                            <svg className=\"w-3 h-3 text-slate-500 hover:text-slate-300 cursor-help\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                            </svg>\n                            <div className=\"invisible group-hover:visible absolute bottom-full left-0 mb-2 p-2 bg-slate-800 text-xs text-white rounded shadow-lg whitespace-nowrap\">\n                              Help VORTA understand your business context\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"space-y-2\">\n                          {config.businessQuestions.map((question, idx) => (\n                            <input\n                              key={idx}\n                              value={question}\n                              onChange={(e) => updateBusinessQuestion(tableName, idx, e.target.value)}\n                              placeholder={`Question ${idx + 1}: e.g., \"Which customers haven't ordered this month?\"`}\n                              className=\"w-full px-3 py-2 bg-slate-700/50 border border-slate-600 rounded-lg text-white placeholder-slate-400 focus:border-blue-500 focus:outline-none text-sm transition-all duration-200 focus:bg-slate-700/70 focus:shadow-lg focus:shadow-blue-500/10\"\n                            />\n                          ))}\n                        </div>\n                      </div>\n\n                      {/* Column Mapping Section */}\n                      <div>\n                        <div className=\"flex items-center space-x-2 mb-3\">\n                          <svg className=\"w-4 h-4 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" />\n                          </svg>\n                          <span className=\"text-sm font-medium text-blue-300\">Column Descriptions</span>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                          {table.columns.slice(0, 6).map((column) => (\n                            <div key={column} className=\"flex items-center space-x-2\">\n                              <span className=\"text-xs text-slate-400 font-mono w-20 truncate\">{column}</span>\n                              <input\n                                value={config.columnDescriptions[column] || ''}\n                                onChange={(e) => {\n                                  const newDescriptions = { ...config.columnDescriptions };\n                                  newDescriptions[column] = e.target.value;\n                                  updateTableConfig(tableName, 'columnDescriptions', newDescriptions);\n                                }}\n                                placeholder=\"Description...\"\n                                className=\"flex-1 px-2 py-1 bg-slate-700/30 border border-slate-600/50 rounded text-xs text-white placeholder-slate-500 focus:border-blue-500 focus:outline-none\"\n                              />\n                            </div>\n                          ))}\n                        </div>\n                        {table.columns.length > 6 && (\n                          <p className=\"text-xs text-slate-500 mt-2\">\n                            + {table.columns.length - 6} more columns...\n                          </p>\n                        )}\n                      </div>\n                    </motion.div>\n                  );\n                })}\n              </motion.div>\n            )}\n          </div>\n        );\n\n      case 6:\n        return (\n          <div className=\"space-y-6\">\n            {/* Business Questions Section */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-medium text-white\">Key Business Questions</h3>\n                <button\n                  onClick={generateBusinessSuggestions}\n                  className=\"px-3 py-1 bg-slate-700 border border-slate-600 rounded text-slate-300 hover:bg-slate-600 transition-colors text-sm\"\n                >\n                  Generate Suggestions\n                </button>\n              </div>\n\n              <div className=\"space-y-3\">\n                {businessPrompts.map((prompt, index) => (\n                  <div\n                    key={prompt.id}\n                    className=\"bg-slate-700 border border-slate-600 rounded p-4\"\n                  >\n                    <div className=\"flex items-start space-x-3\">\n                      <div className=\"w-6 h-6 bg-slate-600 rounded flex items-center justify-center flex-shrink-0 mt-2\">\n                        <span className=\"text-slate-300 text-sm font-medium\">{index + 1}</span>\n                      </div>\n                      <div className=\"flex-1 space-y-3\">\n                        <div>\n                          <input\n                            value={prompt.question}\n                            onChange={(e) => updateBusinessPrompt(prompt.id, 'question', e.target.value)}\n                            placeholder=\"Enter your business question\"\n                            className=\"w-full px-3 py-2 bg-slate-800 border border-slate-600 rounded text-white placeholder-slate-400 focus:border-slate-500 focus:outline-none\"\n                          />\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <input\n                            value={prompt.tag}\n                            onChange={(e) => updateBusinessPrompt(prompt.id, 'tag', e.target.value)}\n                            placeholder=\"Category (e.g., Sales, Operations)\"\n                            className=\"flex-1 px-3 py-2 bg-slate-800 border border-slate-600 rounded text-white placeholder-slate-400 focus:border-slate-500 focus:outline-none text-sm\"\n                          />\n                          {businessPrompts.length > 1 && (\n                            <button\n                              onClick={() => removeBusinessPrompt(prompt.id)}\n                              className=\"p-2 text-slate-400 hover:text-slate-300 transition-colors\"\n                            >\n                              <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {businessPrompts.length < 5 && (\n                <button\n                  onClick={addBusinessPrompt}\n                  className=\"w-full py-3 border border-dashed border-slate-600 rounded text-slate-400 hover:border-slate-500 hover:text-slate-300 transition-colors flex items-center justify-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span>Add Question</span>\n                </button>\n              )}\n            </div>\n\n            {/* Status */}\n            <div className=\"bg-slate-700 border border-slate-600 rounded p-3\">\n              <div className=\"flex items-center space-x-3\">\n                <div className={`w-2 h-2 rounded-full ${\n                  businessPrompts.some(p => p.question.trim().length > 0) \n                    ? \"bg-slate-400\" \n                    : \"bg-slate-500\"\n                }`}></div>\n                <span className=\"text-sm text-slate-300\">\n                  {businessPrompts.filter(p => p.question.trim().length > 0).length} of {businessPrompts.length} questions configured\n                </span>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 flex items-center justify-center px-6 py-4\">\n      <div className=\"w-full max-w-4xl\">\n        {/* Visual Stepper */}\n        <motion.div \n          className=\"mb-8\"\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3, ease: [0.4, 0, 0.2, 1] }}\n        >\n          <div className=\"flex items-center justify-center max-w-lg mx-auto\">\n            {/* Step indicators */}\n            <div className=\"flex items-center space-x-3\">\n              {[1, 2, 3, 4, 5, 6].map((step, index) => (\n                <div key={step} className=\"flex items-center\">\n                  <div className=\"relative flex items-center justify-center\">\n                    <div \n                      className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                        currentStep >= step \n                          ? 'bg-blue-500 shadow-md' \n                          : 'bg-slate-600 border border-slate-500'\n                      }`}\n                    />\n                    {currentStep === step && (\n                      <div className=\"absolute w-5 h-5 rounded-full border border-blue-400/40 animate-pulse\" />\n                    )}\n                  </div>\n                  {index < 5 && (\n                    <div className={`w-8 h-0.5 mx-2 transition-colors duration-300 ${\n                      currentStep > step ? 'bg-blue-500/60' : 'bg-slate-600'\n                    }`} />\n                  )}\n                </div>\n              ))}\n            </div>\n            \n            {/* Step counter and label */}\n            <div className=\"ml-6 flex flex-col items-start\">\n              <div className=\"text-xs text-slate-500 font-medium mb-0.5\" style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}>\n                Step {currentStep} of 6\n              </div>\n              <div className=\"text-sm text-slate-300 font-medium\" style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}>\n                {currentStep === 1 && \"Welcome\"}\n                {currentStep === 2 && \"Use Case\"}\n                {(currentStep === 3 || currentStep === 4) && \"Connect Database\"}\n                {currentStep === 5 && \"Add Context\"}\n                {currentStep === 6 && \"Finish Setup\"}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"relative bg-slate-800 rounded-2xl shadow-2xl p-10 border border-slate-700\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.4, ease: [0.4, 0, 0.2, 1] }}\n        >\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key={currentStep}\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -20 }}\n              transition={{ duration: 0.3, ease: [0.4, 0, 0.2, 1] }}\n            >\n              {currentStep === 1 ? (\n                // Welcome screen has its own title\n                renderStepContent()\n              ) : (\n                <>\n                  <div className=\"mb-8\">\n                    <motion.h1 \n                      className=\"text-2xl font-semibold text-white mb-2\"\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      transition={{ delay: 0.1, duration: 0.3 }}\n                      style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                    >\n                      {steps[currentStep - 1].title}\n                    </motion.h1>\n                    <motion.p \n                      className=\"text-slate-400 text-base leading-relaxed\"\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      transition={{ delay: 0.2, duration: 0.3 }}\n                      style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                    >\n                      {steps[currentStep - 1].description}\n                    </motion.p>\n                  </div>\n                  {renderStepContent()}\n                </>\n              )}\n            </motion.div>\n          </AnimatePresence>\n\n          {/* Enterprise Navigation */}\n          <motion.div \n            className={`flex ${currentStep === 1 ? 'justify-center' : 'justify-between'} mt-8 pt-6 border-t border-slate-700`}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1, duration: 0.2, ease: [0.4, 0, 0.2, 1] }}\n          >\n            {currentStep > 1 && (\n              <button\n                onClick={handleBack}\n                className=\"flex items-center px-4 py-2 text-sm font-medium transition-colors text-slate-300 hover:text-white\"\n                style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n              >\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Back\n              </button>\n            )}\n\n            {currentStep === 3 ? (\n              <button\n                onClick={handleContinueToCredentials}\n                disabled={!canProceed()}\n                className={`flex items-center px-6 py-2 text-sm font-medium rounded border transition-all duration-200 ${\n                  canProceed()\n                    ? \"bg-slate-600 border-slate-500 text-white hover:bg-slate-500 hover:shadow-lg hover:shadow-slate-500/25 hover:-translate-y-0.5\"\n                    : \"bg-slate-700 border-slate-600 text-slate-400 cursor-not-allowed\"\n                }`}\n                style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n              >\n                Continue\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </button>\n            ) : currentStep === 4 ? (\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => setLocation(\"/dashboard\")}\n                  className=\"text-slate-400 hover:text-slate-300 text-sm font-medium transition-colors\"\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Skip for now\n                </button>\n                <button\n                  onClick={handleCredentialsSubmit}\n                  disabled={!canProceed() || isConnecting}\n                  className={`flex items-center px-6 py-2 text-sm font-medium rounded border transition-all duration-200 ${\n                    canProceed() && !isConnecting\n                      ? \"bg-slate-600 border-slate-500 text-white hover:bg-slate-500 hover:shadow-lg hover:shadow-slate-500/25 hover:-translate-y-0.5\"\n                      : \"bg-slate-700 border-slate-600 text-slate-400 cursor-not-allowed\"\n                  }`}\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  {isConnecting ? (\n                    <>\n                      <svg className=\"animate-spin -ml-1 mr-3 h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Connecting...\n                    </>\n                  ) : (\n                    <>\n                      Connect & Continue\n                      <ArrowRight className=\"w-4 h-4 ml-2\" />\n                    </>\n                  )}\n                </button>\n              </div>\n            ) : currentStep === 5 ? (\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => setLocation(\"/dashboard\")}\n                  className=\"text-slate-400 hover:text-slate-300 text-sm font-medium transition-colors\"\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Skip for now\n                </button>\n                <button\n                  onClick={handleNext}\n                  disabled={!canProceed()}\n                  className={`flex items-center px-6 py-2 text-sm font-medium rounded border transition-all duration-200 ${\n                    canProceed()\n                      ? \"bg-slate-600 border-slate-500 text-white hover:bg-slate-500 hover:shadow-lg hover:shadow-slate-500/25 hover:-translate-y-0.5\"\n                      : \"bg-slate-700 border-slate-600 text-slate-400 cursor-not-allowed\"\n                  }`}\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Continue to Business Questions\n                  <ArrowRight className=\"w-4 h-4 ml-2\" />\n                </button>\n              </div>\n            ) : currentStep === 6 ? (\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => setLocation(\"/dashboard\")}\n                  className=\"text-slate-400 hover:text-slate-300 text-sm font-medium transition-colors\"\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Skip for now\n                </button>\n                <button\n                  onClick={() => {\n                    console.log(\"Final Onboarding Configuration:\", {\n                      selectedTables,\n                      tableConfigs,\n                      businessPrompts,\n                      database: selectedDB,\n                      credentials: { ...credentials, password: '[REDACTED]' }\n                    });\n                    setLocation(\"/dashboard\");\n                  }}\n                  disabled={!canProceed()}\n                  className={`flex items-center px-6 py-2 text-sm font-medium rounded border transition-all duration-200 ${\n                    canProceed()\n                      ? \"bg-slate-600 border-slate-500 text-white hover:bg-slate-500 hover:shadow-lg hover:shadow-slate-500/25 hover:-translate-y-0.5\"\n                      : \"bg-slate-700 border-slate-600 text-slate-400 cursor-not-allowed\"\n                  }`}\n                  style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n                >\n                  Complete Setup\n                  <ArrowRight className=\"w-4 h-4 ml-2\" />\n                </button>\n              </div>\n            ) : currentStep > 1 ? (\n              <button\n                onClick={handleNext}\n                disabled={!canProceed()}\n                className={`flex items-center px-6 py-2 text-sm font-medium rounded border transition-colors ${\n                  canProceed()\n                    ? \"bg-slate-600 border-slate-500 text-white hover:bg-slate-500\"\n                    : \"bg-slate-700 border-slate-600 text-slate-400 cursor-not-allowed\"\n                }`}\n                style={{ fontFamily: '\"Segoe UI\", \"San Francisco\", system-ui, sans-serif' }}\n              >\n                Next\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </button>\n            ) : null}\n          </motion.div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}","size_bytes":58706},"client/src/pages/scenario-simulator.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { ChevronDown, Play, Save, Download, RotateCcw, TrendingUp, ArrowLeft, Plus, Info, ChevronRight } from 'lucide-react';\n// @ts-ignore\nimport { simulateScenario } from '@/data/formulas';\nimport { getEntityById, getEntitiesByType } from '@/data/entities';\n\n// Type definitions\ninterface SimulationResult {\n  current: {\n    revenue: number;\n    units: number;\n    margin: number;\n    serviceLevel: number;\n  };\n  simulated: {\n    revenue: number;\n    units: number;\n    margin: number;\n    serviceLevel: number;\n  };\n}\n\nexport default function ScenarioSimulator() {\n  const [entityType, setEntityType] = useState('products');\n  const [entityName, setEntityName] = useState('mangoSalsa');\n  const [timeHorizon, setTimeHorizon] = useState('12weeks');\n  const [showAssumptions, setShowAssumptions] = useState(false);\n  \n  const [variables, setVariables] = useState({\n    demandGrowth: 0.15, // 15%\n    priceChange: 0.0,   // 0%\n    promoMultiplier: 1.0, // No promotion\n    marketingSpend: 0.0, // 0% additional spend\n    leadTime: 14,       // 14 days\n    stockAvailable: 5000 // units\n  });\n\n  const [results, setResults] = useState<SimulationResult | null>(null);\n  const [isSimulating, setIsSimulating] = useState(false);\n\n  // Load entity data\n  const entities = getEntitiesByType(entityType);\n  const selectedEntity = getEntityById(entityType, entityName) as any;\n\n  useEffect(() => {\n    if (selectedEntity) {\n      setVariables(prev => ({\n        ...prev,\n        stockAvailable: selectedEntity.stockOnHand || 5000,\n        leadTime: selectedEntity.leadTime || 14\n      }));\n    }\n  }, [selectedEntity]);\n\n  const entityTypeOptions = [\n    { id: 'products', name: 'Product' },\n    { id: 'zones', name: 'Zone' },\n    { id: 'kpis', name: 'KPI' }\n  ];\n\n  const timeHorizonOptions = [\n    { id: '4weeks', name: '4 Weeks' },\n    { id: '12weeks', name: '12 Weeks' },\n    { id: '6months', name: '6 Months' },\n    { id: '1year', name: '1 Year' }\n  ];\n\n  const runSimulation = () => {\n    if (!selectedEntity) return;\n    \n    setIsSimulating(true);\n    setTimeout(() => {\n      const simulationInputs = {\n        entity: selectedEntity,\n        demandGrowth: variables.demandGrowth,\n        priceChange: variables.priceChange,\n        promoMultiplier: variables.promoMultiplier,\n        marketingSpend: variables.marketingSpend,\n        leadTime: variables.leadTime,\n        stockAvailable: variables.stockAvailable\n      };\n      \n      const scenarioResults = simulateScenario(simulationInputs);\n      setResults(scenarioResults);\n      setIsSimulating(false);\n    }, 1500);\n  };\n\n  const resetVariables = () => {\n    setVariables({\n      demandGrowth: 0,\n      priceChange: 0,\n      promoMultiplier: 1.0,\n      marketingSpend: 0.0,\n      leadTime: selectedEntity?.leadTime || 14,\n      stockAvailable: selectedEntity?.stockOnHand || 5000\n    });\n    setResults(null);\n  };\n\n  const handleSliderChange = (key: string, value: number) => {\n    setVariables(prev => ({ ...prev, [key]: value }));\n  };\n\n  const getInsight = (metric: string, current: number, simulated: number) => {\n    const change = ((simulated / current - 1) * 100);\n    \n    switch (metric) {\n      case 'revenue':\n        if (change > 5) return \"Revenue increased due to higher demand and price optimization\";\n        if (change < -5) return \"Revenue declined from reduced demand or pricing pressure\";\n        return \"Revenue remained stable with balanced demand-price dynamics\";\n      case 'margin':\n        if (change > 3) return \"Margin improved as price uplift outweighed promotion costs\";\n        if (change < -3) return \"Margin compressed due to promotional spending or cost increases\";\n        return \"Margin maintained through balanced pricing strategy\";\n      case 'serviceLevel':\n        if (change < -5) return \"Service level dropped because demand exceeds available inventory\";\n        if (change > 5) return \"Service level improved with better demand-supply balance\";\n        return \"Service level maintained within acceptable range\";\n      default:\n        return \"Performance adjusted based on scenario parameters\";\n    }\n  };\n\n  const getRecommendation = () => {\n    if (!results) return null;\n    \n    const serviceLevelChange = results.simulated.serviceLevel - results.current.serviceLevel;\n    const marginChange = ((results.simulated.margin / results.current.margin - 1) * 100);\n    \n    if (serviceLevelChange < -5) {\n      return \"Consider increasing stock levels or reducing lead time to improve service level\";\n    }\n    if (marginChange < -10) {\n      return \"Monitor margin compression - consider adjusting promotional intensity\";\n    }\n    if (marginChange > 15) {\n      return \"Strong margin performance - opportunity to reinvest in market expansion\";\n    }\n    return \"Current scenario parameters support balanced growth objectives\";\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex\">\n      {/* Left Sidebar */}\n      <div className=\"w-24 bg-slate-900/95 backdrop-blur-sm border-r border-slate-700/30 flex flex-col items-center py-8\">\n        <button\n          onClick={() => window.history.back()}\n          className=\"w-10 h-10 bg-blue-500/30 rounded-xl flex items-center justify-center mb-8 hover:bg-blue-500/40 transition-colors\"\n        >\n          <ArrowLeft className=\"w-5 h-5 text-blue-300\" />\n        </button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1\">\n        <div style={{ maxWidth: '1280px', margin: '0 auto', padding: '40px' }}>\n          {/* Header */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mb-12\"\n          >\n            <h1 className=\"text-4xl font-semibold mb-3 bg-gradient-to-r from-slate-200 to-blue-300 bg-clip-text text-transparent\">\n              AI Scenario Simulator\n            </h1>\n            <p className=\"text-slate-400 text-lg\">Model future outcomes with intelligent what-if analysis</p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Left Column - Configuration */}\n            <motion.div\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n              className=\"space-y-6\"\n            >\n              {/* Focus Selection */}\n              <div className=\"bg-slate-800/40 backdrop-blur-md rounded-2xl p-6 border border-slate-700/30\">\n                <h3 className=\"text-xl font-semibold text-slate-200 mb-4\">Focus Selection</h3>\n                \n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-slate-300 mb-2\">Type</label>\n                      <select\n                        value={entityType}\n                        onChange={(e) => setEntityType(e.target.value)}\n                        className=\"w-full bg-slate-700/50 border border-slate-600/50 rounded-lg px-3 py-2 text-slate-200 focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n                      >\n                        {entityTypeOptions.map(option => (\n                          <option key={option.id} value={option.id}>{option.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium text-slate-300 mb-2\">Time Horizon</label>\n                      <select\n                        value={timeHorizon}\n                        onChange={(e) => setTimeHorizon(e.target.value)}\n                        className=\"w-full bg-slate-700/50 border border-slate-600/50 rounded-lg px-3 py-2 text-slate-200 focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n                      >\n                        {timeHorizonOptions.map(option => (\n                          <option key={option.id} value={option.id}>{option.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-300 mb-2\">Entity</label>\n                    <select\n                      value={entityName}\n                      onChange={(e) => setEntityName(e.target.value)}\n                      className=\"w-full bg-slate-700/50 border border-slate-600/50 rounded-lg px-3 py-2 text-slate-200 focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n                    >\n                      {Object.values(entities).map((entity: any) => (\n                        <option key={entity.id} value={entity.id}>\n                          {entity.name || entity.title}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              {/* Demand & Pricing */}\n              <div className=\"bg-slate-800/40 backdrop-blur-md rounded-2xl p-6 border border-slate-700/30\">\n                <h3 className=\"text-xl font-semibold text-slate-200 mb-4\">Demand & Pricing</h3>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <label className=\"text-sm font-medium text-slate-300\">\n                        Demand Growth: {(variables.demandGrowth * 100).toFixed(1)}%\n                      </label>\n                      <button className=\"w-4 h-4 text-slate-400 hover:text-slate-300\" title=\"Expected percentage change in baseline demand\">\n                        <Info className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    <input\n                      type=\"range\"\n                      min=\"-0.5\"\n                      max=\"1.0\"\n                      step=\"0.05\"\n                      value={variables.demandGrowth}\n                      onChange={(e) => handleSliderChange('demandGrowth', parseFloat(e.target.value))}\n                      className=\"w-full h-2 bg-slate-700/50 rounded-lg appearance-none slider-thumb\"\n                    />\n                  </div>\n\n                  <div>\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <label className=\"text-sm font-medium text-slate-300\">\n                        Price Change: {(variables.priceChange * 100).toFixed(1)}%\n                      </label>\n                      <button className=\"w-4 h-4 text-slate-400 hover:text-slate-300\" title=\"Percentage adjustment to current pricing\">\n                        <Info className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    <input\n                      type=\"range\"\n                      min=\"-0.3\"\n                      max=\"0.3\"\n                      step=\"0.05\"\n                      value={variables.priceChange}\n                      onChange={(e) => handleSliderChange('priceChange', parseFloat(e.target.value))}\n                      className=\"w-full h-2 bg-slate-700/50 rounded-lg appearance-none slider-thumb\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Promotions & Marketing */}\n              <div className=\"bg-slate-800/40 backdrop-blur-md rounded-2xl p-6 border border-slate-700/30\">\n                <h3 className=\"text-xl font-semibold text-slate-200 mb-4\">Promotions & Marketing</h3>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <label className=\"text-sm font-medium text-slate-300\">\n                        Promo Multiplier: {variables.promoMultiplier.toFixed(1)}×\n                      </label>\n                      <button className=\"w-4 h-4 text-slate-400 hover:text-slate-300\" title=\"Demand uplift from promotional campaigns; 1.8× means 80% increase\">\n                        <Info className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    <input\n                      type=\"range\"\n                      min=\"1.0\"\n                      max=\"3.0\"\n                      step=\"0.1\"\n                      value={variables.promoMultiplier}\n                      onChange={(e) => handleSliderChange('promoMultiplier', parseFloat(e.target.value))}\n                      className=\"w-full h-2 bg-slate-700/50 rounded-lg appearance-none slider-thumb\"\n                    />\n                  </div>\n\n                  <div>\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <label className=\"text-sm font-medium text-slate-300\">\n                        Marketing Spend: {(variables.marketingSpend * 100).toFixed(1)}%\n                      </label>\n                      <button className=\"w-4 h-4 text-slate-400 hover:text-slate-300\" title=\"Additional marketing investment as percentage of revenue\">\n                        <Info className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    <input\n                      type=\"range\"\n                      min=\"0.0\"\n                      max=\"0.15\"\n                      step=\"0.01\"\n                      value={variables.marketingSpend}\n                      onChange={(e) => handleSliderChange('marketingSpend', parseFloat(e.target.value))}\n                      className=\"w-full h-2 bg-slate-700/50 rounded-lg appearance-none slider-thumb\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Supply Chain */}\n              <div className=\"bg-slate-800/40 backdrop-blur-md rounded-2xl p-6 border border-slate-700/30\">\n                <h3 className=\"text-xl font-semibold text-slate-200 mb-4\">Supply Chain</h3>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <label className=\"text-sm font-medium text-slate-300\">\n                        Lead Time: {variables.leadTime} days\n                      </label>\n                      <button className=\"w-4 h-4 text-slate-400 hover:text-slate-300\" title=\"Time between order placement and inventory availability\">\n                        <Info className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    <input\n                      type=\"range\"\n                      min=\"1\"\n                      max=\"30\"\n                      step=\"1\"\n                      value={variables.leadTime}\n                      onChange={(e) => handleSliderChange('leadTime', parseInt(e.target.value))}\n                      className=\"w-full h-2 bg-slate-700/50 rounded-lg appearance-none slider-thumb\"\n                    />\n                  </div>\n\n                  <div>\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <label className=\"text-sm font-medium text-slate-300\">\n                        Stock Available: {variables.stockAvailable.toLocaleString()} units\n                      </label>\n                      <button className=\"w-4 h-4 text-slate-400 hover:text-slate-300\" title=\"Current inventory available to meet demand\">\n                        <Info className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    <input\n                      type=\"range\"\n                      min=\"100\"\n                      max=\"10000\"\n                      step=\"100\"\n                      value={variables.stockAvailable}\n                      onChange={(e) => handleSliderChange('stockAvailable', parseInt(e.target.value))}\n                      className=\"w-full h-2 bg-slate-700/50 rounded-lg appearance-none slider-thumb\"\n                    />\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex gap-3 mt-6\">\n                  <button\n                    onClick={runSimulation}\n                    disabled={isSimulating}\n                    className=\"flex-1 bg-blue-600 hover:bg-blue-700 disabled:opacity-50 text-white px-4 py-2 rounded-lg font-medium transition-colors flex items-center justify-center gap-2\"\n                  >\n                    {isSimulating ? (\n                      <>\n                        <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                        Simulating...\n                      </>\n                    ) : (\n                      <>\n                        <Play className=\"w-4 h-4\" />\n                        Run Simulation\n                      </>\n                    )}\n                  </button>\n                  <button\n                    onClick={resetVariables}\n                    className=\"bg-slate-600 hover:bg-slate-700 text-white px-4 py-2 rounded-lg font-medium transition-colors flex items-center gap-2\"\n                  >\n                    <RotateCcw className=\"w-4 h-4\" />\n                    Reset\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Right Column - Results */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.4 }}\n              className=\"space-y-6\"\n            >\n              {/* Results Panel */}\n              <div className=\"bg-slate-800/40 backdrop-blur-md rounded-2xl p-6 border border-slate-700/30\">\n                <h3 className=\"text-xl font-semibold text-slate-200 mb-4\">Scenario Results</h3>\n                \n                {results ? (\n                  <div className=\"space-y-6\">\n                    {/* Metrics Comparison */}\n                    <div className=\"space-y-4\">\n                      {/* Revenue */}\n                      <div className=\"bg-slate-900/30 rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"text-sm font-medium text-slate-300\">Revenue</span>\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"text-lg font-semibold text-slate-200\">\n                              ${results.current.revenue.toLocaleString()}\n                            </span>\n                            <ChevronRight className=\"w-4 h-4 text-slate-500\" />\n                            <span className=\"text-lg font-semibold text-blue-300\">\n                              ${results.simulated.revenue.toLocaleString()}\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between items-center text-sm\">\n                          <span className=\"text-slate-400\">\n                            {getInsight('revenue', results.current.revenue, results.simulated.revenue)}\n                          </span>\n                          <span className={`font-medium ${\n                            results.simulated.revenue > results.current.revenue ? 'text-green-400' : 'text-red-400'\n                          }`}>\n                            Δ {((results.simulated.revenue / results.current.revenue - 1) * 100).toFixed(1)}%\n                          </span>\n                        </div>\n                      </div>\n\n                      {/* Units */}\n                      <div className=\"bg-slate-900/30 rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"text-sm font-medium text-slate-300\">Units Sold</span>\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"text-lg font-semibold text-slate-200\">\n                              {results.current.units.toLocaleString()}\n                            </span>\n                            <ChevronRight className=\"w-4 h-4 text-slate-500\" />\n                            <span className=\"text-lg font-semibold text-blue-300\">\n                              {results.simulated.units.toLocaleString()}\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between items-center text-sm\">\n                          <span className=\"text-slate-400\">Volume change from demand and promotion effects</span>\n                          <span className={`font-medium ${\n                            results.simulated.units > results.current.units ? 'text-green-400' : 'text-red-400'\n                          }`}>\n                            Δ {((results.simulated.units / results.current.units - 1) * 100).toFixed(1)}%\n                          </span>\n                        </div>\n                      </div>\n\n                      {/* Margin */}\n                      <div className=\"bg-slate-900/30 rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"text-sm font-medium text-slate-300\">Gross Margin</span>\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"text-lg font-semibold text-slate-200\">\n                              ${results.current.margin.toLocaleString()}\n                            </span>\n                            <ChevronRight className=\"w-4 h-4 text-slate-500\" />\n                            <span className=\"text-lg font-semibold text-blue-300\">\n                              ${results.simulated.margin.toLocaleString()}\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between items-center text-sm\">\n                          <span className=\"text-slate-400\">\n                            {getInsight('margin', results.current.margin, results.simulated.margin)}\n                          </span>\n                          <span className={`font-medium ${\n                            results.simulated.margin > results.current.margin ? 'text-green-400' : 'text-red-400'\n                          }`}>\n                            Δ {((results.simulated.margin / results.current.margin - 1) * 100).toFixed(1)}%\n                          </span>\n                        </div>\n                      </div>\n\n                      {/* Service Level */}\n                      <div className=\"bg-slate-900/30 rounded-lg p-4\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"text-sm font-medium text-slate-300\">Service Level</span>\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"text-lg font-semibold text-slate-200\">\n                              {results.current.serviceLevel}%\n                            </span>\n                            <ChevronRight className=\"w-4 h-4 text-slate-500\" />\n                            <span className=\"text-lg font-semibold text-blue-300\">\n                              {results.simulated.serviceLevel}%\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between items-center text-sm\">\n                          <span className=\"text-slate-400\">\n                            {getInsight('serviceLevel', results.current.serviceLevel, results.simulated.serviceLevel)}\n                          </span>\n                          <span className={`font-medium ${\n                            results.simulated.serviceLevel > results.current.serviceLevel ? 'text-green-400' : 'text-red-400'\n                          }`}>\n                            Δ {(results.simulated.serviceLevel - results.current.serviceLevel).toFixed(1)}pp\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Recommendations */}\n                    <div className=\"bg-gradient-to-r from-blue-900/20 to-slate-900/20 rounded-lg p-4 border border-blue-700/30\">\n                      <h4 className=\"text-sm font-semibold text-blue-300 mb-2\">Recommended Actions</h4>\n                      <p className=\"text-sm text-slate-300\">{getRecommendation()}</p>\n                    </div>\n\n                    {/* Action Buttons - Unified Style */}\n                    <div className=\"flex gap-3 justify-end\">\n                      <button className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center gap-2\">\n                        <Save className=\"w-4 h-4\" />\n                        Save Scenario\n                      </button>\n                      <button className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center gap-2\">\n                        <Download className=\"w-4 h-4\" />\n                        Export PDF\n                      </button>\n                      <button className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center gap-2\">\n                        <Plus className=\"w-4 h-4\" />\n                        Add Task\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-12\">\n                    <div className=\"w-16 h-16 bg-slate-700/30 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                      <TrendingUp className=\"w-8 h-8 text-slate-400\" />\n                    </div>\n                    <p className=\"text-slate-400 text-lg mb-2\">Ready to simulate scenarios</p>\n                    <p className=\"text-slate-500 text-sm\">Adjust variables on the left and run simulation to see projected outcomes</p>\n                  </div>\n                )}\n              </div>\n\n              {/* Model Assumptions */}\n              <div className=\"bg-slate-800/40 backdrop-blur-md rounded-2xl border border-slate-700/30\">\n                <button\n                  onClick={() => setShowAssumptions(!showAssumptions)}\n                  className=\"w-full p-6 text-left flex items-center justify-between hover:bg-slate-700/20 transition-colors rounded-2xl\"\n                >\n                  <h3 className=\"text-lg font-semibold text-slate-200\">Model Assumptions</h3>\n                  <ChevronDown className={`w-5 h-5 text-slate-400 transition-transform ${showAssumptions ? 'rotate-180' : ''}`} />\n                </button>\n                \n                {showAssumptions && (\n                  <div className=\"px-6 pb-6 space-y-3 text-sm text-slate-300\">\n                    <div className=\"bg-slate-900/30 rounded-lg p-3\">\n                      <span className=\"font-medium text-slate-200\">Demand Forecast = </span>\n                      baseline units × (1 + demand growth) × promo multiplier\n                    </div>\n                    <div className=\"bg-slate-900/30 rounded-lg p-3\">\n                      <span className=\"font-medium text-slate-200\">Effective Price = </span>\n                      baseline price × (1 + price change)\n                    </div>\n                    <div className=\"bg-slate-900/30 rounded-lg p-3\">\n                      <span className=\"font-medium text-slate-200\">Revenue = </span>\n                      demand forecast × effective price\n                    </div>\n                    <div className=\"bg-slate-900/30 rounded-lg p-3\">\n                      <span className=\"font-medium text-slate-200\">Service Level = </span>\n                      min(100%, (Stock Available / Demand Forecast) × lead time adjustment)\n                    </div>\n                    <div className=\"bg-slate-900/30 rounded-lg p-3\">\n                      <span className=\"font-medium text-slate-200\">Gross Margin = </span>\n                      revenue × margin rate - (marketing spend × revenue)\n                    </div>\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":28627},"client/src/pages/signup.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { motion } from \"framer-motion\";\n\nexport default function Signup() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [, setLocation] = useLocation();\n\n  const handleSignup = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords don't match\");\n      return;\n    }\n\n    if (password.length < 6) {\n      setError(\"Password must be at least 6 characters\");\n      return;\n    }\n\n    // TEMP: Replace with real auth logic\n    // For now, just redirect to onboarding\n    setLocation(\"/onboarding\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-[#0f0f23] via-[#1a1a2e] to-[#16213e] flex items-center justify-center px-4\">\n      <motion.div \n        className=\"w-full max-w-md p-8 rounded-2xl shadow-xl border border-blue-500/20 bg-gradient-to-br from-[#1c2340] to-[#2a3b5c]\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n      >\n        <h1 className=\"text-2xl font-semibold text-white mb-6 text-center\">\n          Sign up for <span className=\"text-blue-400 font-bold\">VORTA</span>\n        </h1>\n\n        <form onSubmit={handleSignup} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm text-blue-200 mb-1\">Email</label>\n            <input \n              type=\"email\"\n              className=\"w-full px-4 py-2 border border-blue-500/30 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 bg-[#1a1a2e]/50 text-white placeholder-blue-200/50\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm text-blue-200 mb-1\">Password</label>\n            <input \n              type=\"password\"\n              className=\"w-full px-4 py-2 border border-blue-500/30 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 bg-[#1a1a2e]/50 text-white placeholder-blue-200/50\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm text-blue-200 mb-1\">Confirm Password</label>\n            <input \n              type=\"password\"\n              className=\"w-full px-4 py-2 border border-blue-500/30 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 bg-[#1a1a2e]/50 text-white placeholder-blue-200/50\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n\n          <button\n            type=\"submit\"\n            className=\"w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white py-2 rounded-xl hover:from-blue-500 hover:to-blue-600 transition\"\n          >\n            Sign up\n          </button>\n        </form>\n\n        <p className=\"text-sm text-blue-200 mt-4 text-center\">\n          Already have an account?{\" \"}\n          <a href=\"/login\" className=\"text-blue-400 font-medium underline hover:text-blue-300\">\n            Log in\n          </a>\n        </p>\n      </motion.div>\n    </div>\n  );\n}","size_bytes":3464},"client/src/pages/table-config-demo.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\n\nexport default function TableConfigDemo() {\n  const [selectedTables, setSelectedTables] = useState<string[]>(['customers', 'orders']);\n  const [tableConfigs, setTableConfigs] = useState<Record<string, {\n    displayName: string;\n    columnDescriptions: Record<string, string>;\n    businessQuestions: string[];\n  }>>({\n    customers: {\n      displayName: \"Customer Database\",\n      columnDescriptions: {\n        customer_id: \"Unique Customer ID\",\n        company_name: \"Business Name\",\n        contact_email: \"Primary Email\",\n        territory_id: \"Sales Territory\",\n        created_date: \"Registration Date\",\n        status: \"Account Status\"\n      },\n      businessQuestions: [\n        \"Which customers haven't ordered this month?\",\n        \"What's our customer retention rate by territory?\",\n        \"Which high-value customers are at risk?\"\n      ]\n    },\n    orders: {\n      displayName: \"Order History\",\n      columnDescriptions: {\n        order_id: \"Order Number\",\n        customer_id: \"Customer Reference\",\n        product_id: \"Product SKU\",\n        quantity: \"Items Ordered\",\n        order_date: \"Purchase Date\",\n        total_amount: \"Order Value\",\n        status: \"Order Status\"\n      },\n      businessQuestions: [\n        \"What's our average order value trend?\",\n        \"Which products are selling fastest?\",\n        \"What's our order fulfillment rate?\"\n      ]\n    }\n  });\n\n  const mockTables = [\n    { \n      name: \"customers\", \n      columns: [\"customer_id\", \"company_name\", \"contact_email\", \"territory_id\", \"created_date\", \"status\"],\n      description: \"Customer information and contact details\" \n    },\n    { \n      name: \"orders\", \n      columns: [\"order_id\", \"customer_id\", \"product_id\", \"quantity\", \"order_date\", \"total_amount\", \"status\"],\n      description: \"Order history and transaction data\" \n    },\n    { \n      name: \"products\", \n      columns: [\"product_id\", \"product_name\", \"category\", \"price\", \"stock_quantity\", \"supplier_id\"],\n      description: \"Product catalog and inventory\" \n    }\n  ];\n\n  const formatTableName = (tableName: string): string => {\n    return tableName\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  const updateTableConfig = (tableName: string, field: keyof typeof tableConfigs[string], value: any) => {\n    setTableConfigs(prev => ({\n      ...prev,\n      [tableName]: {\n        ...prev[tableName],\n        [field]: value\n      }\n    }));\n  };\n\n  const updateBusinessQuestion = (tableName: string, questionIndex: number, question: string) => {\n    const config = tableConfigs[tableName];\n    if (config) {\n      const newQuestions = [...config.businessQuestions];\n      newQuestions[questionIndex] = question;\n      updateTableConfig(tableName, 'businessQuestions', newQuestions);\n    }\n  };\n\n  const toggleTable = (tableName: string) => {\n    setSelectedTables(prev => \n      prev.includes(tableName) \n        ? prev.filter(t => t !== tableName)\n        : [...prev, tableName]\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 p-8\">\n      <div className=\"max-w-5xl mx-auto\">\n        <div className=\"mb-12\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h1 className=\"text-2xl font-semibold text-slate-100 mb-3\">Database Schema Configuration</h1>\n              <p className=\"text-slate-400 text-sm leading-relaxed max-w-2xl\">\n                Configure your database tables to help VORTA understand your business context and provide more accurate insights.\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-3 px-4 py-2 bg-slate-800/60 border border-slate-700/40 rounded-lg\">\n              <div className=\"w-2 h-2 bg-emerald-400 rounded-full\"></div>\n              <span className=\"text-slate-300 text-sm font-medium\">PostgreSQL Connected</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-8\">\n          {/* Table Selection Section */}\n          <div className=\"mb-8\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <svg className=\"w-4 h-4 text-slate-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm0 4a1 1 0 011-1h12a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1V8z\" clipRule=\"evenodd\" />\n              </svg>\n              <h2 className=\"text-lg font-medium text-slate-200\">Available Tables</h2>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n              {mockTables.map((table) => {\n                const isSelected = selectedTables.includes(table.name);\n                return (\n                  <motion.button\n                    key={table.name}\n                    className={`p-4 rounded-lg border text-left transition-all group focus:outline-none focus:ring-2 focus:ring-slate-600 ${\n                      isSelected\n                        ? \"border-slate-600 bg-slate-800/60\"\n                        : \"border-slate-700/60 hover:border-slate-600 hover:bg-slate-800/40\"\n                    }`}\n                    onClick={() => toggleTable(table.name)}\n                    whileHover={{ scale: 1.005 }}\n                    whileTap={{ scale: 0.995 }}\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className={`w-5 h-5 rounded border-2 flex items-center justify-center ${\n                          isSelected \n                            ? \"border-slate-500 bg-slate-600\" \n                            : \"border-slate-600 bg-slate-700/60\"\n                        }`}>\n                          {isSelected && (\n                            <svg className=\"w-3 h-3 text-slate-200\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                            </svg>\n                          )}\n                        </div>\n                        <span className=\"text-sm font-medium text-slate-200\">\n                          {formatTableName(table.name)}\n                        </span>\n                      </div>\n                    </div>\n                    <p className=\"text-xs text-slate-500 leading-relaxed\">\n                      {table.description}\n                    </p>\n                  </motion.button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Configuration Section */}\n          {selectedTables.length > 0 && (\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"space-y-6\"\n            >\n              <div className=\"border-t border-slate-700/40 pt-8\">\n                <div className=\"flex items-center space-x-2 mb-6\">\n                  <svg className=\"w-4 h-4 text-slate-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <h2 className=\"text-lg font-medium text-slate-200\">Table Configuration</h2>\n                  <span className=\"text-sm text-slate-500\">({selectedTables.length} selected)</span>\n                </div>\n              </div>\n\n              {selectedTables.map((tableName) => {\n                const table = mockTables.find(t => t.name === tableName);\n                const config = tableConfigs[tableName];\n                \n                if (!table || !config) return null;\n\n                return (\n                  <motion.div\n                    key={tableName}\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    className=\"bg-gradient-to-br from-slate-800/50 to-slate-800/30 border border-slate-600/30 rounded-xl p-8 shadow-xl backdrop-blur-sm\"\n                  >\n                    {/* Table Header */}\n                    <div className=\"flex items-start justify-between mb-8\">\n                      <div className=\"flex items-start space-x-5\">\n                        <div className=\"w-12 h-12 bg-gradient-to-br from-slate-600/80 to-slate-700/80 rounded-xl flex items-center justify-center border border-slate-500/30 shadow-lg\">\n                          {/* Modern database icon with interconnected nodes */}\n                          <svg className=\"w-6 h-6 text-slate-200\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1.5}>\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0-2.278-3.694-4.125-8.25-4.125s-8.25 1.847-8.25 4.125\" />\n                          </svg>\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <div className=\"group\">\n                            <input\n                              value={config.displayName}\n                              onChange={(e) => updateTableConfig(tableName, 'displayName', e.target.value)}\n                              className=\"text-xl font-semibold text-slate-50 bg-transparent border-none outline-none focus:bg-slate-700/20 rounded-lg px-3 py-2 w-full group-hover:bg-slate-700/10 transition-all duration-200\"\n                              placeholder=\"Table display name\"\n                            />\n                          </div>\n                          <div className=\"flex items-center space-x-3 mt-2 px-3\">\n                            <span className=\"text-xs font-medium text-slate-400 bg-slate-700/40 px-2 py-1 rounded-md border border-slate-600/30\">\n                              {tableName}\n                            </span>\n                            <span className=\"text-xs text-slate-500\">•</span>\n                            <span className=\"text-xs text-slate-500\">\n                              {table.columns.length} columns\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <button\n                          onClick={() => toggleTable(tableName)}\n                          className=\"text-slate-500 hover:text-slate-400 hover:bg-slate-700/40 transition-all duration-200 p-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-slate-500/50\"\n                          title=\"Remove table\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </button>\n                      </div>\n                    </div>\n\n                    {/* Business Questions Section */}\n                    <div className=\"mb-8\">\n                      <div className=\"flex items-center justify-between mb-6\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-8 h-8 bg-gradient-to-br from-slate-600/60 to-slate-700/60 rounded-lg flex items-center justify-center border border-slate-500/30\">\n                            {/* Simple question mark icon */}\n                            <svg className=\"w-4 h-4 text-slate-300\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clipRule=\"evenodd\" />\n                            </svg>\n                          </div>\n                          <div>\n                            <h4 className=\"text-base font-medium text-slate-200\">Business Context Questions</h4>\n                            <p className=\"text-xs text-slate-500 mt-0.5\">Help VORTA understand your data patterns</p>\n                          </div>\n                        </div>\n                        <div className=\"group relative\">\n                          <button className=\"w-6 h-6 bg-slate-700/40 hover:bg-slate-600/50 rounded-full flex items-center justify-center border border-slate-600/40 transition-colors\">\n                            <svg className=\"w-3 h-3 text-slate-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                            </svg>\n                          </button>\n                          <div className=\"invisible group-hover:visible absolute bottom-full right-0 mb-2 p-3 bg-slate-800/90 border border-slate-600/50 text-xs text-slate-300 rounded-lg shadow-xl whitespace-nowrap z-10 backdrop-blur-sm\">\n                            Define questions to train AI for better insights\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"space-y-4\">\n                        {config.businessQuestions.map((question, idx) => (\n                          <div key={idx} className=\"group\">\n                            <div className=\"relative\">\n                              <div className=\"absolute left-4 top-1/2 -translate-y-1/2 flex items-center justify-center w-6 h-6 bg-slate-600/40 border border-slate-500/30 rounded-full\">\n                                <span className=\"text-xs text-slate-400 font-medium\">{idx + 1}</span>\n                              </div>\n                              <input\n                                value={question}\n                                onChange={(e) => updateBusinessQuestion(tableName, idx, e.target.value)}\n                                placeholder=\"e.g., Which customers haven't ordered this month?\"\n                                className=\"w-full pl-12 pr-4 py-3.5 bg-slate-700/20 border border-slate-600/40 rounded-xl text-sm text-slate-200 placeholder-slate-500 focus:border-slate-500/60 focus:bg-slate-700/30 focus:outline-none focus:ring-2 focus:ring-slate-500/20 transition-all duration-200 group-hover:bg-slate-700/25\"\n                              />\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Column Mapping Section */}\n                    <div className=\"border-t border-slate-600/20 pt-8\">\n                      <div className=\"flex items-center justify-between mb-6\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-8 h-8 bg-gradient-to-br from-slate-600/60 to-slate-700/60 rounded-lg flex items-center justify-center border border-slate-500/30\">\n                            {/* Modern mapping/transformation icon */}\n                            <svg className=\"w-4 h-4 text-slate-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={1.5}>\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M7.5 21L3 16.5m0 0L7.5 12M3 16.5h13.5m0-13.5L21 7.5m0 0L16.5 12M21 7.5H7.5\" />\n                            </svg>\n                          </div>\n                          <div>\n                            <h4 className=\"text-base font-medium text-slate-200\">Column Mapping</h4>\n                            <p className=\"text-xs text-slate-500 mt-0.5\">Map database fields to business terminology</p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-xs text-slate-500 bg-slate-700/40 px-2 py-1 rounded-md border border-slate-600/30\">\n                            {table.columns.length} fields\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"space-y-3\">\n                        {table.columns.slice(0, 6).map((column) => (\n                          <div key={column} className=\"group\">\n                            <div className=\"flex items-center space-x-4 p-3 bg-slate-700/10 hover:bg-slate-700/20 rounded-lg border border-slate-600/20 transition-all duration-200\">\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"flex items-center space-x-2\">\n                                  <div className=\"w-2 h-2 bg-slate-500 rounded-full\"></div>\n                                  <span className=\"text-xs font-mono text-slate-400 bg-slate-700/40 px-2 py-1 rounded-md border border-slate-600/30 min-w-0\">\n                                    {column}\n                                  </span>\n                                </div>\n                              </div>\n                              <div className=\"flex-1 min-w-0\">\n                                <input\n                                  value={config.columnDescriptions[column] || ''}\n                                  onChange={(e) => {\n                                    const newDescriptions = { ...config.columnDescriptions };\n                                    newDescriptions[column] = e.target.value;\n                                    updateTableConfig(tableName, 'columnDescriptions', newDescriptions);\n                                  }}\n                                  placeholder=\"Describe this field for business users...\"\n                                  className=\"w-full px-3 py-2 bg-slate-700/20 border border-slate-600/40 rounded-lg text-sm text-slate-200 placeholder-slate-500 focus:border-slate-500/60 focus:bg-slate-700/30 focus:outline-none focus:ring-2 focus:ring-slate-500/20 transition-all duration-200\"\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                      {table.columns.length > 6 && (\n                        <div className=\"mt-6 pt-4 border-t border-slate-700/20\">\n                          <div className=\"flex items-center justify-center p-3 bg-slate-700/10 rounded-lg border border-slate-600/20\">\n                            <p className=\"text-sm text-slate-400 flex items-center space-x-2\">\n                              <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                              </svg>\n                              <span>{table.columns.length - 6} additional columns available for mapping</span>\n                            </p>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </motion.div>\n                );\n              })}\n            </motion.div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":20431},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}